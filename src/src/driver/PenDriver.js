!(function (t, e) {
    "object" == typeof exports && "object" == typeof module
        ? (module.exports = e())
        : "function" == typeof define && define.amd
        ? define([], e)
        : "object" == typeof exports
        ? (exports.TStudyDigitalPen = e())
        : (t.TStudyDigitalPen = e());
})(this, function () {
    return (function (t) {
        var e = {};
        function n(r) {
            if (e[r]) return e[r].exports;
            var i = (e[r] = { i: r, l: !1, exports: {} });
            return t[r].call(i.exports, i, i.exports, n), (i.l = !0), i.exports;
        }
        return (
            (n.m = t),
            (n.c = e),
            (n.d = function (t, e, r) {
                n.o(t, e) ||
                    Object.defineProperty(t, e, { enumerable: !0, get: r });
            }),
            (n.r = function (t) {
                "undefined" != typeof Symbol &&
                    Symbol.toStringTag &&
                    Object.defineProperty(t, Symbol.toStringTag, {
                        value: "Module",
                    }),
                    Object.defineProperty(t, "__esModule", { value: !0 });
            }),
            (n.t = function (t, e) {
                if ((1 & e && (t = n(t)), 8 & e)) return t;
                if (4 & e && "object" == typeof t && t && t.__esModule)
                    return t;
                var r = Object.create(null);
                if (
                    (n.r(r),
                    Object.defineProperty(r, "default", {
                        enumerable: !0,
                        value: t,
                    }),
                    2 & e && "string" != typeof t)
                )
                    for (var i in t)
                        n.d(
                            r,
                            i,
                            function (e) {
                                return t[e];
                            }.bind(null, i)
                        );
                return r;
            }),
            (n.n = function (t) {
                var e =
                    t && t.__esModule
                        ? function () {
                              return t.default;
                          }
                        : function () {
                              return t;
                          };
                return n.d(e, "a", e), e;
            }),
            (n.o = function (t, e) {
                return Object.prototype.hasOwnProperty.call(t, e);
            }),
            (n.p = ""),
            n((n.s = 12))
        );
    })([
        function (t, e) {
            t.exports = {
                DEFAULT_TIMESTAMP: 1514736e6,
                BIG_PACKAGE_SIZE: 1912,
                SMALL_PACKAGE_SIZE: 15,
                INTERVAL_REWRITE_LAST_BUFFER: 100,
                INTERVAL_REWRITE_PACKAGE: 3e3,
                INTERVAL_RECONNECT_BLUETOOTH: 2e3,
                INTERVAL_REWRITE_HEADER: 2e3,
                ReadPenInfoType: {
                    Battery: 1,
                    OffLineDataSize: 2,
                    Info: 3,
                    startCoord: 4,
                    storgeCoord: 5,
                },
                CoordType: {
                    STOP_RECEIVE_MODE_NUM: 0,
                    START_RECEIVE_MODE_NUM: 1,
                    RECEIVE_STORAGE_MODE_NUM: 2,
                    RECEIVE_REALTIME_MODE_NUM: 3,
                    SET_HOVER_MODE_NUM: 4,
                },
                StrokeEvent: [
                    { name: "下标为0", length: 0 },
                    { name: "Pen Down", length: 7 },
                    { name: "系列编号", length: 2 },
                    { name: "应用页地址", length: 7 },
                    { name: "页内绝对地址", length: 6 },
                    { name: "解析错误", length: 3 },
                    { name: "页内相对偏移地址", length: 4 },
                    { name: "Pen Up", length: 5 },
                ],
                UpgradeState: {
                    Default: -2,
                    Fail: -1,
                    Success: 0,
                    ReadingPosition: 1,
                    SendingIAP: 2,
                    ReconnectBLE: 3,
                    EndLatestPackage: 4,
                    Downloading: 5,
                    WritingHeader: 6,
                    WritingBody: 7,
                    Restarting: 8,
                },
                State: { install: 0, success: 1, fail: -1 },
                PositionType: { App: 1, Root: 2 },
                publicKey_pkcs8:
                    "-----BEGIN PUBLIC KEY-----MIGdMA0GCSqGSIb3DQEBAQUAA4GLADCBhwKBgQC2U5Len4+zOIGMA44cZ7sVWdaqcjRsluDzJXbtkV0bC2M8kWYMUs6fhNXvqorjWLb0Tc2x4WDiOz9kmY/XE393yI+Og/uC6EBzRp2PQGtP1Y80cX5E3grHtbjjlMVqXm/TbAdCkBj9eZzE+rfrtAFX+kfb+07H0KBreKMvD0U9SwIBEQ==-----END PUBLIC KEY-----",
                SDK_VERSION: "1.0.2",
            };
        },
        function (t, e) {
            function n(t, e) {
                for (var n in t) e[n] = t[n];
            }
            function r(t, e) {
                var r = t.prototype;
                if (!(r instanceof e)) {
                    function i() {}
                    (i.prototype = e.prototype),
                        n(r, (i = new i())),
                        (t.prototype = r = i);
                }
                r.constructor != t && (r.constructor = t);
            }
            var i = {},
                s = (i.ELEMENT_NODE = 1),
                a = (i.ATTRIBUTE_NODE = 2),
                o = (i.TEXT_NODE = 3),
                h = (i.CDATA_SECTION_NODE = 4),
                u = (i.ENTITY_REFERENCE_NODE = 5),
                c = (i.ENTITY_NODE = 6),
                l = (i.PROCESSING_INSTRUCTION_NODE = 7),
                f = (i.COMMENT_NODE = 8),
                d = (i.DOCUMENT_NODE = 9),
                g = (i.DOCUMENT_TYPE_NODE = 10),
                p = (i.DOCUMENT_FRAGMENT_NODE = 11),
                y = (i.NOTATION_NODE = 12),
                m = {},
                v = {},
                S =
                    ((m.INDEX_SIZE_ERR = ((v[1] = "Index size error"), 1)),
                    (m.DOMSTRING_SIZE_ERR =
                        ((v[2] = "DOMString size error"), 2)),
                    (m.HIERARCHY_REQUEST_ERR =
                        ((v[3] = "Hierarchy request error"), 3))),
                A =
                    ((m.WRONG_DOCUMENT_ERR = ((v[4] = "Wrong document"), 4)),
                    (m.INVALID_CHARACTER_ERR =
                        ((v[5] = "Invalid character"), 5)),
                    (m.NO_DATA_ALLOWED_ERR = ((v[6] = "No data allowed"), 6)),
                    (m.NO_MODIFICATION_ALLOWED_ERR =
                        ((v[7] = "No modification allowed"), 7)),
                    (m.NOT_FOUND_ERR = ((v[8] = "Not found"), 8))),
                b =
                    ((m.NOT_SUPPORTED_ERR = ((v[9] = "Not supported"), 9)),
                    (m.INUSE_ATTRIBUTE_ERR =
                        ((v[10] = "Attribute in use"), 10)));
            function E(t, e) {
                if (e instanceof Error) var n = e;
                else
                    (n = this),
                        Error.call(this, v[t]),
                        (this.message = v[t]),
                        Error.captureStackTrace &&
                            Error.captureStackTrace(this, E);
                return (
                    (n.code = t),
                    e && (this.message = this.message + ": " + e),
                    n
                );
            }
            function x() {}
            function w(t, e) {
                (this._node = t), (this._refresh = e), F(this);
            }
            function F(t) {
                var e = t._node._inc || t._node.ownerDocument._inc;
                if (t._inc != e) {
                    var r = t._refresh(t._node);
                    et(t, "length", r.length), n(r, t), (t._inc = e);
                }
            }
            function P() {}
            function C(t, e) {
                for (var n = t.length; n--; ) if (t[n] === e) return n;
            }
            function D(t, e, n, r) {
                if ((r ? (e[C(e, r)] = n) : (e[e.length++] = n), t)) {
                    n.ownerElement = t;
                    var i = t.ownerDocument;
                    i &&
                        (r && B(i, t, r),
                        (function (t, e, n) {
                            t && t._inc++,
                                "http://www.w3.org/2000/xmlns/" ==
                                    n.namespaceURI &&
                                    (e._nsMap[n.prefix ? n.localName : ""] =
                                        n.value);
                        })(i, t, n));
                }
            }
            function O(t, e, n) {
                var r = C(e, n);
                if (!(r >= 0)) throw E(A, new Error(t.tagName + "@" + n));
                for (var i = e.length - 1; r < i; ) e[r] = e[++r];
                if (((e.length = i), t)) {
                    var s = t.ownerDocument;
                    s && (B(s, t, n), (n.ownerElement = null));
                }
            }
            function T(t) {
                if (((this._features = {}), t))
                    for (var e in t) this._features = t[e];
            }
            function H() {}
            function I(t) {
                return (
                    ("<" == t ? "&lt;" : ">" == t && "&gt;") ||
                    ("&" == t && "&amp;") ||
                    ('"' == t && "&quot;") ||
                    "&#" + t.charCodeAt() + ";"
                );
            }
            function R(t, e) {
                if (e(t)) return !0;
                if ((t = t.firstChild))
                    do {
                        if (R(t, e)) return !0;
                    } while ((t = t.nextSibling));
            }
            function N() {}
            function B(t, e, n, r) {
                t && t._inc++,
                    "http://www.w3.org/2000/xmlns/" == n.namespaceURI &&
                        delete e._nsMap[n.prefix ? n.localName : ""];
            }
            function j(t, e, n) {
                if (t && t._inc) {
                    t._inc++;
                    var r = e.childNodes;
                    if (n) r[r.length++] = n;
                    else {
                        for (var i = e.firstChild, s = 0; i; )
                            (r[s++] = i), (i = i.nextSibling);
                        r.length = s;
                    }
                }
            }
            function _(t, e) {
                var n = e.previousSibling,
                    r = e.nextSibling;
                return (
                    n ? (n.nextSibling = r) : (t.firstChild = r),
                    r ? (r.previousSibling = n) : (t.lastChild = n),
                    j(t.ownerDocument, t),
                    e
                );
            }
            function V(t, e, n) {
                var r = e.parentNode;
                if ((r && r.removeChild(e), e.nodeType === p)) {
                    var i = e.firstChild;
                    if (null == i) return e;
                    var s = e.lastChild;
                } else i = s = e;
                var a = n ? n.previousSibling : t.lastChild;
                (i.previousSibling = a),
                    (s.nextSibling = n),
                    a ? (a.nextSibling = i) : (t.firstChild = i),
                    null == n ? (t.lastChild = s) : (n.previousSibling = s);
                do {
                    i.parentNode = t;
                } while (i !== s && (i = i.nextSibling));
                return (
                    j(t.ownerDocument || t, t),
                    e.nodeType == p && (e.firstChild = e.lastChild = null),
                    e
                );
            }
            function K() {
                this._nsMap = {};
            }
            function L() {}
            function k() {}
            function M() {}
            function U() {}
            function q() {}
            function z() {}
            function Y() {}
            function W() {}
            function G() {}
            function X() {}
            function J() {}
            function $() {}
            function Z(t, e) {
                var n = [],
                    r = (9 == this.nodeType && this.documentElement) || this,
                    i = r.prefix,
                    s = r.namespaceURI;
                if (s && null == i && null == (i = r.lookupPrefix(s)))
                    var a = [{ namespace: s, prefix: null }];
                return tt(this, n, t, e, a), n.join("");
            }
            function Q(t, e, n) {
                var r = t.prefix || "",
                    i = t.namespaceURI;
                if (!r && !i) return !1;
                if (
                    ("xml" === r &&
                        "http://www.w3.org/XML/1998/namespace" === i) ||
                    "http://www.w3.org/2000/xmlns/" == i
                )
                    return !1;
                for (var s = n.length; s--; ) {
                    var a = n[s];
                    if (a.prefix == r) return a.namespace != i;
                }
                return !0;
            }
            function tt(t, e, n, r, i) {
                if (r) {
                    if (!(t = r(t))) return;
                    if ("string" == typeof t) return void e.push(t);
                }
                switch (t.nodeType) {
                    case s:
                        i || (i = []), i.length;
                        var c = t.attributes,
                            y = c.length,
                            m = t.firstChild,
                            v = t.tagName;
                        (n =
                            "http://www.w3.org/1999/xhtml" === t.namespaceURI ||
                            n),
                            e.push("<", v);
                        for (var S = 0; S < y; S++)
                            "xmlns" == (A = c.item(S)).prefix
                                ? i.push({
                                      prefix: A.localName,
                                      namespace: A.value,
                                  })
                                : "xmlns" == A.nodeName &&
                                  i.push({ prefix: "", namespace: A.value });
                        for (S = 0; S < y; S++) {
                            var A;
                            if (Q((A = c.item(S)), 0, i)) {
                                var b = A.prefix || "",
                                    E = A.namespaceURI,
                                    x = b ? " xmlns:" + b : " xmlns";
                                e.push(x, '="', E, '"'),
                                    i.push({ prefix: b, namespace: E });
                            }
                            tt(A, e, n, r, i);
                        }
                        if (
                            (Q(t, 0, i) &&
                                ((b = t.prefix || ""),
                                (E = t.namespaceURI),
                                (x = b ? " xmlns:" + b : " xmlns"),
                                e.push(x, '="', E, '"'),
                                i.push({ prefix: b, namespace: E })),
                            m ||
                                (n &&
                                    !/^(?:meta|link|img|br|hr|input)$/i.test(
                                        v
                                    )))
                        ) {
                            if ((e.push(">"), n && /^script$/i.test(v)))
                                for (; m; )
                                    m.data ? e.push(m.data) : tt(m, e, n, r, i),
                                        (m = m.nextSibling);
                            else
                                for (; m; )
                                    tt(m, e, n, r, i), (m = m.nextSibling);
                            e.push("</", v, ">");
                        } else e.push("/>");
                        return;
                    case d:
                    case p:
                        for (m = t.firstChild; m; )
                            tt(m, e, n, r, i), (m = m.nextSibling);
                        return;
                    case a:
                        return e.push(
                            " ",
                            t.name,
                            '="',
                            t.value.replace(/[<&"]/g, I),
                            '"'
                        );
                    case o:
                        return e.push(t.data.replace(/[<&]/g, I));
                    case h:
                        return e.push("<![CDATA[", t.data, "]]>");
                    case f:
                        return e.push("\x3c!--", t.data, "--\x3e");
                    case g:
                        var w = t.publicId,
                            F = t.systemId;
                        if ((e.push("<!DOCTYPE ", t.name), w))
                            e.push(' PUBLIC "', w),
                                F && "." != F && e.push('" "', F),
                                e.push('">');
                        else if (F && "." != F) e.push(' SYSTEM "', F, '">');
                        else {
                            var P = t.internalSubset;
                            P && e.push(" [", P, "]"), e.push(">");
                        }
                        return;
                    case l:
                        return e.push("<?", t.target, " ", t.data, "?>");
                    case u:
                        return e.push("&", t.nodeName, ";");
                    default:
                        e.push("??", t.nodeName);
                }
            }
            function et(t, e, n) {
                t[e] = n;
            }
            (m.INVALID_STATE_ERR = ((v[11] = "Invalid state"), 11)),
                (m.SYNTAX_ERR = ((v[12] = "Syntax error"), 12)),
                (m.INVALID_MODIFICATION_ERR =
                    ((v[13] = "Invalid modification"), 13)),
                (m.NAMESPACE_ERR = ((v[14] = "Invalid namespace"), 14)),
                (m.INVALID_ACCESS_ERR = ((v[15] = "Invalid access"), 15)),
                (E.prototype = Error.prototype),
                n(m, E),
                (x.prototype = {
                    length: 0,
                    item: function (t) {
                        return this[t] || null;
                    },
                    toString: function (t, e) {
                        for (var n = [], r = 0; r < this.length; r++)
                            tt(this[r], n, t, e);
                        return n.join("");
                    },
                }),
                (w.prototype.item = function (t) {
                    return F(this), this[t];
                }),
                r(w, x),
                (P.prototype = {
                    length: 0,
                    item: x.prototype.item,
                    getNamedItem: function (t) {
                        for (var e = this.length; e--; ) {
                            var n = this[e];
                            if (n.nodeName == t) return n;
                        }
                    },
                    setNamedItem: function (t) {
                        var e = t.ownerElement;
                        if (e && e != this._ownerElement) throw new E(b);
                        var n = this.getNamedItem(t.nodeName);
                        return D(this._ownerElement, this, t, n), n;
                    },
                    setNamedItemNS: function (t) {
                        var e,
                            n = t.ownerElement;
                        if (n && n != this._ownerElement) throw new E(b);
                        return (
                            (e = this.getNamedItemNS(
                                t.namespaceURI,
                                t.localName
                            )),
                            D(this._ownerElement, this, t, e),
                            e
                        );
                    },
                    removeNamedItem: function (t) {
                        var e = this.getNamedItem(t);
                        return O(this._ownerElement, this, e), e;
                    },
                    removeNamedItemNS: function (t, e) {
                        var n = this.getNamedItemNS(t, e);
                        return O(this._ownerElement, this, n), n;
                    },
                    getNamedItemNS: function (t, e) {
                        for (var n = this.length; n--; ) {
                            var r = this[n];
                            if (r.localName == e && r.namespaceURI == t)
                                return r;
                        }
                        return null;
                    },
                }),
                (T.prototype = {
                    hasFeature: function (t, e) {
                        var n = this._features[t.toLowerCase()];
                        return !(!n || (e && !(e in n)));
                    },
                    createDocument: function (t, e, n) {
                        var r = new N();
                        if (
                            ((r.implementation = this),
                            (r.childNodes = new x()),
                            (r.doctype = n),
                            n && r.appendChild(n),
                            e)
                        ) {
                            var i = r.createElementNS(t, e);
                            r.appendChild(i);
                        }
                        return r;
                    },
                    createDocumentType: function (t, e, n) {
                        var r = new z();
                        return (
                            (r.name = t),
                            (r.nodeName = t),
                            (r.publicId = e),
                            (r.systemId = n),
                            r
                        );
                    },
                }),
                (H.prototype = {
                    firstChild: null,
                    lastChild: null,
                    previousSibling: null,
                    nextSibling: null,
                    attributes: null,
                    parentNode: null,
                    childNodes: null,
                    ownerDocument: null,
                    nodeValue: null,
                    namespaceURI: null,
                    prefix: null,
                    localName: null,
                    insertBefore: function (t, e) {
                        return V(this, t, e);
                    },
                    replaceChild: function (t, e) {
                        this.insertBefore(t, e), e && this.removeChild(e);
                    },
                    removeChild: function (t) {
                        return _(this, t);
                    },
                    appendChild: function (t) {
                        return this.insertBefore(t, null);
                    },
                    hasChildNodes: function () {
                        return null != this.firstChild;
                    },
                    cloneNode: function (t) {
                        return (function t(e, n, r) {
                            var i = new n.constructor();
                            for (var o in n) {
                                var h = n[o];
                                "object" != typeof h && h != i[o] && (i[o] = h);
                            }
                            switch (
                                (n.childNodes && (i.childNodes = new x()),
                                (i.ownerDocument = e),
                                i.nodeType)
                            ) {
                                case s:
                                    var u = n.attributes,
                                        c = (i.attributes = new P()),
                                        l = u.length;
                                    c._ownerElement = i;
                                    for (var f = 0; f < l; f++)
                                        i.setAttributeNode(t(e, u.item(f), !0));
                                    break;
                                case a:
                                    r = !0;
                            }
                            if (r)
                                for (var d = n.firstChild; d; )
                                    i.appendChild(t(e, d, r)),
                                        (d = d.nextSibling);
                            return i;
                        })(this.ownerDocument || this, this, t);
                    },
                    normalize: function () {
                        for (var t = this.firstChild; t; ) {
                            var e = t.nextSibling;
                            e && e.nodeType == o && t.nodeType == o
                                ? (this.removeChild(e), t.appendData(e.data))
                                : (t.normalize(), (t = e));
                        }
                    },
                    isSupported: function (t, e) {
                        return this.ownerDocument.implementation.hasFeature(
                            t,
                            e
                        );
                    },
                    hasAttributes: function () {
                        return this.attributes.length > 0;
                    },
                    lookupPrefix: function (t) {
                        for (var e = this; e; ) {
                            var n = e._nsMap;
                            if (n) for (var r in n) if (n[r] == t) return r;
                            e =
                                e.nodeType == a
                                    ? e.ownerDocument
                                    : e.parentNode;
                        }
                        return null;
                    },
                    lookupNamespaceURI: function (t) {
                        for (var e = this; e; ) {
                            var n = e._nsMap;
                            if (n && t in n) return n[t];
                            e =
                                e.nodeType == a
                                    ? e.ownerDocument
                                    : e.parentNode;
                        }
                        return null;
                    },
                    isDefaultNamespace: function (t) {
                        return null == this.lookupPrefix(t);
                    },
                }),
                n(i, H),
                n(i, H.prototype),
                (N.prototype = {
                    nodeName: "#document",
                    nodeType: d,
                    doctype: null,
                    documentElement: null,
                    _inc: 1,
                    insertBefore: function (t, e) {
                        if (t.nodeType == p) {
                            for (var n = t.firstChild; n; ) {
                                var r = n.nextSibling;
                                this.insertBefore(n, e), (n = r);
                            }
                            return t;
                        }
                        return (
                            null == this.documentElement &&
                                t.nodeType == s &&
                                (this.documentElement = t),
                            V(this, t, e),
                            (t.ownerDocument = this),
                            t
                        );
                    },
                    removeChild: function (t) {
                        return (
                            this.documentElement == t &&
                                (this.documentElement = null),
                            _(this, t)
                        );
                    },
                    importNode: function (t, e) {
                        return (function t(e, n, r) {
                            var i;
                            switch (n.nodeType) {
                                case s:
                                    (i = n.cloneNode(!1)).ownerDocument = e;
                                case p:
                                    break;
                                case a:
                                    r = !0;
                            }
                            if (
                                (i || (i = n.cloneNode(!1)),
                                (i.ownerDocument = e),
                                (i.parentNode = null),
                                r)
                            )
                                for (var o = n.firstChild; o; )
                                    i.appendChild(t(e, o, r)),
                                        (o = o.nextSibling);
                            return i;
                        })(this, t, e);
                    },
                    getElementById: function (t) {
                        var e = null;
                        return (
                            R(this.documentElement, function (n) {
                                if (
                                    n.nodeType == s &&
                                    n.getAttribute("id") == t
                                )
                                    return (e = n), !0;
                            }),
                            e
                        );
                    },
                    createElement: function (t) {
                        var e = new K();
                        return (
                            (e.ownerDocument = this),
                            (e.nodeName = t),
                            (e.tagName = t),
                            (e.childNodes = new x()),
                            ((e.attributes = new P())._ownerElement = e),
                            e
                        );
                    },
                    createDocumentFragment: function () {
                        var t = new X();
                        return (
                            (t.ownerDocument = this),
                            (t.childNodes = new x()),
                            t
                        );
                    },
                    createTextNode: function (t) {
                        var e = new M();
                        return (e.ownerDocument = this), e.appendData(t), e;
                    },
                    createComment: function (t) {
                        var e = new U();
                        return (e.ownerDocument = this), e.appendData(t), e;
                    },
                    createCDATASection: function (t) {
                        var e = new q();
                        return (e.ownerDocument = this), e.appendData(t), e;
                    },
                    createProcessingInstruction: function (t, e) {
                        var n = new J();
                        return (
                            (n.ownerDocument = this),
                            (n.tagName = n.target = t),
                            (n.nodeValue = n.data = e),
                            n
                        );
                    },
                    createAttribute: function (t) {
                        var e = new L();
                        return (
                            (e.ownerDocument = this),
                            (e.name = t),
                            (e.nodeName = t),
                            (e.localName = t),
                            (e.specified = !0),
                            e
                        );
                    },
                    createEntityReference: function (t) {
                        var e = new G();
                        return (e.ownerDocument = this), (e.nodeName = t), e;
                    },
                    createElementNS: function (t, e) {
                        var n = new K(),
                            r = e.split(":"),
                            i = (n.attributes = new P());
                        return (
                            (n.childNodes = new x()),
                            (n.ownerDocument = this),
                            (n.nodeName = e),
                            (n.tagName = e),
                            (n.namespaceURI = t),
                            2 == r.length
                                ? ((n.prefix = r[0]), (n.localName = r[1]))
                                : (n.localName = e),
                            (i._ownerElement = n),
                            n
                        );
                    },
                    createAttributeNS: function (t, e) {
                        var n = new L(),
                            r = e.split(":");
                        return (
                            (n.ownerDocument = this),
                            (n.nodeName = e),
                            (n.name = e),
                            (n.namespaceURI = t),
                            (n.specified = !0),
                            2 == r.length
                                ? ((n.prefix = r[0]), (n.localName = r[1]))
                                : (n.localName = e),
                            n
                        );
                    },
                }),
                r(N, H),
                (K.prototype = {
                    nodeType: s,
                    hasAttribute: function (t) {
                        return null != this.getAttributeNode(t);
                    },
                    getAttribute: function (t) {
                        var e = this.getAttributeNode(t);
                        return (e && e.value) || "";
                    },
                    getAttributeNode: function (t) {
                        return this.attributes.getNamedItem(t);
                    },
                    setAttribute: function (t, e) {
                        var n = this.ownerDocument.createAttribute(t);
                        (n.value = n.nodeValue = "" + e),
                            this.setAttributeNode(n);
                    },
                    removeAttribute: function (t) {
                        var e = this.getAttributeNode(t);
                        e && this.removeAttributeNode(e);
                    },
                    appendChild: function (t) {
                        return t.nodeType === p
                            ? this.insertBefore(t, null)
                            : (function (t, e) {
                                  var n = e.parentNode;
                                  if (n) {
                                      var r = t.lastChild;
                                      n.removeChild(e), (r = t.lastChild);
                                  }
                                  return (
                                      (r = t.lastChild),
                                      (e.parentNode = t),
                                      (e.previousSibling = r),
                                      (e.nextSibling = null),
                                      r
                                          ? (r.nextSibling = e)
                                          : (t.firstChild = e),
                                      (t.lastChild = e),
                                      j(t.ownerDocument, t, e),
                                      e
                                  );
                              })(this, t);
                    },
                    setAttributeNode: function (t) {
                        return this.attributes.setNamedItem(t);
                    },
                    setAttributeNodeNS: function (t) {
                        return this.attributes.setNamedItemNS(t);
                    },
                    removeAttributeNode: function (t) {
                        return this.attributes.removeNamedItem(t.nodeName);
                    },
                    removeAttributeNS: function (t, e) {
                        var n = this.getAttributeNodeNS(t, e);
                        n && this.removeAttributeNode(n);
                    },
                    hasAttributeNS: function (t, e) {
                        return null != this.getAttributeNodeNS(t, e);
                    },
                    getAttributeNS: function (t, e) {
                        var n = this.getAttributeNodeNS(t, e);
                        return (n && n.value) || "";
                    },
                    setAttributeNS: function (t, e, n) {
                        var r = this.ownerDocument.createAttributeNS(t, e);
                        (r.value = r.nodeValue = "" + n),
                            this.setAttributeNode(r);
                    },
                    getAttributeNodeNS: function (t, e) {
                        return this.attributes.getNamedItemNS(t, e);
                    },
                    getElementsByTagName: function (t) {
                        return new w(this, function (e) {
                            var n = [];
                            return (
                                R(e, function (r) {
                                    r === e ||
                                        r.nodeType != s ||
                                        ("*" !== t && r.tagName != t) ||
                                        n.push(r);
                                }),
                                n
                            );
                        });
                    },
                    getElementsByTagNameNS: function (t, e) {
                        return new w(this, function (n) {
                            var r = [];
                            return (
                                R(n, function (i) {
                                    i === n ||
                                        i.nodeType !== s ||
                                        ("*" !== t && i.namespaceURI !== t) ||
                                        ("*" !== e && i.localName != e) ||
                                        r.push(i);
                                }),
                                r
                            );
                        });
                    },
                }),
                (N.prototype.getElementsByTagName =
                    K.prototype.getElementsByTagName),
                (N.prototype.getElementsByTagNameNS =
                    K.prototype.getElementsByTagNameNS),
                r(K, H),
                (L.prototype.nodeType = a),
                r(L, H),
                (k.prototype = {
                    data: "",
                    substringData: function (t, e) {
                        return this.data.substring(t, t + e);
                    },
                    appendData: function (t) {
                        (t = this.data + t),
                            (this.nodeValue = this.data = t),
                            (this.length = t.length);
                    },
                    insertData: function (t, e) {
                        this.replaceData(t, 0, e);
                    },
                    appendChild: function (t) {
                        throw new Error(v[S]);
                    },
                    deleteData: function (t, e) {
                        this.replaceData(t, e, "");
                    },
                    replaceData: function (t, e, n) {
                        (n =
                            this.data.substring(0, t) +
                            n +
                            this.data.substring(t + e)),
                            (this.nodeValue = this.data = n),
                            (this.length = n.length);
                    },
                }),
                r(k, H),
                (M.prototype = {
                    nodeName: "#text",
                    nodeType: o,
                    splitText: function (t) {
                        var e = this.data,
                            n = e.substring(t);
                        (e = e.substring(0, t)),
                            (this.data = this.nodeValue = e),
                            (this.length = e.length);
                        var r = this.ownerDocument.createTextNode(n);
                        return (
                            this.parentNode &&
                                this.parentNode.insertBefore(
                                    r,
                                    this.nextSibling
                                ),
                            r
                        );
                    },
                }),
                r(M, k),
                (U.prototype = { nodeName: "#comment", nodeType: f }),
                r(U, k),
                (q.prototype = { nodeName: "#cdata-section", nodeType: h }),
                r(q, k),
                (z.prototype.nodeType = g),
                r(z, H),
                (Y.prototype.nodeType = y),
                r(Y, H),
                (W.prototype.nodeType = c),
                r(W, H),
                (G.prototype.nodeType = u),
                r(G, H),
                (X.prototype.nodeName = "#document-fragment"),
                (X.prototype.nodeType = p),
                r(X, H),
                (J.prototype.nodeType = l),
                r(J, H),
                ($.prototype.serializeToString = function (t, e, n) {
                    return Z.call(t, e, n);
                }),
                (H.prototype.toString = Z);
            try {
                Object.defineProperty &&
                    (Object.defineProperty(w.prototype, "length", {
                        get: function () {
                            return F(this), this.$$length;
                        },
                    }),
                    Object.defineProperty(H.prototype, "textContent", {
                        get: function () {
                            return (function t(e) {
                                switch (e.nodeType) {
                                    case s:
                                    case p:
                                        var n = [];
                                        for (e = e.firstChild; e; )
                                            7 !== e.nodeType &&
                                                8 !== e.nodeType &&
                                                n.push(t(e)),
                                                (e = e.nextSibling);
                                        return n.join("");
                                    default:
                                        return e.nodeValue;
                                }
                            })(this);
                        },
                        set: function (t) {
                            switch (this.nodeType) {
                                case s:
                                case p:
                                    for (; this.firstChild; )
                                        this.removeChild(this.firstChild);
                                    (t || String(t)) &&
                                        this.appendChild(
                                            this.ownerDocument.createTextNode(t)
                                        );
                                    break;
                                default:
                                    (this.data = t),
                                        (this.value = t),
                                        (this.nodeValue = t);
                            }
                        },
                    }),
                    (et = function (t, e, n) {
                        t["$$" + e] = n;
                    }));
            } catch (t) {}
            (e.DOMImplementation = T), (e.XMLSerializer = $);
        },
        function (t, e, n) {
            (function (e) {
                var n,
                    r,
                    i,
                    s,
                    a,
                    o,
                    u = {
                        appName: "Netscape",
                        userAgent:
                            "Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1",
                    },
                    c = {
                        ASN1: null,
                        Base64: null,
                        Hex: null,
                        crypto: null,
                        href: null,
                    },
                    l = null;
                if (void 0 === f || !f) var f = {};
                (f.namespace = function () {
                    var t,
                        e,
                        n,
                        r = arguments,
                        i = null;
                    for (t = 0; t < r.length; t += 1)
                        for (
                            n = ("" + r[t]).split("."),
                                i = f,
                                e = "YAHOO" == n[0] ? 1 : 0;
                            e < n.length;
                            e += 1
                        )
                            (i[n[e]] = i[n[e]] || {}), (i = i[n[e]]);
                    return i;
                }),
                    (f.log = function (t, e, n) {
                        var r = f.widget.Logger;
                        return !(!r || !r.log) && r.log(t, e, n);
                    }),
                    (f.register = function (t, e, n) {
                        var r,
                            i,
                            s,
                            a,
                            o,
                            h = f.env.modules;
                        for (
                            h[t] || (h[t] = { versions: [], builds: [] }),
                                r = h[t],
                                i = n.version,
                                s = n.build,
                                a = f.env.listeners,
                                r.name = t,
                                r.version = i,
                                r.build = s,
                                r.versions.push(i),
                                r.builds.push(s),
                                r.mainClass = e,
                                o = 0;
                            o < a.length;
                            o += 1
                        )
                            a[o](r);
                        e
                            ? ((e.VERSION = i), (e.BUILD = s))
                            : f.log(
                                  "mainClass is undefined for module " + t,
                                  "warn"
                              );
                    }),
                    (f.env = f.env || { modules: [], listeners: [] }),
                    (f.env.getVersion = function (t) {
                        return f.env.modules[t] || null;
                    }),
                    (f.env.parseUA = function (t) {
                        var e,
                            n = function (t) {
                                var e = 0;
                                return parseFloat(
                                    t.replace(/\./g, function () {
                                        return 1 == e++ ? "" : ".";
                                    })
                                );
                            },
                            r = {
                                ie: 0,
                                opera: 0,
                                gecko: 0,
                                webkit: 0,
                                chrome: 0,
                                mobile: null,
                                air: 0,
                                ipad: 0,
                                iphone: 0,
                                ipod: 0,
                                ios: null,
                                android: 0,
                                webos: 0,
                                caja: u && u.cajaVersion,
                                secure: !1,
                                os: null,
                            },
                            i = t || (u && u.userAgent),
                            s = c && c.location,
                            a = s && s.href;
                        return (
                            (r.secure =
                                a && 0 === a.toLowerCase().indexOf("https")),
                            i &&
                                (/windows|win32/i.test(i)
                                    ? (r.os = "windows")
                                    : /macintosh/i.test(i)
                                    ? (r.os = "macintosh")
                                    : /rhino/i.test(i) && (r.os = "rhino"),
                                /KHTML/.test(i) && (r.webkit = 1),
                                (e = i.match(/AppleWebKit\/([^\s]*)/)) &&
                                    e[1] &&
                                    ((r.webkit = n(e[1])),
                                    / Mobile\//.test(i)
                                        ? ((r.mobile = "Apple"),
                                          (e = i.match(/OS ([^\s]*)/)) &&
                                              e[1] &&
                                              (e = n(e[1].replace("_", "."))),
                                          (r.ios = e),
                                          (r.ipad = r.ipod = r.iphone = 0),
                                          (e = i.match(/iPad|iPod|iPhone/)) &&
                                              e[0] &&
                                              (r[e[0].toLowerCase()] = r.ios))
                                        : ((e = i.match(
                                              /NokiaN[^\/]*|Android \d\.\d|webOS\/\d\.\d/
                                          )) && (r.mobile = e[0]),
                                          /webOS/.test(i) &&
                                              ((r.mobile = "WebOS"),
                                              (e =
                                                  i.match(
                                                      /webOS\/([^\s]*);/
                                                  )) &&
                                                  e[1] &&
                                                  (r.webos = n(e[1]))),
                                          / Android/.test(i) &&
                                              ((r.mobile = "Android"),
                                              (e =
                                                  i.match(
                                                      /Android ([^\s]*);/
                                                  )) &&
                                                  e[1] &&
                                                  (r.android = n(e[1])))),
                                    (e = i.match(/Chrome\/([^\s]*)/)) && e[1]
                                        ? (r.chrome = n(e[1]))
                                        : (e = i.match(/AdobeAIR\/([^\s]*)/)) &&
                                          (r.air = e[0])),
                                r.webkit ||
                                    ((e = i.match(/Opera[\s\/]([^\s]*)/)) &&
                                    e[1]
                                        ? ((r.opera = n(e[1])),
                                          (e = i.match(/Version\/([^\s]*)/)) &&
                                              e[1] &&
                                              (r.opera = n(e[1])),
                                          (e = i.match(/Opera Mini[^;]*/)) &&
                                              (r.mobile = e[0]))
                                        : (e = i.match(/MSIE\s([^;]*)/)) && e[1]
                                        ? (r.ie = n(e[1]))
                                        : (e = i.match(/Gecko\/([^\s]*)/)) &&
                                          ((r.gecko = 1),
                                          (e = i.match(/rv:([^\s\)]*)/)) &&
                                              e[1] &&
                                              (r.gecko = n(e[1]))))),
                            r
                        );
                    }),
                    (f.env.ua = f.env.parseUA()),
                    (function () {
                        if (
                            (f.namespace("util", "widget", "example"),
                            "undefined" != typeof YAHOO_config)
                        ) {
                            var t,
                                e = YAHOO_config.listener,
                                n = f.env.listeners,
                                r = !0;
                            if (e) {
                                for (t = 0; t < n.length; t++)
                                    if (n[t] == e) {
                                        r = !1;
                                        break;
                                    }
                                r && n.push(e);
                            }
                        }
                    })(),
                    (f.lang = f.lang || {}),
                    (n = f.lang),
                    (r = Object.prototype),
                    (i = []),
                    (s = {
                        "&": "&amp;",
                        "<": "&lt;",
                        ">": "&gt;",
                        '"': "&quot;",
                        "'": "&#x27;",
                        "/": "&#x2F;",
                        "`": "&#x60;",
                    }),
                    (a = ["toString", "valueOf"]),
                    (o = {
                        isArray: function (t) {
                            return "[object Array]" === r.toString.apply(t);
                        },
                        isBoolean: function (t) {
                            return "boolean" == typeof t;
                        },
                        isFunction: function (t) {
                            return (
                                "function" == typeof t ||
                                "[object Function]" === r.toString.apply(t)
                            );
                        },
                        isNull: function (t) {
                            return null === t;
                        },
                        isNumber: function (t) {
                            return "number" == typeof t && isFinite(t);
                        },
                        isObject: function (t) {
                            return (
                                (t &&
                                    ("object" == typeof t ||
                                        n.isFunction(t))) ||
                                !1
                            );
                        },
                        isString: function (t) {
                            return "string" == typeof t;
                        },
                        isUndefined: function (t) {
                            return void 0 === t;
                        },
                        _IEEnumFix: f.env.ua.ie
                            ? function (t, e) {
                                  var i, s, o;
                                  for (i = 0; i < a.length; i += 1)
                                      (o = e[(s = a[i])]),
                                          n.isFunction(o) &&
                                              o != r[s] &&
                                              (t[s] = o);
                              }
                            : function () {},
                        escapeHTML: function (t) {
                            return t.replace(/[&<>"'\/`]/g, function (t) {
                                return s[t];
                            });
                        },
                        extend: function (t, e, i) {
                            if (!e || !t)
                                throw new Error(
                                    "extend failed, please check that all dependencies are included."
                                );
                            var s,
                                a = function () {};
                            if (
                                ((a.prototype = e.prototype),
                                (t.prototype = new a()),
                                (t.prototype.constructor = t),
                                (t.superclass = e.prototype),
                                e.prototype.constructor == r.constructor &&
                                    (e.prototype.constructor = e),
                                i)
                            ) {
                                for (s in i)
                                    n.hasOwnProperty(i, s) &&
                                        (t.prototype[s] = i[s]);
                                n._IEEnumFix(t.prototype, i);
                            }
                        },
                        augmentObject: function (t, e) {
                            if (!e || !t)
                                throw new Error(
                                    "Absorb failed, verify dependencies."
                                );
                            var r,
                                i,
                                s = arguments,
                                a = s[2];
                            if (a && !0 !== a)
                                for (r = 2; r < s.length; r += 1)
                                    t[s[r]] = e[s[r]];
                            else {
                                for (i in e) (!a && i in t) || (t[i] = e[i]);
                                n._IEEnumFix(t, e);
                            }
                            return t;
                        },
                        augmentProto: function (t, e) {
                            if (!e || !t)
                                throw new Error(
                                    "Augment failed, verify dependencies."
                                );
                            var r,
                                i = [t.prototype, e.prototype];
                            for (r = 2; r < arguments.length; r += 1)
                                i.push(arguments[r]);
                            return n.augmentObject.apply(this, i), t;
                        },
                        dump: function (t, e) {
                            var r,
                                i,
                                s = [],
                                a = "{...}";
                            if (!n.isObject(t)) return t + "";
                            if (
                                t instanceof Date ||
                                ("nodeType" in t && "tagName" in t)
                            )
                                return t;
                            if (n.isFunction(t)) return "f(){...}";
                            if (((e = n.isNumber(e) ? e : 3), n.isArray(t))) {
                                for (
                                    s.push("["), r = 0, i = t.length;
                                    r < i;
                                    r += 1
                                )
                                    n.isObject(t[r])
                                        ? s.push(
                                              e > 0 ? n.dump(t[r], e - 1) : a
                                          )
                                        : s.push(t[r]),
                                        s.push(", ");
                                s.length > 1 && s.pop(), s.push("]");
                            } else {
                                for (r in (s.push("{"), t))
                                    n.hasOwnProperty(t, r) &&
                                        (s.push(r + " => "),
                                        n.isObject(t[r])
                                            ? s.push(
                                                  e > 0
                                                      ? n.dump(t[r], e - 1)
                                                      : a
                                              )
                                            : s.push(t[r]),
                                        s.push(", "));
                                s.length > 1 && s.pop(), s.push("}");
                            }
                            return s.join("");
                        },
                        substitute: function (t, e, r, i) {
                            for (
                                var s,
                                    a,
                                    o,
                                    h,
                                    u,
                                    c,
                                    l,
                                    f,
                                    d,
                                    g = [],
                                    p = t.length;
                                !(
                                    (s = t.lastIndexOf("{", p)) < 0 ||
                                    s + 1 > (a = t.indexOf("}", s))
                                );

                            )
                                (c = null),
                                    (o = (h = l =
                                        t.substring(s + 1, a)).indexOf(" ")) >
                                        -1 &&
                                        ((c = h.substring(o + 1)),
                                        (h = h.substring(0, o))),
                                    (u = e[h]),
                                    r && (u = r(h, u, c)),
                                    n.isObject(u)
                                        ? n.isArray(u)
                                            ? (u = n.dump(u, parseInt(c, 10)))
                                            : ((f = (c = c || "").indexOf(
                                                  "dump"
                                              )) > -1 && (c = c.substring(4)),
                                              (u =
                                                  "[object Object]" ===
                                                      (d = u.toString()) ||
                                                  f > -1
                                                      ? n.dump(
                                                            u,
                                                            parseInt(c, 10)
                                                        )
                                                      : d))
                                        : n.isString(u) ||
                                          n.isNumber(u) ||
                                          ((u = "~-" + g.length + "-~"),
                                          (g[g.length] = l)),
                                    (t =
                                        t.substring(0, s) +
                                        u +
                                        t.substring(a + 1)),
                                    !1 === i && (p = s - 1);
                            for (s = g.length - 1; s >= 0; s -= 1)
                                t = t.replace(
                                    new RegExp("~-" + s + "-~"),
                                    "{" + g[s] + "}",
                                    "g"
                                );
                            return t;
                        },
                        trim: function (t) {
                            try {
                                return t.replace(/^\s+|\s+$/g, "");
                            } catch (e) {
                                return t;
                            }
                        },
                        merge: function () {
                            var t,
                                e = {},
                                r = arguments,
                                i = r.length;
                            for (t = 0; t < i; t += 1)
                                n.augmentObject(e, r[t], !0);
                            return e;
                        },
                        later: function (t, e, r, s, a) {
                            (t = t || 0), (e = e || {});
                            var o,
                                h,
                                u = r,
                                c = s;
                            if ((n.isString(r) && (u = e[r]), !u))
                                throw new TypeError("method undefined");
                            return (
                                n.isUndefined(s) || n.isArray(c) || (c = [s]),
                                (o = function () {
                                    u.apply(e, c || i);
                                }),
                                (h = a ? setInterval(o, t) : setTimeout(o, t)),
                                {
                                    interval: a,
                                    cancel: function () {
                                        this.interval
                                            ? clearInterval(h)
                                            : clearTimeout(h);
                                    },
                                }
                            );
                        },
                        isValue: function (t) {
                            return (
                                n.isObject(t) ||
                                n.isString(t) ||
                                n.isNumber(t) ||
                                n.isBoolean(t)
                            );
                        },
                    }),
                    (n.hasOwnProperty = r.hasOwnProperty
                        ? function (t, e) {
                              return (
                                  t && t.hasOwnProperty && t.hasOwnProperty(e)
                              );
                          }
                        : function (t, e) {
                              return (
                                  !n.isUndefined(t[e]) &&
                                  t.constructor.prototype[e] !== t[e]
                              );
                          }),
                    o.augmentObject(n, o, !0),
                    (f.util.Lang = n),
                    (n.augment = n.augmentProto),
                    (f.augment = n.augmentProto),
                    (f.extend = n.extend),
                    f.register("yahoo", f, { version: "2.9.0", build: "2800" });
                var d,
                    g,
                    p =
                        p ||
                        (function (t, e) {
                            var n = {},
                                r = (n.lib = {}),
                                i = (r.Base = (function () {
                                    function t() {}
                                    return {
                                        extend: function (e) {
                                            t.prototype = this;
                                            var n = new t();
                                            return (
                                                e && n.mixIn(e),
                                                n.hasOwnProperty("init") ||
                                                    (n.init = function () {
                                                        n.$super.init.apply(
                                                            this,
                                                            arguments
                                                        );
                                                    }),
                                                (n.init.prototype = n),
                                                (n.$super = this),
                                                n
                                            );
                                        },
                                        create: function () {
                                            var t = this.extend();
                                            return (
                                                t.init.apply(t, arguments), t
                                            );
                                        },
                                        init: function () {},
                                        mixIn: function (t) {
                                            for (var e in t)
                                                t.hasOwnProperty(e) &&
                                                    (this[e] = t[e]);
                                            t.hasOwnProperty("toString") &&
                                                (this.toString = t.toString);
                                        },
                                        clone: function () {
                                            return this.init.prototype.extend(
                                                this
                                            );
                                        },
                                    };
                                })()),
                                s = (r.WordArray = i.extend({
                                    init: function (t, e) {
                                        (t = this.words = t || []),
                                            (this.sigBytes =
                                                null != e ? e : 4 * t.length);
                                    },
                                    toString: function (t) {
                                        return (t || o).stringify(this);
                                    },
                                    concat: function (t) {
                                        var e = this.words,
                                            n = t.words,
                                            r = this.sigBytes,
                                            i = t.sigBytes;
                                        if ((this.clamp(), r % 4))
                                            for (var s = 0; s < i; s++) {
                                                var a =
                                                    (n[s >>> 2] >>>
                                                        (24 - (s % 4) * 8)) &
                                                    255;
                                                e[(r + s) >>> 2] |=
                                                    a <<
                                                    (24 - ((r + s) % 4) * 8);
                                            }
                                        else
                                            for (s = 0; s < i; s += 4)
                                                e[(r + s) >>> 2] = n[s >>> 2];
                                        return (this.sigBytes += i), this;
                                    },
                                    clamp: function () {
                                        var e = this.words,
                                            n = this.sigBytes;
                                        (e[n >>> 2] &=
                                            4294967295 << (32 - (n % 4) * 8)),
                                            (e.length = t.ceil(n / 4));
                                    },
                                    clone: function () {
                                        var t = i.clone.call(this);
                                        return (
                                            (t.words = this.words.slice(0)), t
                                        );
                                    },
                                    random: function (e) {
                                        for (var n = [], r = 0; r < e; r += 4)
                                            n.push(
                                                (4294967296 * t.random()) | 0
                                            );
                                        return new s.init(n, e);
                                    },
                                })),
                                a = (n.enc = {}),
                                o = (a.Hex = {
                                    stringify: function (t) {
                                        for (
                                            var e = t.words,
                                                n = t.sigBytes,
                                                r = [],
                                                i = 0;
                                            i < n;
                                            i++
                                        ) {
                                            var s =
                                                (e[i >>> 2] >>>
                                                    (24 - (i % 4) * 8)) &
                                                255;
                                            r.push((s >>> 4).toString(16)),
                                                r.push((15 & s).toString(16));
                                        }
                                        return r.join("");
                                    },
                                    parse: function (t) {
                                        for (
                                            var e = t.length, n = [], r = 0;
                                            r < e;
                                            r += 2
                                        )
                                            n[r >>> 3] |=
                                                parseInt(t.substr(r, 2), 16) <<
                                                (24 - (r % 8) * 4);
                                        return new s.init(n, e / 2);
                                    },
                                }),
                                h = (a.Latin1 = {
                                    stringify: function (t) {
                                        for (
                                            var e = t.words,
                                                n = t.sigBytes,
                                                r = [],
                                                i = 0;
                                            i < n;
                                            i++
                                        ) {
                                            var s =
                                                (e[i >>> 2] >>>
                                                    (24 - (i % 4) * 8)) &
                                                255;
                                            r.push(String.fromCharCode(s));
                                        }
                                        return r.join("");
                                    },
                                    parse: function (t) {
                                        for (
                                            var e = t.length, n = [], r = 0;
                                            r < e;
                                            r++
                                        )
                                            n[r >>> 2] |=
                                                (255 & t.charCodeAt(r)) <<
                                                (24 - (r % 4) * 8);
                                        return new s.init(n, e);
                                    },
                                }),
                                u = (a.Utf8 = {
                                    stringify: function (t) {
                                        try {
                                            return decodeURIComponent(
                                                escape(h.stringify(t))
                                            );
                                        } catch (t) {
                                            throw new Error(
                                                "Malformed UTF-8 data"
                                            );
                                        }
                                    },
                                    parse: function (t) {
                                        return h.parse(
                                            unescape(encodeURIComponent(t))
                                        );
                                    },
                                }),
                                c = (r.BufferedBlockAlgorithm = i.extend({
                                    reset: function () {
                                        (this._data = new s.init()),
                                            (this._nDataBytes = 0);
                                    },
                                    _append: function (t) {
                                        "string" == typeof t &&
                                            (t = u.parse(t)),
                                            this._data.concat(t),
                                            (this._nDataBytes += t.sigBytes);
                                    },
                                    _process: function (e) {
                                        var n = this._data,
                                            r = n.words,
                                            i = n.sigBytes,
                                            a = this.blockSize,
                                            o = i / (4 * a),
                                            h =
                                                (o = e
                                                    ? t.ceil(o)
                                                    : t.max(
                                                          (0 | o) -
                                                              this
                                                                  ._minBufferSize,
                                                          0
                                                      )) * a,
                                            u = t.min(4 * h, i);
                                        if (h) {
                                            for (var c = 0; c < h; c += a)
                                                this._doProcessBlock(r, c);
                                            var l = r.splice(0, h);
                                            n.sigBytes -= u;
                                        }
                                        return new s.init(l, u);
                                    },
                                    clone: function () {
                                        var t = i.clone.call(this);
                                        return (
                                            (t._data = this._data.clone()), t
                                        );
                                    },
                                    _minBufferSize: 0,
                                })),
                                l =
                                    ((r.Hasher = c.extend({
                                        cfg: i.extend(),
                                        init: function (t) {
                                            (this.cfg = this.cfg.extend(t)),
                                                this.reset();
                                        },
                                        reset: function () {
                                            c.reset.call(this), this._doReset();
                                        },
                                        update: function (t) {
                                            return (
                                                this._append(t),
                                                this._process(),
                                                this
                                            );
                                        },
                                        finalize: function (t) {
                                            return (
                                                t && this._append(t),
                                                this._doFinalize()
                                            );
                                        },
                                        blockSize: 16,
                                        _createHelper: function (t) {
                                            return function (e, n) {
                                                return new t.init(n).finalize(
                                                    e
                                                );
                                            };
                                        },
                                        _createHmacHelper: function (t) {
                                            return function (e, n) {
                                                return new l.HMAC.init(
                                                    t,
                                                    n
                                                ).finalize(e);
                                            };
                                        },
                                    })),
                                    (n.algo = {}));
                            return n;
                        })(Math);
                !(function (t) {
                    var e,
                        n = (e = p).lib,
                        r = n.Base,
                        i = n.WordArray;
                    ((e = e.x64 = {}).Word = r.extend({
                        init: function (t, e) {
                            (this.high = t), (this.low = e);
                        },
                    })),
                        (e.WordArray = r.extend({
                            init: function (t, e) {
                                (t = this.words = t || []),
                                    (this.sigBytes =
                                        null != e ? e : 8 * t.length);
                            },
                            toX32: function () {
                                for (
                                    var t = this.words,
                                        e = t.length,
                                        n = [],
                                        r = 0;
                                    r < e;
                                    r++
                                ) {
                                    var s = t[r];
                                    n.push(s.high), n.push(s.low);
                                }
                                return i.create(n, this.sigBytes);
                            },
                            clone: function () {
                                for (
                                    var t = r.clone.call(this),
                                        e = (t.words = this.words.slice(0)),
                                        n = e.length,
                                        i = 0;
                                    i < n;
                                    i++
                                )
                                    e[i] = e[i].clone();
                                return t;
                            },
                        }));
                })(),
                    p.lib.Cipher ||
                        (function (t) {
                            var e = (d = p).lib,
                                n = e.Base,
                                r = e.WordArray,
                                i = e.BufferedBlockAlgorithm,
                                s = d.enc.Base64,
                                a = d.algo.EvpKDF,
                                o = (e.Cipher = i.extend({
                                    cfg: n.extend(),
                                    createEncryptor: function (t, e) {
                                        return this.create(
                                            this._ENC_XFORM_MODE,
                                            t,
                                            e
                                        );
                                    },
                                    createDecryptor: function (t, e) {
                                        return this.create(
                                            this._DEC_XFORM_MODE,
                                            t,
                                            e
                                        );
                                    },
                                    init: function (t, e, n) {
                                        (this.cfg = this.cfg.extend(n)),
                                            (this._xformMode = t),
                                            (this._key = e),
                                            this.reset();
                                    },
                                    reset: function () {
                                        i.reset.call(this), this._doReset();
                                    },
                                    process: function (t) {
                                        return this._append(t), this._process();
                                    },
                                    finalize: function (t) {
                                        return (
                                            t && this._append(t),
                                            this._doFinalize()
                                        );
                                    },
                                    keySize: 4,
                                    ivSize: 4,
                                    _ENC_XFORM_MODE: 1,
                                    _DEC_XFORM_MODE: 2,
                                    _createHelper: function (t) {
                                        return {
                                            encrypt: function (e, n, r) {
                                                return (
                                                    "string" == typeof n ? g : f
                                                ).encrypt(t, e, n, r);
                                            },
                                            decrypt: function (e, n, r) {
                                                return (
                                                    "string" == typeof n ? g : f
                                                ).decrypt(t, e, n, r);
                                            },
                                        };
                                    },
                                }));
                            e.StreamCipher = o.extend({
                                _doFinalize: function () {
                                    return this._process(!0);
                                },
                                blockSize: 1,
                            });
                            var h = (d.mode = {}),
                                u = function (t, e, n) {
                                    var r = this._iv;
                                    r
                                        ? (this._iv = void 0)
                                        : (r = this._prevBlock);
                                    for (var i = 0; i < n; i++)
                                        t[e + i] ^= r[i];
                                },
                                c = (e.BlockCipherMode = n.extend({
                                    createEncryptor: function (t, e) {
                                        return this.Encryptor.create(t, e);
                                    },
                                    createDecryptor: function (t, e) {
                                        return this.Decryptor.create(t, e);
                                    },
                                    init: function (t, e) {
                                        (this._cipher = t), (this._iv = e);
                                    },
                                })).extend();
                            (c.Encryptor = c.extend({
                                processBlock: function (t, e) {
                                    var n = this._cipher,
                                        r = n.blockSize;
                                    u.call(this, t, e, r),
                                        n.encryptBlock(t, e),
                                        (this._prevBlock = t.slice(e, e + r));
                                },
                            })),
                                (c.Decryptor = c.extend({
                                    processBlock: function (t, e) {
                                        var n = this._cipher,
                                            r = n.blockSize,
                                            i = t.slice(e, e + r);
                                        n.decryptBlock(t, e),
                                            u.call(this, t, e, r),
                                            (this._prevBlock = i);
                                    },
                                })),
                                (h = h.CBC = c),
                                (c = (d.pad = {}).Pkcs7 =
                                    {
                                        pad: function (t, e) {
                                            for (
                                                var n,
                                                    i =
                                                        ((n =
                                                            (n = 4 * e) -
                                                            (t.sigBytes % n)) <<
                                                            24) |
                                                        (n << 16) |
                                                        (n << 8) |
                                                        n,
                                                    s = [],
                                                    a = 0;
                                                a < n;
                                                a += 4
                                            )
                                                s.push(i);
                                            (n = r.create(s, n)), t.concat(n);
                                        },
                                        unpad: function (t) {
                                            t.sigBytes -=
                                                255 &
                                                t.words[(t.sigBytes - 1) >>> 2];
                                        },
                                    }),
                                (e.BlockCipher = o.extend({
                                    cfg: o.cfg.extend({ mode: h, padding: c }),
                                    reset: function () {
                                        o.reset.call(this);
                                        var t = (e = this.cfg).iv,
                                            e = e.mode;
                                        if (
                                            this._xformMode ==
                                            this._ENC_XFORM_MODE
                                        )
                                            var n = e.createEncryptor;
                                        else
                                            (n = e.createDecryptor),
                                                (this._minBufferSize = 1);
                                        this._mode = n.call(
                                            e,
                                            this,
                                            t && t.words
                                        );
                                    },
                                    _doProcessBlock: function (t, e) {
                                        this._mode.processBlock(t, e);
                                    },
                                    _doFinalize: function () {
                                        var t = this.cfg.padding;
                                        if (
                                            this._xformMode ==
                                            this._ENC_XFORM_MODE
                                        ) {
                                            t.pad(this._data, this.blockSize);
                                            var e = this._process(!0);
                                        } else
                                            (e = this._process(!0)), t.unpad(e);
                                        return e;
                                    },
                                    blockSize: 4,
                                }));
                            var l = (e.CipherParams = n.extend({
                                    init: function (t) {
                                        this.mixIn(t);
                                    },
                                    toString: function (t) {
                                        return (t || this.formatter).stringify(
                                            this
                                        );
                                    },
                                })),
                                f =
                                    ((h = (d.format = {}).OpenSSL =
                                        {
                                            stringify: function (t) {
                                                var e = t.ciphertext;
                                                return (
                                                    (t = t.salt)
                                                        ? r
                                                              .create([
                                                                  1398893684,
                                                                  1701076831,
                                                              ])
                                                              .concat(t)
                                                              .concat(e)
                                                        : e
                                                ).toString(s);
                                            },
                                            parse: function (t) {
                                                var e = (t = s.parse(t)).words;
                                                if (
                                                    1398893684 == e[0] &&
                                                    1701076831 == e[1]
                                                ) {
                                                    var n = r.create(
                                                        e.slice(2, 4)
                                                    );
                                                    e.splice(0, 4),
                                                        (t.sigBytes -= 16);
                                                }
                                                return l.create({
                                                    ciphertext: t,
                                                    salt: n,
                                                });
                                            },
                                        }),
                                    (e.SerializableCipher = n.extend({
                                        cfg: n.extend({ format: h }),
                                        encrypt: function (t, e, n, r) {
                                            r = this.cfg.extend(r);
                                            var i = t.createEncryptor(n, r);
                                            return (
                                                (e = i.finalize(e)),
                                                (i = i.cfg),
                                                l.create({
                                                    ciphertext: e,
                                                    key: n,
                                                    iv: i.iv,
                                                    algorithm: t,
                                                    mode: i.mode,
                                                    padding: i.padding,
                                                    blockSize: t.blockSize,
                                                    formatter: r.format,
                                                })
                                            );
                                        },
                                        decrypt: function (t, e, n, r) {
                                            return (
                                                (r = this.cfg.extend(r)),
                                                (e = this._parse(e, r.format)),
                                                t
                                                    .createDecryptor(n, r)
                                                    .finalize(e.ciphertext)
                                            );
                                        },
                                        _parse: function (t, e) {
                                            return "string" == typeof t
                                                ? e.parse(t, this)
                                                : t;
                                        },
                                    }))),
                                d = ((d.kdf = {}).OpenSSL = {
                                    execute: function (t, e, n, i) {
                                        return (
                                            i || (i = r.random(8)),
                                            (t = a
                                                .create({ keySize: e + n })
                                                .compute(t, i)),
                                            (n = r.create(
                                                t.words.slice(e),
                                                4 * n
                                            )),
                                            (t.sigBytes = 4 * e),
                                            l.create({ key: t, iv: n, salt: i })
                                        );
                                    },
                                }),
                                g = (e.PasswordBasedCipher = f.extend({
                                    cfg: f.cfg.extend({ kdf: d }),
                                    encrypt: function (t, e, n, r) {
                                        return (
                                            (n = (r =
                                                this.cfg.extend(r)).kdf.execute(
                                                n,
                                                t.keySize,
                                                t.ivSize
                                            )),
                                            (r.iv = n.iv),
                                            (t = f.encrypt.call(
                                                this,
                                                t,
                                                e,
                                                n.key,
                                                r
                                            )).mixIn(n),
                                            t
                                        );
                                    },
                                    decrypt: function (t, e, n, r) {
                                        return (
                                            (r = this.cfg.extend(r)),
                                            (e = this._parse(e, r.format)),
                                            (n = r.kdf.execute(
                                                n,
                                                t.keySize,
                                                t.ivSize,
                                                e.salt
                                            )),
                                            (r.iv = n.iv),
                                            f.decrypt.call(this, t, e, n.key, r)
                                        );
                                    },
                                }));
                        })(),
                    (function () {
                        for (
                            var t = p,
                                e = t.lib.BlockCipher,
                                n = t.algo,
                                r = [],
                                i = [],
                                s = [],
                                a = [],
                                o = [],
                                h = [],
                                u = [],
                                c = [],
                                l = [],
                                f = [],
                                d = [],
                                g = 0;
                            256 > g;
                            g++
                        )
                            d[g] = 128 > g ? g << 1 : (g << 1) ^ 283;
                        var y = 0,
                            m = 0;
                        for (g = 0; 256 > g; g++) {
                            var v =
                                ((v =
                                    m ^
                                    (m << 1) ^
                                    (m << 2) ^
                                    (m << 3) ^
                                    (m << 4)) >>>
                                    8) ^
                                (255 & v) ^
                                99;
                            (r[y] = v), (i[v] = y);
                            var S = d[y],
                                A = d[S],
                                b = d[A],
                                E = (257 * d[v]) ^ (16843008 * v);
                            (s[y] = (E << 24) | (E >>> 8)),
                                (a[y] = (E << 16) | (E >>> 16)),
                                (o[y] = (E << 8) | (E >>> 24)),
                                (h[y] = E),
                                (E =
                                    (16843009 * b) ^
                                    (65537 * A) ^
                                    (257 * S) ^
                                    (16843008 * y)),
                                (u[v] = (E << 24) | (E >>> 8)),
                                (c[v] = (E << 16) | (E >>> 16)),
                                (l[v] = (E << 8) | (E >>> 24)),
                                (f[v] = E),
                                y
                                    ? ((y = S ^ d[d[d[b ^ S]]]), (m ^= d[d[m]]))
                                    : (y = m = 1);
                        }
                        var x = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54];
                        (n = n.AES =
                            e.extend({
                                _doReset: function () {
                                    for (
                                        var t = (n = this._key).words,
                                            e = n.sigBytes / 4,
                                            n =
                                                4 *
                                                ((this._nRounds = e + 6) + 1),
                                            i = (this._keySchedule = []),
                                            s = 0;
                                        s < n;
                                        s++
                                    )
                                        if (s < e) i[s] = t[s];
                                        else {
                                            var a = i[s - 1];
                                            s % e
                                                ? 6 < e &&
                                                  4 == s % e &&
                                                  (a =
                                                      (r[a >>> 24] << 24) |
                                                      (r[(a >>> 16) & 255] <<
                                                          16) |
                                                      (r[(a >>> 8) & 255] <<
                                                          8) |
                                                      r[255 & a])
                                                : ((a =
                                                      (r[
                                                          (a =
                                                              (a << 8) |
                                                              (a >>> 24)) >>> 24
                                                      ] <<
                                                          24) |
                                                      (r[(a >>> 16) & 255] <<
                                                          16) |
                                                      (r[(a >>> 8) & 255] <<
                                                          8) |
                                                      r[255 & a]),
                                                  (a ^= x[(s / e) | 0] << 24)),
                                                (i[s] = i[s - e] ^ a);
                                        }
                                    for (
                                        t = this._invKeySchedule = [], e = 0;
                                        e < n;
                                        e++
                                    )
                                        (s = n - e),
                                            (a = e % 4 ? i[s] : i[s - 4]),
                                            (t[e] =
                                                4 > e || 4 >= s
                                                    ? a
                                                    : u[r[a >>> 24]] ^
                                                      c[r[(a >>> 16) & 255]] ^
                                                      l[r[(a >>> 8) & 255]] ^
                                                      f[r[255 & a]]);
                                },
                                encryptBlock: function (t, e) {
                                    this._doCryptBlock(
                                        t,
                                        e,
                                        this._keySchedule,
                                        s,
                                        a,
                                        o,
                                        h,
                                        r
                                    );
                                },
                                decryptBlock: function (t, e) {
                                    var n = t[e + 1];
                                    (t[e + 1] = t[e + 3]),
                                        (t[e + 3] = n),
                                        this._doCryptBlock(
                                            t,
                                            e,
                                            this._invKeySchedule,
                                            u,
                                            c,
                                            l,
                                            f,
                                            i
                                        ),
                                        (n = t[e + 1]),
                                        (t[e + 1] = t[e + 3]),
                                        (t[e + 3] = n);
                                },
                                _doCryptBlock: function (
                                    t,
                                    e,
                                    n,
                                    r,
                                    i,
                                    s,
                                    a,
                                    o
                                ) {
                                    for (
                                        var h = this._nRounds,
                                            u = t[e] ^ n[0],
                                            c = t[e + 1] ^ n[1],
                                            l = t[e + 2] ^ n[2],
                                            f = t[e + 3] ^ n[3],
                                            d = 4,
                                            g = 1;
                                        g < h;
                                        g++
                                    ) {
                                        var p =
                                                r[u >>> 24] ^
                                                i[(c >>> 16) & 255] ^
                                                s[(l >>> 8) & 255] ^
                                                a[255 & f] ^
                                                n[d++],
                                            y =
                                                r[c >>> 24] ^
                                                i[(l >>> 16) & 255] ^
                                                s[(f >>> 8) & 255] ^
                                                a[255 & u] ^
                                                n[d++],
                                            m =
                                                r[l >>> 24] ^
                                                i[(f >>> 16) & 255] ^
                                                s[(u >>> 8) & 255] ^
                                                a[255 & c] ^
                                                n[d++];
                                        (f =
                                            r[f >>> 24] ^
                                            i[(u >>> 16) & 255] ^
                                            s[(c >>> 8) & 255] ^
                                            a[255 & l] ^
                                            n[d++]),
                                            (u = p),
                                            (c = y),
                                            (l = m);
                                    }
                                    (p =
                                        ((o[u >>> 24] << 24) |
                                            (o[(c >>> 16) & 255] << 16) |
                                            (o[(l >>> 8) & 255] << 8) |
                                            o[255 & f]) ^
                                        n[d++]),
                                        (y =
                                            ((o[c >>> 24] << 24) |
                                                (o[(l >>> 16) & 255] << 16) |
                                                (o[(f >>> 8) & 255] << 8) |
                                                o[255 & u]) ^
                                            n[d++]),
                                        (m =
                                            ((o[l >>> 24] << 24) |
                                                (o[(f >>> 16) & 255] << 16) |
                                                (o[(u >>> 8) & 255] << 8) |
                                                o[255 & c]) ^
                                            n[d++]),
                                        (f =
                                            ((o[f >>> 24] << 24) |
                                                (o[(u >>> 16) & 255] << 16) |
                                                (o[(c >>> 8) & 255] << 8) |
                                                o[255 & l]) ^
                                            n[d++]),
                                        (t[e] = p),
                                        (t[e + 1] = y),
                                        (t[e + 2] = m),
                                        (t[e + 3] = f);
                                },
                                keySize: 8,
                            })),
                            (t.AES = e._createHelper(n));
                    })(),
                    (function () {
                        function t(t, e) {
                            var n = ((this._lBlock >>> t) ^ this._rBlock) & e;
                            (this._rBlock ^= n), (this._lBlock ^= n << t);
                        }
                        function e(t, e) {
                            var n = ((this._rBlock >>> t) ^ this._lBlock) & e;
                            (this._lBlock ^= n), (this._rBlock ^= n << t);
                        }
                        var n = p,
                            r = (i = n.lib).WordArray,
                            i = i.BlockCipher,
                            s = n.algo,
                            a = [
                                57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34,
                                26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3,
                                60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7,
                                62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37,
                                29, 21, 13, 5, 28, 20, 12, 4,
                            ],
                            o = [
                                14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23,
                                19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52,
                                31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49,
                                39, 56, 34, 53, 46, 42, 50, 36, 29, 32,
                            ],
                            h = [
                                1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23,
                                25, 27, 28,
                            ],
                            u = [
                                {
                                    0: 8421888,
                                    268435456: 32768,
                                    536870912: 8421378,
                                    805306368: 2,
                                    1073741824: 512,
                                    1342177280: 8421890,
                                    1610612736: 8389122,
                                    1879048192: 8388608,
                                    2147483648: 514,
                                    2415919104: 8389120,
                                    2684354560: 33280,
                                    2952790016: 8421376,
                                    3221225472: 32770,
                                    3489660928: 8388610,
                                    3758096384: 0,
                                    4026531840: 33282,
                                    134217728: 0,
                                    402653184: 8421890,
                                    671088640: 33282,
                                    939524096: 32768,
                                    1207959552: 8421888,
                                    1476395008: 512,
                                    1744830464: 8421378,
                                    2013265920: 2,
                                    2281701376: 8389120,
                                    2550136832: 33280,
                                    2818572288: 8421376,
                                    3087007744: 8389122,
                                    3355443200: 8388610,
                                    3623878656: 32770,
                                    3892314112: 514,
                                    4160749568: 8388608,
                                    1: 32768,
                                    268435457: 2,
                                    536870913: 8421888,
                                    805306369: 8388608,
                                    1073741825: 8421378,
                                    1342177281: 33280,
                                    1610612737: 512,
                                    1879048193: 8389122,
                                    2147483649: 8421890,
                                    2415919105: 8421376,
                                    2684354561: 8388610,
                                    2952790017: 33282,
                                    3221225473: 514,
                                    3489660929: 8389120,
                                    3758096385: 32770,
                                    4026531841: 0,
                                    134217729: 8421890,
                                    402653185: 8421376,
                                    671088641: 8388608,
                                    939524097: 512,
                                    1207959553: 32768,
                                    1476395009: 8388610,
                                    1744830465: 2,
                                    2013265921: 33282,
                                    2281701377: 32770,
                                    2550136833: 8389122,
                                    2818572289: 514,
                                    3087007745: 8421888,
                                    3355443201: 8389120,
                                    3623878657: 0,
                                    3892314113: 33280,
                                    4160749569: 8421378,
                                },
                                {
                                    0: 1074282512,
                                    16777216: 16384,
                                    33554432: 524288,
                                    50331648: 1074266128,
                                    67108864: 1073741840,
                                    83886080: 1074282496,
                                    100663296: 1073758208,
                                    117440512: 16,
                                    134217728: 540672,
                                    150994944: 1073758224,
                                    167772160: 1073741824,
                                    184549376: 540688,
                                    201326592: 524304,
                                    218103808: 0,
                                    234881024: 16400,
                                    251658240: 1074266112,
                                    8388608: 1073758208,
                                    25165824: 540688,
                                    41943040: 16,
                                    58720256: 1073758224,
                                    75497472: 1074282512,
                                    92274688: 1073741824,
                                    109051904: 524288,
                                    125829120: 1074266128,
                                    142606336: 524304,
                                    159383552: 0,
                                    176160768: 16384,
                                    192937984: 1074266112,
                                    209715200: 1073741840,
                                    226492416: 540672,
                                    243269632: 1074282496,
                                    260046848: 16400,
                                    268435456: 0,
                                    285212672: 1074266128,
                                    301989888: 1073758224,
                                    318767104: 1074282496,
                                    335544320: 1074266112,
                                    352321536: 16,
                                    369098752: 540688,
                                    385875968: 16384,
                                    402653184: 16400,
                                    419430400: 524288,
                                    436207616: 524304,
                                    452984832: 1073741840,
                                    469762048: 540672,
                                    486539264: 1073758208,
                                    503316480: 1073741824,
                                    520093696: 1074282512,
                                    276824064: 540688,
                                    293601280: 524288,
                                    310378496: 1074266112,
                                    327155712: 16384,
                                    343932928: 1073758208,
                                    360710144: 1074282512,
                                    377487360: 16,
                                    394264576: 1073741824,
                                    411041792: 1074282496,
                                    427819008: 1073741840,
                                    444596224: 1073758224,
                                    461373440: 524304,
                                    478150656: 0,
                                    494927872: 16400,
                                    511705088: 1074266128,
                                    528482304: 540672,
                                },
                                {
                                    0: 260,
                                    1048576: 0,
                                    2097152: 67109120,
                                    3145728: 65796,
                                    4194304: 65540,
                                    5242880: 67108868,
                                    6291456: 67174660,
                                    7340032: 67174400,
                                    8388608: 67108864,
                                    9437184: 67174656,
                                    10485760: 65792,
                                    11534336: 67174404,
                                    12582912: 67109124,
                                    13631488: 65536,
                                    14680064: 4,
                                    15728640: 256,
                                    524288: 67174656,
                                    1572864: 67174404,
                                    2621440: 0,
                                    3670016: 67109120,
                                    4718592: 67108868,
                                    5767168: 65536,
                                    6815744: 65540,
                                    7864320: 260,
                                    8912896: 4,
                                    9961472: 256,
                                    11010048: 67174400,
                                    12058624: 65796,
                                    13107200: 65792,
                                    14155776: 67109124,
                                    15204352: 67174660,
                                    16252928: 67108864,
                                    16777216: 67174656,
                                    17825792: 65540,
                                    18874368: 65536,
                                    19922944: 67109120,
                                    20971520: 256,
                                    22020096: 67174660,
                                    23068672: 67108868,
                                    24117248: 0,
                                    25165824: 67109124,
                                    26214400: 67108864,
                                    27262976: 4,
                                    28311552: 65792,
                                    29360128: 67174400,
                                    30408704: 260,
                                    31457280: 65796,
                                    32505856: 67174404,
                                    17301504: 67108864,
                                    18350080: 260,
                                    19398656: 67174656,
                                    20447232: 0,
                                    21495808: 65540,
                                    22544384: 67109120,
                                    23592960: 256,
                                    24641536: 67174404,
                                    25690112: 65536,
                                    26738688: 67174660,
                                    27787264: 65796,
                                    28835840: 67108868,
                                    29884416: 67109124,
                                    30932992: 67174400,
                                    31981568: 4,
                                    33030144: 65792,
                                },
                                {
                                    0: 2151682048,
                                    65536: 2147487808,
                                    131072: 4198464,
                                    196608: 2151677952,
                                    262144: 0,
                                    327680: 4198400,
                                    393216: 2147483712,
                                    458752: 4194368,
                                    524288: 2147483648,
                                    589824: 4194304,
                                    655360: 64,
                                    720896: 2147487744,
                                    786432: 2151678016,
                                    851968: 4160,
                                    917504: 4096,
                                    983040: 2151682112,
                                    32768: 2147487808,
                                    98304: 64,
                                    163840: 2151678016,
                                    229376: 2147487744,
                                    294912: 4198400,
                                    360448: 2151682112,
                                    425984: 0,
                                    491520: 2151677952,
                                    557056: 4096,
                                    622592: 2151682048,
                                    688128: 4194304,
                                    753664: 4160,
                                    819200: 2147483648,
                                    884736: 4194368,
                                    950272: 4198464,
                                    1015808: 2147483712,
                                    1048576: 4194368,
                                    1114112: 4198400,
                                    1179648: 2147483712,
                                    1245184: 0,
                                    1310720: 4160,
                                    1376256: 2151678016,
                                    1441792: 2151682048,
                                    1507328: 2147487808,
                                    1572864: 2151682112,
                                    1638400: 2147483648,
                                    1703936: 2151677952,
                                    1769472: 4198464,
                                    1835008: 2147487744,
                                    1900544: 4194304,
                                    1966080: 64,
                                    2031616: 4096,
                                    1081344: 2151677952,
                                    1146880: 2151682112,
                                    1212416: 0,
                                    1277952: 4198400,
                                    1343488: 4194368,
                                    1409024: 2147483648,
                                    1474560: 2147487808,
                                    1540096: 64,
                                    1605632: 2147483712,
                                    1671168: 4096,
                                    1736704: 2147487744,
                                    1802240: 2151678016,
                                    1867776: 4160,
                                    1933312: 2151682048,
                                    1998848: 4194304,
                                    2064384: 4198464,
                                },
                                {
                                    0: 128,
                                    4096: 17039360,
                                    8192: 262144,
                                    12288: 536870912,
                                    16384: 537133184,
                                    20480: 16777344,
                                    24576: 553648256,
                                    28672: 262272,
                                    32768: 16777216,
                                    36864: 537133056,
                                    40960: 536871040,
                                    45056: 553910400,
                                    49152: 553910272,
                                    53248: 0,
                                    57344: 17039488,
                                    61440: 553648128,
                                    2048: 17039488,
                                    6144: 553648256,
                                    10240: 128,
                                    14336: 17039360,
                                    18432: 262144,
                                    22528: 537133184,
                                    26624: 553910272,
                                    30720: 536870912,
                                    34816: 537133056,
                                    38912: 0,
                                    43008: 553910400,
                                    47104: 16777344,
                                    51200: 536871040,
                                    55296: 553648128,
                                    59392: 16777216,
                                    63488: 262272,
                                    65536: 262144,
                                    69632: 128,
                                    73728: 536870912,
                                    77824: 553648256,
                                    81920: 16777344,
                                    86016: 553910272,
                                    90112: 537133184,
                                    94208: 16777216,
                                    98304: 553910400,
                                    102400: 553648128,
                                    106496: 17039360,
                                    110592: 537133056,
                                    114688: 262272,
                                    118784: 536871040,
                                    122880: 0,
                                    126976: 17039488,
                                    67584: 553648256,
                                    71680: 16777216,
                                    75776: 17039360,
                                    79872: 537133184,
                                    83968: 536870912,
                                    88064: 17039488,
                                    92160: 128,
                                    96256: 553910272,
                                    100352: 262272,
                                    104448: 553910400,
                                    108544: 0,
                                    112640: 553648128,
                                    116736: 16777344,
                                    120832: 262144,
                                    124928: 537133056,
                                    129024: 536871040,
                                },
                                {
                                    0: 268435464,
                                    256: 8192,
                                    512: 270532608,
                                    768: 270540808,
                                    1024: 268443648,
                                    1280: 2097152,
                                    1536: 2097160,
                                    1792: 268435456,
                                    2048: 0,
                                    2304: 268443656,
                                    2560: 2105344,
                                    2816: 8,
                                    3072: 270532616,
                                    3328: 2105352,
                                    3584: 8200,
                                    3840: 270540800,
                                    128: 270532608,
                                    384: 270540808,
                                    640: 8,
                                    896: 2097152,
                                    1152: 2105352,
                                    1408: 268435464,
                                    1664: 268443648,
                                    1920: 8200,
                                    2176: 2097160,
                                    2432: 8192,
                                    2688: 268443656,
                                    2944: 270532616,
                                    3200: 0,
                                    3456: 270540800,
                                    3712: 2105344,
                                    3968: 268435456,
                                    4096: 268443648,
                                    4352: 270532616,
                                    4608: 270540808,
                                    4864: 8200,
                                    5120: 2097152,
                                    5376: 268435456,
                                    5632: 268435464,
                                    5888: 2105344,
                                    6144: 2105352,
                                    6400: 0,
                                    6656: 8,
                                    6912: 270532608,
                                    7168: 8192,
                                    7424: 268443656,
                                    7680: 270540800,
                                    7936: 2097160,
                                    4224: 8,
                                    4480: 2105344,
                                    4736: 2097152,
                                    4992: 268435464,
                                    5248: 268443648,
                                    5504: 8200,
                                    5760: 270540808,
                                    6016: 270532608,
                                    6272: 270540800,
                                    6528: 270532616,
                                    6784: 8192,
                                    7040: 2105352,
                                    7296: 2097160,
                                    7552: 0,
                                    7808: 268435456,
                                    8064: 268443656,
                                },
                                {
                                    0: 1048576,
                                    16: 33555457,
                                    32: 1024,
                                    48: 1049601,
                                    64: 34604033,
                                    80: 0,
                                    96: 1,
                                    112: 34603009,
                                    128: 33555456,
                                    144: 1048577,
                                    160: 33554433,
                                    176: 34604032,
                                    192: 34603008,
                                    208: 1025,
                                    224: 1049600,
                                    240: 33554432,
                                    8: 34603009,
                                    24: 0,
                                    40: 33555457,
                                    56: 34604032,
                                    72: 1048576,
                                    88: 33554433,
                                    104: 33554432,
                                    120: 1025,
                                    136: 1049601,
                                    152: 33555456,
                                    168: 34603008,
                                    184: 1048577,
                                    200: 1024,
                                    216: 34604033,
                                    232: 1,
                                    248: 1049600,
                                    256: 33554432,
                                    272: 1048576,
                                    288: 33555457,
                                    304: 34603009,
                                    320: 1048577,
                                    336: 33555456,
                                    352: 34604032,
                                    368: 1049601,
                                    384: 1025,
                                    400: 34604033,
                                    416: 1049600,
                                    432: 1,
                                    448: 0,
                                    464: 34603008,
                                    480: 33554433,
                                    496: 1024,
                                    264: 1049600,
                                    280: 33555457,
                                    296: 34603009,
                                    312: 1,
                                    328: 33554432,
                                    344: 1048576,
                                    360: 1025,
                                    376: 34604032,
                                    392: 33554433,
                                    408: 34603008,
                                    424: 0,
                                    440: 34604033,
                                    456: 1049601,
                                    472: 1024,
                                    488: 33555456,
                                    504: 1048577,
                                },
                                {
                                    0: 134219808,
                                    1: 131072,
                                    2: 134217728,
                                    3: 32,
                                    4: 131104,
                                    5: 134350880,
                                    6: 134350848,
                                    7: 2048,
                                    8: 134348800,
                                    9: 134219776,
                                    10: 133120,
                                    11: 134348832,
                                    12: 2080,
                                    13: 0,
                                    14: 134217760,
                                    15: 133152,
                                    2147483648: 2048,
                                    2147483649: 134350880,
                                    2147483650: 134219808,
                                    2147483651: 134217728,
                                    2147483652: 134348800,
                                    2147483653: 133120,
                                    2147483654: 133152,
                                    2147483655: 32,
                                    2147483656: 134217760,
                                    2147483657: 2080,
                                    2147483658: 131104,
                                    2147483659: 134350848,
                                    2147483660: 0,
                                    2147483661: 134348832,
                                    2147483662: 134219776,
                                    2147483663: 131072,
                                    16: 133152,
                                    17: 134350848,
                                    18: 32,
                                    19: 2048,
                                    20: 134219776,
                                    21: 134217760,
                                    22: 134348832,
                                    23: 131072,
                                    24: 0,
                                    25: 131104,
                                    26: 134348800,
                                    27: 134219808,
                                    28: 134350880,
                                    29: 133120,
                                    30: 2080,
                                    31: 134217728,
                                    2147483664: 131072,
                                    2147483665: 2048,
                                    2147483666: 134348832,
                                    2147483667: 133152,
                                    2147483668: 32,
                                    2147483669: 134348800,
                                    2147483670: 134217728,
                                    2147483671: 134219808,
                                    2147483672: 134350880,
                                    2147483673: 134217760,
                                    2147483674: 134219776,
                                    2147483675: 0,
                                    2147483676: 133120,
                                    2147483677: 2080,
                                    2147483678: 131104,
                                    2147483679: 134350848,
                                },
                            ],
                            c = [
                                4160749569, 528482304, 33030144, 2064384,
                                129024, 8064, 504, 2147483679,
                            ],
                            l = (s.DES = i.extend({
                                _doReset: function () {
                                    for (
                                        var t = this._key.words, e = [], n = 0;
                                        56 > n;
                                        n++
                                    ) {
                                        var r = a[n] - 1;
                                        e[n] =
                                            (t[r >>> 5] >>> (31 - (r % 32))) &
                                            1;
                                    }
                                    for (
                                        t = this._subKeys = [], r = 0;
                                        16 > r;
                                        r++
                                    ) {
                                        var i = (t[r] = []),
                                            s = h[r];
                                        for (n = 0; 24 > n; n++)
                                            (i[(n / 6) | 0] |=
                                                e[(o[n] - 1 + s) % 28] <<
                                                (31 - (n % 6))),
                                                (i[4 + ((n / 6) | 0)] |=
                                                    e[
                                                        28 +
                                                            ((o[n + 24] -
                                                                1 +
                                                                s) %
                                                                28)
                                                    ] <<
                                                    (31 - (n % 6)));
                                        for (
                                            i[0] = (i[0] << 1) | (i[0] >>> 31),
                                                n = 1;
                                            7 > n;
                                            n++
                                        )
                                            i[n] >>>= 4 * (n - 1) + 3;
                                        i[7] = (i[7] << 5) | (i[7] >>> 27);
                                    }
                                    for (
                                        e = this._invSubKeys = [], n = 0;
                                        16 > n;
                                        n++
                                    )
                                        e[n] = t[15 - n];
                                },
                                encryptBlock: function (t, e) {
                                    this._doCryptBlock(t, e, this._subKeys);
                                },
                                decryptBlock: function (t, e) {
                                    this._doCryptBlock(t, e, this._invSubKeys);
                                },
                                _doCryptBlock: function (n, r, i) {
                                    (this._lBlock = n[r]),
                                        (this._rBlock = n[r + 1]),
                                        t.call(this, 4, 252645135),
                                        t.call(this, 16, 65535),
                                        e.call(this, 2, 858993459),
                                        e.call(this, 8, 16711935),
                                        t.call(this, 1, 1431655765);
                                    for (var s = 0; 16 > s; s++) {
                                        for (
                                            var a = i[s],
                                                o = this._lBlock,
                                                h = this._rBlock,
                                                l = 0,
                                                f = 0;
                                            8 > f;
                                            f++
                                        )
                                            l |=
                                                u[f][((h ^ a[f]) & c[f]) >>> 0];
                                        (this._lBlock = h),
                                            (this._rBlock = o ^ l);
                                    }
                                    (i = this._lBlock),
                                        (this._lBlock = this._rBlock),
                                        (this._rBlock = i),
                                        t.call(this, 1, 1431655765),
                                        e.call(this, 8, 16711935),
                                        e.call(this, 2, 858993459),
                                        t.call(this, 16, 65535),
                                        t.call(this, 4, 252645135),
                                        (n[r] = this._lBlock),
                                        (n[r + 1] = this._rBlock);
                                },
                                keySize: 2,
                                ivSize: 2,
                                blockSize: 2,
                            }));
                        (n.DES = i._createHelper(l)),
                            (s = s.TripleDES =
                                i.extend({
                                    _doReset: function () {
                                        var t = this._key.words;
                                        (this._des1 = l.createEncryptor(
                                            r.create(t.slice(0, 2))
                                        )),
                                            (this._des2 = l.createEncryptor(
                                                r.create(t.slice(2, 4))
                                            )),
                                            (this._des3 = l.createEncryptor(
                                                r.create(t.slice(4, 6))
                                            ));
                                    },
                                    encryptBlock: function (t, e) {
                                        this._des1.encryptBlock(t, e),
                                            this._des2.decryptBlock(t, e),
                                            this._des3.encryptBlock(t, e);
                                    },
                                    decryptBlock: function (t, e) {
                                        this._des3.decryptBlock(t, e),
                                            this._des2.encryptBlock(t, e),
                                            this._des1.decryptBlock(t, e);
                                    },
                                    keySize: 6,
                                    ivSize: 2,
                                    blockSize: 2,
                                })),
                            (n.TripleDES = i._createHelper(s));
                    })(),
                    (function () {
                        var t = p,
                            e = t.lib.WordArray;
                        t.enc.Base64 = {
                            stringify: function (t) {
                                var e = t.words,
                                    n = t.sigBytes,
                                    r = this._map;
                                t.clamp(), (t = []);
                                for (var i = 0; i < n; i += 3)
                                    for (
                                        var s =
                                                (((e[i >>> 2] >>>
                                                    (24 - (i % 4) * 8)) &
                                                    255) <<
                                                    16) |
                                                (((e[(i + 1) >>> 2] >>>
                                                    (24 - ((i + 1) % 4) * 8)) &
                                                    255) <<
                                                    8) |
                                                ((e[(i + 2) >>> 2] >>>
                                                    (24 - ((i + 2) % 4) * 8)) &
                                                    255),
                                            a = 0;
                                        4 > a && i + 0.75 * a < n;
                                        a++
                                    )
                                        t.push(
                                            r.charAt((s >>> (6 * (3 - a))) & 63)
                                        );
                                if ((e = r.charAt(64)))
                                    for (; t.length % 4; ) t.push(e);
                                return t.join("");
                            },
                            parse: function (t) {
                                var n = t.length,
                                    r = this._map;
                                (i = r.charAt(64)) &&
                                    -1 != (i = t.indexOf(i)) &&
                                    (n = i);
                                for (var i = [], s = 0, a = 0; a < n; a++)
                                    if (a % 4) {
                                        var o =
                                                r.indexOf(t.charAt(a - 1)) <<
                                                ((a % 4) * 2),
                                            h =
                                                r.indexOf(t.charAt(a)) >>>
                                                (6 - (a % 4) * 2);
                                        (i[s >>> 2] |=
                                            (o | h) << (24 - (s % 4) * 8)),
                                            s++;
                                    }
                                return e.create(i, s);
                            },
                            _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                        };
                    })(),
                    (function (t) {
                        function e(t, e, n, r, i, s, a) {
                            return (
                                (((t = t + ((e & n) | (~e & r)) + i + a) << s) |
                                    (t >>> (32 - s))) +
                                e
                            );
                        }
                        function n(t, e, n, r, i, s, a) {
                            return (
                                (((t = t + ((e & r) | (n & ~r)) + i + a) << s) |
                                    (t >>> (32 - s))) +
                                e
                            );
                        }
                        function r(t, e, n, r, i, s, a) {
                            return (
                                (((t = t + (e ^ n ^ r) + i + a) << s) |
                                    (t >>> (32 - s))) +
                                e
                            );
                        }
                        function i(t, e, n, r, i, s, a) {
                            return (
                                (((t = t + (n ^ (e | ~r)) + i + a) << s) |
                                    (t >>> (32 - s))) +
                                e
                            );
                        }
                        for (
                            var s = p,
                                a = (h = s.lib).WordArray,
                                o = h.Hasher,
                                h = s.algo,
                                u = [],
                                c = 0;
                            64 > c;
                            c++
                        )
                            u[c] = (4294967296 * t.abs(t.sin(c + 1))) | 0;
                        (h = h.MD5 =
                            o.extend({
                                _doReset: function () {
                                    this._hash = new a.init([
                                        1732584193, 4023233417, 2562383102,
                                        271733878,
                                    ]);
                                },
                                _doProcessBlock: function (t, s) {
                                    for (var a = 0; 16 > a; a++) {
                                        var o = t[(l = s + a)];
                                        t[l] =
                                            (16711935 &
                                                ((o << 8) | (o >>> 24))) |
                                            (4278255360 &
                                                ((o << 24) | (o >>> 8)));
                                    }
                                    a = this._hash.words;
                                    var h,
                                        c,
                                        l = t[s + 0],
                                        f = ((o = t[s + 1]), t[s + 2]),
                                        d = t[s + 3],
                                        g = t[s + 4],
                                        p = t[s + 5],
                                        y = t[s + 6],
                                        m = t[s + 7],
                                        v = t[s + 8],
                                        S = t[s + 9],
                                        A = t[s + 10],
                                        b = t[s + 11],
                                        E = t[s + 12],
                                        x = t[s + 13],
                                        w = t[s + 14],
                                        F = t[s + 15],
                                        P = a[0],
                                        C = i(
                                            (C = i(
                                                (C = i(
                                                    (C = i(
                                                        (C = r(
                                                            (C = r(
                                                                (C = r(
                                                                    (C = r(
                                                                        (C = n(
                                                                            (C =
                                                                                n(
                                                                                    (C =
                                                                                        n(
                                                                                            (C =
                                                                                                n(
                                                                                                    (C =
                                                                                                        e(
                                                                                                            (C =
                                                                                                                e(
                                                                                                                    (C =
                                                                                                                        e(
                                                                                                                            (C =
                                                                                                                                e(
                                                                                                                                    (C =
                                                                                                                                        a[1]),
                                                                                                                                    (c =
                                                                                                                                        e(
                                                                                                                                            (c =
                                                                                                                                                a[2]),
                                                                                                                                            (h =
                                                                                                                                                e(
                                                                                                                                                    (h =
                                                                                                                                                        a[3]),
                                                                                                                                                    (P =
                                                                                                                                                        e(
                                                                                                                                                            P,
                                                                                                                                                            C,
                                                                                                                                                            c,
                                                                                                                                                            h,
                                                                                                                                                            l,
                                                                                                                                                            7,
                                                                                                                                                            u[0]
                                                                                                                                                        )),
                                                                                                                                                    C,
                                                                                                                                                    c,
                                                                                                                                                    o,
                                                                                                                                                    12,
                                                                                                                                                    u[1]
                                                                                                                                                )),
                                                                                                                                            P,
                                                                                                                                            C,
                                                                                                                                            f,
                                                                                                                                            17,
                                                                                                                                            u[2]
                                                                                                                                        )),
                                                                                                                                    h,
                                                                                                                                    P,
                                                                                                                                    d,
                                                                                                                                    22,
                                                                                                                                    u[3]
                                                                                                                                )),
                                                                                                                            (c =
                                                                                                                                e(
                                                                                                                                    c,
                                                                                                                                    (h =
                                                                                                                                        e(
                                                                                                                                            h,
                                                                                                                                            (P =
                                                                                                                                                e(
                                                                                                                                                    P,
                                                                                                                                                    C,
                                                                                                                                                    c,
                                                                                                                                                    h,
                                                                                                                                                    g,
                                                                                                                                                    7,
                                                                                                                                                    u[4]
                                                                                                                                                )),
                                                                                                                                            C,
                                                                                                                                            c,
                                                                                                                                            p,
                                                                                                                                            12,
                                                                                                                                            u[5]
                                                                                                                                        )),
                                                                                                                                    P,
                                                                                                                                    C,
                                                                                                                                    y,
                                                                                                                                    17,
                                                                                                                                    u[6]
                                                                                                                                )),
                                                                                                                            h,
                                                                                                                            P,
                                                                                                                            m,
                                                                                                                            22,
                                                                                                                            u[7]
                                                                                                                        )),
                                                                                                                    (c =
                                                                                                                        e(
                                                                                                                            c,
                                                                                                                            (h =
                                                                                                                                e(
                                                                                                                                    h,
                                                                                                                                    (P =
                                                                                                                                        e(
                                                                                                                                            P,
                                                                                                                                            C,
                                                                                                                                            c,
                                                                                                                                            h,
                                                                                                                                            v,
                                                                                                                                            7,
                                                                                                                                            u[8]
                                                                                                                                        )),
                                                                                                                                    C,
                                                                                                                                    c,
                                                                                                                                    S,
                                                                                                                                    12,
                                                                                                                                    u[9]
                                                                                                                                )),
                                                                                                                            P,
                                                                                                                            C,
                                                                                                                            A,
                                                                                                                            17,
                                                                                                                            u[10]
                                                                                                                        )),
                                                                                                                    h,
                                                                                                                    P,
                                                                                                                    b,
                                                                                                                    22,
                                                                                                                    u[11]
                                                                                                                )),
                                                                                                            (c =
                                                                                                                e(
                                                                                                                    c,
                                                                                                                    (h =
                                                                                                                        e(
                                                                                                                            h,
                                                                                                                            (P =
                                                                                                                                e(
                                                                                                                                    P,
                                                                                                                                    C,
                                                                                                                                    c,
                                                                                                                                    h,
                                                                                                                                    E,
                                                                                                                                    7,
                                                                                                                                    u[12]
                                                                                                                                )),
                                                                                                                            C,
                                                                                                                            c,
                                                                                                                            x,
                                                                                                                            12,
                                                                                                                            u[13]
                                                                                                                        )),
                                                                                                                    P,
                                                                                                                    C,
                                                                                                                    w,
                                                                                                                    17,
                                                                                                                    u[14]
                                                                                                                )),
                                                                                                            h,
                                                                                                            P,
                                                                                                            F,
                                                                                                            22,
                                                                                                            u[15]
                                                                                                        )),
                                                                                                    (c =
                                                                                                        n(
                                                                                                            c,
                                                                                                            (h =
                                                                                                                n(
                                                                                                                    h,
                                                                                                                    (P =
                                                                                                                        n(
                                                                                                                            P,
                                                                                                                            C,
                                                                                                                            c,
                                                                                                                            h,
                                                                                                                            o,
                                                                                                                            5,
                                                                                                                            u[16]
                                                                                                                        )),
                                                                                                                    C,
                                                                                                                    c,
                                                                                                                    y,
                                                                                                                    9,
                                                                                                                    u[17]
                                                                                                                )),
                                                                                                            P,
                                                                                                            C,
                                                                                                            b,
                                                                                                            14,
                                                                                                            u[18]
                                                                                                        )),
                                                                                                    h,
                                                                                                    P,
                                                                                                    l,
                                                                                                    20,
                                                                                                    u[19]
                                                                                                )),
                                                                                            (c =
                                                                                                n(
                                                                                                    c,
                                                                                                    (h =
                                                                                                        n(
                                                                                                            h,
                                                                                                            (P =
                                                                                                                n(
                                                                                                                    P,
                                                                                                                    C,
                                                                                                                    c,
                                                                                                                    h,
                                                                                                                    p,
                                                                                                                    5,
                                                                                                                    u[20]
                                                                                                                )),
                                                                                                            C,
                                                                                                            c,
                                                                                                            A,
                                                                                                            9,
                                                                                                            u[21]
                                                                                                        )),
                                                                                                    P,
                                                                                                    C,
                                                                                                    F,
                                                                                                    14,
                                                                                                    u[22]
                                                                                                )),
                                                                                            h,
                                                                                            P,
                                                                                            g,
                                                                                            20,
                                                                                            u[23]
                                                                                        )),
                                                                                    (c =
                                                                                        n(
                                                                                            c,
                                                                                            (h =
                                                                                                n(
                                                                                                    h,
                                                                                                    (P =
                                                                                                        n(
                                                                                                            P,
                                                                                                            C,
                                                                                                            c,
                                                                                                            h,
                                                                                                            S,
                                                                                                            5,
                                                                                                            u[24]
                                                                                                        )),
                                                                                                    C,
                                                                                                    c,
                                                                                                    w,
                                                                                                    9,
                                                                                                    u[25]
                                                                                                )),
                                                                                            P,
                                                                                            C,
                                                                                            d,
                                                                                            14,
                                                                                            u[26]
                                                                                        )),
                                                                                    h,
                                                                                    P,
                                                                                    v,
                                                                                    20,
                                                                                    u[27]
                                                                                )),
                                                                            (c =
                                                                                n(
                                                                                    c,
                                                                                    (h =
                                                                                        n(
                                                                                            h,
                                                                                            (P =
                                                                                                n(
                                                                                                    P,
                                                                                                    C,
                                                                                                    c,
                                                                                                    h,
                                                                                                    x,
                                                                                                    5,
                                                                                                    u[28]
                                                                                                )),
                                                                                            C,
                                                                                            c,
                                                                                            f,
                                                                                            9,
                                                                                            u[29]
                                                                                        )),
                                                                                    P,
                                                                                    C,
                                                                                    m,
                                                                                    14,
                                                                                    u[30]
                                                                                )),
                                                                            h,
                                                                            P,
                                                                            E,
                                                                            20,
                                                                            u[31]
                                                                        )),
                                                                        (c = r(
                                                                            c,
                                                                            (h =
                                                                                r(
                                                                                    h,
                                                                                    (P =
                                                                                        r(
                                                                                            P,
                                                                                            C,
                                                                                            c,
                                                                                            h,
                                                                                            p,
                                                                                            4,
                                                                                            u[32]
                                                                                        )),
                                                                                    C,
                                                                                    c,
                                                                                    v,
                                                                                    11,
                                                                                    u[33]
                                                                                )),
                                                                            P,
                                                                            C,
                                                                            b,
                                                                            16,
                                                                            u[34]
                                                                        )),
                                                                        h,
                                                                        P,
                                                                        w,
                                                                        23,
                                                                        u[35]
                                                                    )),
                                                                    (c = r(
                                                                        c,
                                                                        (h = r(
                                                                            h,
                                                                            (P =
                                                                                r(
                                                                                    P,
                                                                                    C,
                                                                                    c,
                                                                                    h,
                                                                                    o,
                                                                                    4,
                                                                                    u[36]
                                                                                )),
                                                                            C,
                                                                            c,
                                                                            g,
                                                                            11,
                                                                            u[37]
                                                                        )),
                                                                        P,
                                                                        C,
                                                                        m,
                                                                        16,
                                                                        u[38]
                                                                    )),
                                                                    h,
                                                                    P,
                                                                    A,
                                                                    23,
                                                                    u[39]
                                                                )),
                                                                (c = r(
                                                                    c,
                                                                    (h = r(
                                                                        h,
                                                                        (P = r(
                                                                            P,
                                                                            C,
                                                                            c,
                                                                            h,
                                                                            x,
                                                                            4,
                                                                            u[40]
                                                                        )),
                                                                        C,
                                                                        c,
                                                                        l,
                                                                        11,
                                                                        u[41]
                                                                    )),
                                                                    P,
                                                                    C,
                                                                    d,
                                                                    16,
                                                                    u[42]
                                                                )),
                                                                h,
                                                                P,
                                                                y,
                                                                23,
                                                                u[43]
                                                            )),
                                                            (c = r(
                                                                c,
                                                                (h = r(
                                                                    h,
                                                                    (P = r(
                                                                        P,
                                                                        C,
                                                                        c,
                                                                        h,
                                                                        S,
                                                                        4,
                                                                        u[44]
                                                                    )),
                                                                    C,
                                                                    c,
                                                                    E,
                                                                    11,
                                                                    u[45]
                                                                )),
                                                                P,
                                                                C,
                                                                F,
                                                                16,
                                                                u[46]
                                                            )),
                                                            h,
                                                            P,
                                                            f,
                                                            23,
                                                            u[47]
                                                        )),
                                                        (c = i(
                                                            c,
                                                            (h = i(
                                                                h,
                                                                (P = i(
                                                                    P,
                                                                    C,
                                                                    c,
                                                                    h,
                                                                    l,
                                                                    6,
                                                                    u[48]
                                                                )),
                                                                C,
                                                                c,
                                                                m,
                                                                10,
                                                                u[49]
                                                            )),
                                                            P,
                                                            C,
                                                            w,
                                                            15,
                                                            u[50]
                                                        )),
                                                        h,
                                                        P,
                                                        p,
                                                        21,
                                                        u[51]
                                                    )),
                                                    (c = i(
                                                        c,
                                                        (h = i(
                                                            h,
                                                            (P = i(
                                                                P,
                                                                C,
                                                                c,
                                                                h,
                                                                E,
                                                                6,
                                                                u[52]
                                                            )),
                                                            C,
                                                            c,
                                                            d,
                                                            10,
                                                            u[53]
                                                        )),
                                                        P,
                                                        C,
                                                        A,
                                                        15,
                                                        u[54]
                                                    )),
                                                    h,
                                                    P,
                                                    o,
                                                    21,
                                                    u[55]
                                                )),
                                                (c = i(
                                                    c,
                                                    (h = i(
                                                        h,
                                                        (P = i(
                                                            P,
                                                            C,
                                                            c,
                                                            h,
                                                            v,
                                                            6,
                                                            u[56]
                                                        )),
                                                        C,
                                                        c,
                                                        F,
                                                        10,
                                                        u[57]
                                                    )),
                                                    P,
                                                    C,
                                                    y,
                                                    15,
                                                    u[58]
                                                )),
                                                h,
                                                P,
                                                x,
                                                21,
                                                u[59]
                                            )),
                                            (c = i(
                                                c,
                                                (h = i(
                                                    h,
                                                    (P = i(
                                                        P,
                                                        C,
                                                        c,
                                                        h,
                                                        g,
                                                        6,
                                                        u[60]
                                                    )),
                                                    C,
                                                    c,
                                                    b,
                                                    10,
                                                    u[61]
                                                )),
                                                P,
                                                C,
                                                f,
                                                15,
                                                u[62]
                                            )),
                                            h,
                                            P,
                                            S,
                                            21,
                                            u[63]
                                        );
                                    (a[0] = (a[0] + P) | 0),
                                        (a[1] = (a[1] + C) | 0),
                                        (a[2] = (a[2] + c) | 0),
                                        (a[3] = (a[3] + h) | 0);
                                },
                                _doFinalize: function () {
                                    var e = this._data,
                                        n = e.words,
                                        r = 8 * this._nDataBytes,
                                        i = 8 * e.sigBytes;
                                    n[i >>> 5] |= 128 << (24 - (i % 32));
                                    var s = t.floor(r / 4294967296);
                                    for (
                                        n[15 + (((i + 64) >>> 9) << 4)] =
                                            (16711935 &
                                                ((s << 8) | (s >>> 24))) |
                                            (4278255360 &
                                                ((s << 24) | (s >>> 8))),
                                            n[14 + (((i + 64) >>> 9) << 4)] =
                                                (16711935 &
                                                    ((r << 8) | (r >>> 24))) |
                                                (4278255360 &
                                                    ((r << 24) | (r >>> 8))),
                                            e.sigBytes = 4 * (n.length + 1),
                                            this._process(),
                                            n = (e = this._hash).words,
                                            r = 0;
                                        4 > r;
                                        r++
                                    )
                                        (i = n[r]),
                                            (n[r] =
                                                (16711935 &
                                                    ((i << 8) | (i >>> 24))) |
                                                (4278255360 &
                                                    ((i << 24) | (i >>> 8))));
                                    return e;
                                },
                                clone: function () {
                                    var t = o.clone.call(this);
                                    return (t._hash = this._hash.clone()), t;
                                },
                            })),
                            (s.MD5 = o._createHelper(h)),
                            (s.HmacMD5 = o._createHmacHelper(h));
                    })(Math),
                    (function () {
                        var t = p,
                            e = (i = t.lib).WordArray,
                            n = i.Hasher,
                            r = [],
                            i = (t.algo.SHA1 = n.extend({
                                _doReset: function () {
                                    this._hash = new e.init([
                                        1732584193, 4023233417, 2562383102,
                                        271733878, 3285377520,
                                    ]);
                                },
                                _doProcessBlock: function (t, e) {
                                    for (
                                        var n = this._hash.words,
                                            i = n[0],
                                            s = n[1],
                                            a = n[2],
                                            o = n[3],
                                            h = n[4],
                                            u = 0;
                                        80 > u;
                                        u++
                                    ) {
                                        if (16 > u) r[u] = 0 | t[e + u];
                                        else {
                                            var c =
                                                r[u - 3] ^
                                                r[u - 8] ^
                                                r[u - 14] ^
                                                r[u - 16];
                                            r[u] = (c << 1) | (c >>> 31);
                                        }
                                        (c =
                                            ((i << 5) | (i >>> 27)) + h + r[u]),
                                            (c =
                                                20 > u
                                                    ? c +
                                                      (1518500249 +
                                                          ((s & a) | (~s & o)))
                                                    : 40 > u
                                                    ? c +
                                                      (1859775393 + (s ^ a ^ o))
                                                    : 60 > u
                                                    ? c +
                                                      (((s & a) |
                                                          (s & o) |
                                                          (a & o)) -
                                                          1894007588)
                                                    : c +
                                                      ((s ^ a ^ o) -
                                                          899497514)),
                                            (h = o),
                                            (o = a),
                                            (a = (s << 30) | (s >>> 2)),
                                            (s = i),
                                            (i = c);
                                    }
                                    (n[0] = (n[0] + i) | 0),
                                        (n[1] = (n[1] + s) | 0),
                                        (n[2] = (n[2] + a) | 0),
                                        (n[3] = (n[3] + o) | 0),
                                        (n[4] = (n[4] + h) | 0);
                                },
                                _doFinalize: function () {
                                    var t = this._data,
                                        e = t.words,
                                        n = 8 * this._nDataBytes,
                                        r = 8 * t.sigBytes;
                                    return (
                                        (e[r >>> 5] |= 128 << (24 - (r % 32))),
                                        (e[14 + (((r + 64) >>> 9) << 4)] =
                                            Math.floor(n / 4294967296)),
                                        (e[15 + (((r + 64) >>> 9) << 4)] = n),
                                        (t.sigBytes = 4 * e.length),
                                        this._process(),
                                        this._hash
                                    );
                                },
                                clone: function () {
                                    var t = n.clone.call(this);
                                    return (t._hash = this._hash.clone()), t;
                                },
                            }));
                        (t.SHA1 = n._createHelper(i)),
                            (t.HmacSHA1 = n._createHmacHelper(i));
                    })(),
                    (function (t) {
                        for (
                            var e = p,
                                n = (i = e.lib).WordArray,
                                r = i.Hasher,
                                i = e.algo,
                                s = [],
                                a = [],
                                o = function (t) {
                                    return (4294967296 * (t - (0 | t))) | 0;
                                },
                                h = 2,
                                u = 0;
                            64 > u;

                        ) {
                            var c;
                            t: {
                                c = h;
                                for (var l = t.sqrt(c), f = 2; f <= l; f++)
                                    if (!(c % f)) {
                                        c = !1;
                                        break t;
                                    }
                                c = !0;
                            }
                            c &&
                                (8 > u && (s[u] = o(t.pow(h, 0.5))),
                                (a[u] = o(t.pow(h, 1 / 3))),
                                u++),
                                h++;
                        }
                        var d = [];
                        (i = i.SHA256 =
                            r.extend({
                                _doReset: function () {
                                    this._hash = new n.init(s.slice(0));
                                },
                                _doProcessBlock: function (t, e) {
                                    for (
                                        var n = this._hash.words,
                                            r = n[0],
                                            i = n[1],
                                            s = n[2],
                                            o = n[3],
                                            h = n[4],
                                            u = n[5],
                                            c = n[6],
                                            l = n[7],
                                            f = 0;
                                        64 > f;
                                        f++
                                    ) {
                                        if (16 > f) d[f] = 0 | t[e + f];
                                        else {
                                            var g = d[f - 15],
                                                p = d[f - 2];
                                            d[f] =
                                                (((g << 25) | (g >>> 7)) ^
                                                    ((g << 14) | (g >>> 18)) ^
                                                    (g >>> 3)) +
                                                d[f - 7] +
                                                (((p << 15) | (p >>> 17)) ^
                                                    ((p << 13) | (p >>> 19)) ^
                                                    (p >>> 10)) +
                                                d[f - 16];
                                        }
                                        (g =
                                            l +
                                            (((h << 26) | (h >>> 6)) ^
                                                ((h << 21) | (h >>> 11)) ^
                                                ((h << 7) | (h >>> 25))) +
                                            ((h & u) ^ (~h & c)) +
                                            a[f] +
                                            d[f]),
                                            (p =
                                                (((r << 30) | (r >>> 2)) ^
                                                    ((r << 19) | (r >>> 13)) ^
                                                    ((r << 10) | (r >>> 22))) +
                                                ((r & i) ^ (r & s) ^ (i & s))),
                                            (l = c),
                                            (c = u),
                                            (u = h),
                                            (h = (o + g) | 0),
                                            (o = s),
                                            (s = i),
                                            (i = r),
                                            (r = (g + p) | 0);
                                    }
                                    (n[0] = (n[0] + r) | 0),
                                        (n[1] = (n[1] + i) | 0),
                                        (n[2] = (n[2] + s) | 0),
                                        (n[3] = (n[3] + o) | 0),
                                        (n[4] = (n[4] + h) | 0),
                                        (n[5] = (n[5] + u) | 0),
                                        (n[6] = (n[6] + c) | 0),
                                        (n[7] = (n[7] + l) | 0);
                                },
                                _doFinalize: function () {
                                    var e = this._data,
                                        n = e.words,
                                        r = 8 * this._nDataBytes,
                                        i = 8 * e.sigBytes;
                                    return (
                                        (n[i >>> 5] |= 128 << (24 - (i % 32))),
                                        (n[14 + (((i + 64) >>> 9) << 4)] =
                                            t.floor(r / 4294967296)),
                                        (n[15 + (((i + 64) >>> 9) << 4)] = r),
                                        (e.sigBytes = 4 * n.length),
                                        this._process(),
                                        this._hash
                                    );
                                },
                                clone: function () {
                                    var t = r.clone.call(this);
                                    return (t._hash = this._hash.clone()), t;
                                },
                            })),
                            (e.SHA256 = r._createHelper(i)),
                            (e.HmacSHA256 = r._createHmacHelper(i));
                    })(Math),
                    (function () {
                        var t = p,
                            e = t.lib.WordArray,
                            n = (r = t.algo).SHA256,
                            r = (r.SHA224 = n.extend({
                                _doReset: function () {
                                    this._hash = new e.init([
                                        3238371032, 914150663, 812702999,
                                        4144912697, 4290775857, 1750603025,
                                        1694076839, 3204075428,
                                    ]);
                                },
                                _doFinalize: function () {
                                    var t = n._doFinalize.call(this);
                                    return (t.sigBytes -= 4), t;
                                },
                            }));
                        (t.SHA224 = n._createHelper(r)),
                            (t.HmacSHA224 = n._createHmacHelper(r));
                    })(),
                    (function () {
                        function t() {
                            return r.create.apply(r, arguments);
                        }
                        for (
                            var e = p,
                                n = e.lib.Hasher,
                                r = (s = e.x64).Word,
                                i = s.WordArray,
                                s = e.algo,
                                a = [
                                    t(1116352408, 3609767458),
                                    t(1899447441, 602891725),
                                    t(3049323471, 3964484399),
                                    t(3921009573, 2173295548),
                                    t(961987163, 4081628472),
                                    t(1508970993, 3053834265),
                                    t(2453635748, 2937671579),
                                    t(2870763221, 3664609560),
                                    t(3624381080, 2734883394),
                                    t(310598401, 1164996542),
                                    t(607225278, 1323610764),
                                    t(1426881987, 3590304994),
                                    t(1925078388, 4068182383),
                                    t(2162078206, 991336113),
                                    t(2614888103, 633803317),
                                    t(3248222580, 3479774868),
                                    t(3835390401, 2666613458),
                                    t(4022224774, 944711139),
                                    t(264347078, 2341262773),
                                    t(604807628, 2007800933),
                                    t(770255983, 1495990901),
                                    t(1249150122, 1856431235),
                                    t(1555081692, 3175218132),
                                    t(1996064986, 2198950837),
                                    t(2554220882, 3999719339),
                                    t(2821834349, 766784016),
                                    t(2952996808, 2566594879),
                                    t(3210313671, 3203337956),
                                    t(3336571891, 1034457026),
                                    t(3584528711, 2466948901),
                                    t(113926993, 3758326383),
                                    t(338241895, 168717936),
                                    t(666307205, 1188179964),
                                    t(773529912, 1546045734),
                                    t(1294757372, 1522805485),
                                    t(1396182291, 2643833823),
                                    t(1695183700, 2343527390),
                                    t(1986661051, 1014477480),
                                    t(2177026350, 1206759142),
                                    t(2456956037, 344077627),
                                    t(2730485921, 1290863460),
                                    t(2820302411, 3158454273),
                                    t(3259730800, 3505952657),
                                    t(3345764771, 106217008),
                                    t(3516065817, 3606008344),
                                    t(3600352804, 1432725776),
                                    t(4094571909, 1467031594),
                                    t(275423344, 851169720),
                                    t(430227734, 3100823752),
                                    t(506948616, 1363258195),
                                    t(659060556, 3750685593),
                                    t(883997877, 3785050280),
                                    t(958139571, 3318307427),
                                    t(1322822218, 3812723403),
                                    t(1537002063, 2003034995),
                                    t(1747873779, 3602036899),
                                    t(1955562222, 1575990012),
                                    t(2024104815, 1125592928),
                                    t(2227730452, 2716904306),
                                    t(2361852424, 442776044),
                                    t(2428436474, 593698344),
                                    t(2756734187, 3733110249),
                                    t(3204031479, 2999351573),
                                    t(3329325298, 3815920427),
                                    t(3391569614, 3928383900),
                                    t(3515267271, 566280711),
                                    t(3940187606, 3454069534),
                                    t(4118630271, 4000239992),
                                    t(116418474, 1914138554),
                                    t(174292421, 2731055270),
                                    t(289380356, 3203993006),
                                    t(460393269, 320620315),
                                    t(685471733, 587496836),
                                    t(852142971, 1086792851),
                                    t(1017036298, 365543100),
                                    t(1126000580, 2618297676),
                                    t(1288033470, 3409855158),
                                    t(1501505948, 4234509866),
                                    t(1607167915, 987167468),
                                    t(1816402316, 1246189591),
                                ],
                                o = [],
                                h = 0;
                            80 > h;
                            h++
                        )
                            o[h] = t();
                        (s = s.SHA512 =
                            n.extend({
                                _doReset: function () {
                                    this._hash = new i.init([
                                        new r.init(1779033703, 4089235720),
                                        new r.init(3144134277, 2227873595),
                                        new r.init(1013904242, 4271175723),
                                        new r.init(2773480762, 1595750129),
                                        new r.init(1359893119, 2917565137),
                                        new r.init(2600822924, 725511199),
                                        new r.init(528734635, 4215389547),
                                        new r.init(1541459225, 327033209),
                                    ]);
                                },
                                _doProcessBlock: function (t, e) {
                                    for (
                                        var n = (l = this._hash.words)[0],
                                            r = l[1],
                                            i = l[2],
                                            s = l[3],
                                            h = l[4],
                                            u = l[5],
                                            c = l[6],
                                            l = l[7],
                                            f = n.high,
                                            d = n.low,
                                            g = r.high,
                                            p = r.low,
                                            y = i.high,
                                            m = i.low,
                                            v = s.high,
                                            S = s.low,
                                            A = h.high,
                                            b = h.low,
                                            E = u.high,
                                            x = u.low,
                                            w = c.high,
                                            F = c.low,
                                            P = l.high,
                                            C = l.low,
                                            D = f,
                                            O = d,
                                            T = g,
                                            H = p,
                                            I = y,
                                            R = m,
                                            N = v,
                                            B = S,
                                            j = A,
                                            _ = b,
                                            V = E,
                                            K = x,
                                            L = w,
                                            k = F,
                                            M = P,
                                            U = C,
                                            q = 0;
                                        80 > q;
                                        q++
                                    ) {
                                        var z = o[q];
                                        if (16 > q)
                                            var Y = (z.high = 0 | t[e + 2 * q]),
                                                W = (z.low =
                                                    0 | t[e + 2 * q + 1]);
                                        else {
                                            Y =
                                                (((W = (Y = o[q - 15]).high) >>>
                                                    1) |
                                                    ((G = Y.low) << 31)) ^
                                                ((W >>> 8) | (G << 24)) ^
                                                (W >>> 7);
                                            var G =
                                                    ((G >>> 1) | (W << 31)) ^
                                                    ((G >>> 8) | (W << 24)) ^
                                                    ((G >>> 7) | (W << 25)),
                                                X =
                                                    (((W = (X = o[q - 2])
                                                        .high) >>>
                                                        19) |
                                                        ((J = X.low) << 13)) ^
                                                    ((W << 3) | (J >>> 29)) ^
                                                    (W >>> 6),
                                                J =
                                                    ((J >>> 19) | (W << 13)) ^
                                                    ((J << 3) | (W >>> 29)) ^
                                                    ((J >>> 6) | (W << 26)),
                                                $ = (W = o[q - 7]).high,
                                                Z = (Q = o[q - 16]).high,
                                                Q = Q.low;
                                            (Y =
                                                (Y =
                                                    (Y =
                                                        Y +
                                                        $ +
                                                        ((W = G + W.low) >>> 0 <
                                                        G >>> 0
                                                            ? 1
                                                            : 0)) +
                                                    X +
                                                    ((W += J) >>> 0 < J >>> 0
                                                        ? 1
                                                        : 0)) +
                                                Z +
                                                ((W += Q) >>> 0 < Q >>> 0
                                                    ? 1
                                                    : 0)),
                                                (z.high = Y),
                                                (z.low = W);
                                        }
                                        ($ = (j & V) ^ (~j & L)),
                                            (Q = (_ & K) ^ (~_ & k)),
                                            (z = (D & T) ^ (D & I) ^ (T & I));
                                        var tt = (O & H) ^ (O & R) ^ (H & R),
                                            et =
                                                ((G =
                                                    ((D >>> 28) | (O << 4)) ^
                                                    ((D << 30) | (O >>> 2)) ^
                                                    ((D << 25) | (O >>> 7))),
                                                (X =
                                                    ((O >>> 28) | (D << 4)) ^
                                                    ((O << 30) | (D >>> 2)) ^
                                                    ((O << 25) | (D >>> 7))),
                                                (J = a[q]).high),
                                            nt = J.low;
                                        (Z =
                                            (Z =
                                                (Z =
                                                    (Z =
                                                        M +
                                                        (((j >>> 14) |
                                                            (_ << 18)) ^
                                                            ((j >>> 18) |
                                                                (_ << 14)) ^
                                                            ((j << 23) |
                                                                (_ >>> 9))) +
                                                        ((J =
                                                            U +
                                                            (((_ >>> 14) |
                                                                (j << 18)) ^
                                                                ((_ >>> 18) |
                                                                    (j << 14)) ^
                                                                ((_ << 23) |
                                                                    (j >>>
                                                                        9)))) >>>
                                                            0 <
                                                        U >>> 0
                                                            ? 1
                                                            : 0)) +
                                                    $ +
                                                    ((J += Q) >>> 0 < Q >>> 0
                                                        ? 1
                                                        : 0)) +
                                                et +
                                                ((J += nt) >>> 0 < nt >>> 0
                                                    ? 1
                                                    : 0)) +
                                            Y +
                                            ((J += W) >>> 0 < W >>> 0 ? 1 : 0)),
                                            (M = L),
                                            (U = k),
                                            (L = V),
                                            (k = K),
                                            (V = j),
                                            (K = _),
                                            (j =
                                                (N +
                                                    Z +
                                                    ((_ = (B + J) | 0) >>> 0 <
                                                    B >>> 0
                                                        ? 1
                                                        : 0)) |
                                                0),
                                            (N = I),
                                            (B = R),
                                            (I = T),
                                            (R = H),
                                            (T = D),
                                            (H = O),
                                            (D =
                                                (Z +
                                                    (z =
                                                        G +
                                                        z +
                                                        ((W = X + tt) >>> 0 <
                                                        X >>> 0
                                                            ? 1
                                                            : 0)) +
                                                    ((O = (J + W) | 0) >>> 0 <
                                                    J >>> 0
                                                        ? 1
                                                        : 0)) |
                                                0);
                                    }
                                    (d = n.low = d + O),
                                        (n.high =
                                            f +
                                            D +
                                            (d >>> 0 < O >>> 0 ? 1 : 0)),
                                        (p = r.low = p + H),
                                        (r.high =
                                            g +
                                            T +
                                            (p >>> 0 < H >>> 0 ? 1 : 0)),
                                        (m = i.low = m + R),
                                        (i.high =
                                            y +
                                            I +
                                            (m >>> 0 < R >>> 0 ? 1 : 0)),
                                        (S = s.low = S + B),
                                        (s.high =
                                            v +
                                            N +
                                            (S >>> 0 < B >>> 0 ? 1 : 0)),
                                        (b = h.low = b + _),
                                        (h.high =
                                            A +
                                            j +
                                            (b >>> 0 < _ >>> 0 ? 1 : 0)),
                                        (x = u.low = x + K),
                                        (u.high =
                                            E +
                                            V +
                                            (x >>> 0 < K >>> 0 ? 1 : 0)),
                                        (F = c.low = F + k),
                                        (c.high =
                                            w +
                                            L +
                                            (F >>> 0 < k >>> 0 ? 1 : 0)),
                                        (C = l.low = C + U),
                                        (l.high =
                                            P +
                                            M +
                                            (C >>> 0 < U >>> 0 ? 1 : 0));
                                },
                                _doFinalize: function () {
                                    var t = this._data,
                                        e = t.words,
                                        n = 8 * this._nDataBytes,
                                        r = 8 * t.sigBytes;
                                    return (
                                        (e[r >>> 5] |= 128 << (24 - (r % 32))),
                                        (e[30 + (((r + 128) >>> 10) << 5)] =
                                            Math.floor(n / 4294967296)),
                                        (e[31 + (((r + 128) >>> 10) << 5)] = n),
                                        (t.sigBytes = 4 * e.length),
                                        this._process(),
                                        this._hash.toX32()
                                    );
                                },
                                clone: function () {
                                    var t = n.clone.call(this);
                                    return (t._hash = this._hash.clone()), t;
                                },
                                blockSize: 32,
                            })),
                            (e.SHA512 = n._createHelper(s)),
                            (e.HmacSHA512 = n._createHmacHelper(s));
                    })(),
                    (function () {
                        var t = p,
                            e = (i = t.x64).Word,
                            n = i.WordArray,
                            r = (i = t.algo).SHA512,
                            i = (i.SHA384 = r.extend({
                                _doReset: function () {
                                    this._hash = new n.init([
                                        new e.init(3418070365, 3238371032),
                                        new e.init(1654270250, 914150663),
                                        new e.init(2438529370, 812702999),
                                        new e.init(355462360, 4144912697),
                                        new e.init(1731405415, 4290775857),
                                        new e.init(2394180231, 1750603025),
                                        new e.init(3675008525, 1694076839),
                                        new e.init(1203062813, 3204075428),
                                    ]);
                                },
                                _doFinalize: function () {
                                    var t = r._doFinalize.call(this);
                                    return (t.sigBytes -= 16), t;
                                },
                            }));
                        (t.SHA384 = r._createHelper(i)),
                            (t.HmacSHA384 = r._createHmacHelper(i));
                    })(),
                    (function () {
                        var t = p,
                            e = (r = t.lib).WordArray,
                            n = r.Hasher,
                            r = t.algo,
                            i = e.create([
                                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
                                14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5,
                                2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7,
                                0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4,
                                13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2,
                                10, 14, 1, 3, 8, 11, 6, 15, 13,
                            ]),
                            s = e.create([
                                5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10,
                                3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12,
                                4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12,
                                2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5,
                                12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8,
                                7, 6, 2, 13, 14, 0, 3, 9, 11,
                            ]),
                            a = e.create([
                                11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6,
                                7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15,
                                9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15,
                                14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14,
                                15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5,
                                11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6,
                            ]),
                            o = e.create([
                                8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14,
                                12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7,
                                6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12,
                                13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14,
                                6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9,
                                12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11,
                            ]),
                            h = e.create([
                                0, 1518500249, 1859775393, 2400959708,
                                2840853838,
                            ]),
                            u = e.create([
                                1352829926, 1548603684, 1836072691, 2053994217,
                                0,
                            ]);
                        (r = r.RIPEMD160 =
                            n.extend({
                                _doReset: function () {
                                    this._hash = e.create([
                                        1732584193, 4023233417, 2562383102,
                                        271733878, 3285377520,
                                    ]);
                                },
                                _doProcessBlock: function (t, e) {
                                    for (var n = 0; 16 > n; n++) {
                                        var r = t[(b = e + n)];
                                        t[b] =
                                            (16711935 &
                                                ((r << 8) | (r >>> 24))) |
                                            (4278255360 &
                                                ((r << 24) | (r >>> 8)));
                                    }
                                    var c,
                                        l,
                                        f,
                                        d,
                                        g,
                                        p,
                                        y,
                                        m,
                                        v,
                                        S,
                                        A,
                                        b = this._hash.words,
                                        E = ((r = h.words), u.words),
                                        x = i.words,
                                        w = s.words,
                                        F = a.words,
                                        P = o.words;
                                    for (
                                        p = c = b[0],
                                            y = l = b[1],
                                            m = f = b[2],
                                            v = d = b[3],
                                            S = g = b[4],
                                            n = 0;
                                        80 > n;
                                        n += 1
                                    )
                                        (A = (c + t[e + x[n]]) | 0),
                                            (A =
                                                16 > n
                                                    ? A + ((l ^ f ^ d) + r[0])
                                                    : 32 > n
                                                    ? A +
                                                      (((l & f) | (~l & d)) +
                                                          r[1])
                                                    : 48 > n
                                                    ? A +
                                                      (((l | ~f) ^ d) + r[2])
                                                    : 64 > n
                                                    ? A +
                                                      (((l & d) | (f & ~d)) +
                                                          r[3])
                                                    : A +
                                                      ((l ^ (f | ~d)) + r[4])),
                                            (A =
                                                ((A =
                                                    ((A |= 0) << F[n]) |
                                                    (A >>> (32 - F[n]))) +
                                                    g) |
                                                0),
                                            (c = g),
                                            (g = d),
                                            (d = (f << 10) | (f >>> 22)),
                                            (f = l),
                                            (l = A),
                                            (A = (p + t[e + w[n]]) | 0),
                                            (A =
                                                16 > n
                                                    ? A +
                                                      ((y ^ (m | ~v)) + E[0])
                                                    : 32 > n
                                                    ? A +
                                                      (((y & v) | (m & ~v)) +
                                                          E[1])
                                                    : 48 > n
                                                    ? A +
                                                      (((y | ~m) ^ v) + E[2])
                                                    : 64 > n
                                                    ? A +
                                                      (((y & m) | (~y & v)) +
                                                          E[3])
                                                    : A + ((y ^ m ^ v) + E[4])),
                                            (A =
                                                ((A =
                                                    ((A |= 0) << P[n]) |
                                                    (A >>> (32 - P[n]))) +
                                                    S) |
                                                0),
                                            (p = S),
                                            (S = v),
                                            (v = (m << 10) | (m >>> 22)),
                                            (m = y),
                                            (y = A);
                                    (A = (b[1] + f + v) | 0),
                                        (b[1] = (b[2] + d + S) | 0),
                                        (b[2] = (b[3] + g + p) | 0),
                                        (b[3] = (b[4] + c + y) | 0),
                                        (b[4] = (b[0] + l + m) | 0),
                                        (b[0] = A);
                                },
                                _doFinalize: function () {
                                    var t = this._data,
                                        e = t.words,
                                        n = 8 * this._nDataBytes,
                                        r = 8 * t.sigBytes;
                                    for (
                                        e[r >>> 5] |= 128 << (24 - (r % 32)),
                                            e[14 + (((r + 64) >>> 9) << 4)] =
                                                (16711935 &
                                                    ((n << 8) | (n >>> 24))) |
                                                (4278255360 &
                                                    ((n << 24) | (n >>> 8))),
                                            t.sigBytes = 4 * (e.length + 1),
                                            this._process(),
                                            e = (t = this._hash).words,
                                            n = 0;
                                        5 > n;
                                        n++
                                    )
                                        (r = e[n]),
                                            (e[n] =
                                                (16711935 &
                                                    ((r << 8) | (r >>> 24))) |
                                                (4278255360 &
                                                    ((r << 24) | (r >>> 8))));
                                    return t;
                                },
                                clone: function () {
                                    var t = n.clone.call(this);
                                    return (t._hash = this._hash.clone()), t;
                                },
                            })),
                            (t.RIPEMD160 = n._createHelper(r)),
                            (t.HmacRIPEMD160 = n._createHmacHelper(r));
                    })(Math),
                    (g = (d = p).enc.Utf8),
                    (d.algo.HMAC = d.lib.Base.extend({
                        init: function (t, e) {
                            (t = this._hasher = new t.init()),
                                "string" == typeof e && (e = g.parse(e));
                            var n = t.blockSize,
                                r = 4 * n;
                            e.sigBytes > r && (e = t.finalize(e)), e.clamp();
                            for (
                                var i = (this._oKey = e.clone()),
                                    s = (this._iKey = e.clone()),
                                    a = i.words,
                                    o = s.words,
                                    h = 0;
                                h < n;
                                h++
                            )
                                (a[h] ^= 1549556828), (o[h] ^= 909522486);
                            (i.sigBytes = s.sigBytes = r), this.reset();
                        },
                        reset: function () {
                            var t = this._hasher;
                            t.reset(), t.update(this._iKey);
                        },
                        update: function (t) {
                            return this._hasher.update(t), this;
                        },
                        finalize: function (t) {
                            var e = this._hasher;
                            return (
                                (t = e.finalize(t)),
                                e.reset(),
                                e.finalize(this._oKey.clone().concat(t))
                            );
                        },
                    })),
                    (function () {
                        var t,
                            e = p,
                            n = (t = e.lib).Base,
                            r = t.WordArray,
                            i = (t = e.algo).HMAC,
                            s = (t.PBKDF2 = n.extend({
                                cfg: n.extend({
                                    keySize: 4,
                                    hasher: t.SHA1,
                                    iterations: 1,
                                }),
                                init: function (t) {
                                    this.cfg = this.cfg.extend(t);
                                },
                                compute: function (t, e) {
                                    var n = this.cfg,
                                        s = i.create(n.hasher, t),
                                        a = r.create(),
                                        o = r.create([1]),
                                        h = a.words,
                                        u = o.words,
                                        c = n.keySize;
                                    for (n = n.iterations; h.length < c; ) {
                                        var l = s.update(e).finalize(o);
                                        s.reset();
                                        for (
                                            var f = l.words,
                                                d = f.length,
                                                g = l,
                                                p = 1;
                                            p < n;
                                            p++
                                        ) {
                                            (g = s.finalize(g)), s.reset();
                                            for (
                                                var y = g.words, m = 0;
                                                m < d;
                                                m++
                                            )
                                                f[m] ^= y[m];
                                        }
                                        a.concat(l), u[0]++;
                                    }
                                    return (a.sigBytes = 4 * c), a;
                                },
                            }));
                        e.PBKDF2 = function (t, e, n) {
                            return s.create(n).compute(t, e);
                        };
                    })();
                var y,
                    m =
                        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
                function v(t) {
                    var e,
                        n,
                        r = "";
                    for (e = 0; e + 3 <= t.length; e += 3)
                        (n = parseInt(t.substring(e, e + 3), 16)),
                            (r += m.charAt(n >> 6) + m.charAt(63 & n));
                    for (
                        e + 1 == t.length
                            ? ((n = parseInt(t.substring(e, e + 1), 16)),
                              (r += m.charAt(n << 2)))
                            : e + 2 == t.length &&
                              ((n = parseInt(t.substring(e, e + 2), 16)),
                              (r += m.charAt(n >> 2) + m.charAt((3 & n) << 4))),
                            "=";
                        (3 & r.length) > 0;

                    )
                        r += "=";
                    return r;
                }
                function S(t) {
                    var e,
                        n,
                        r,
                        i = "",
                        s = 0;
                    for (e = 0; e < t.length && "=" != t.charAt(e); ++e)
                        (r = m.indexOf(t.charAt(e))) < 0 ||
                            (0 == s
                                ? ((i += F(r >> 2)), (n = 3 & r), (s = 1))
                                : 1 == s
                                ? ((i += F((n << 2) | (r >> 4))),
                                  (n = 15 & r),
                                  (s = 2))
                                : 2 == s
                                ? ((i += F(n)),
                                  (i += F(r >> 2)),
                                  (n = 3 & r),
                                  (s = 3))
                                : ((i += F((n << 2) | (r >> 4))),
                                  (i += F(15 & r)),
                                  (s = 0)));
                    return 1 == s && (i += F(n << 2)), i;
                }
                function A(t, e, n) {
                    null != t &&
                        ("number" == typeof t
                            ? this.fromNumber(t, e, n)
                            : null == e && "string" != typeof t
                            ? this.fromString(t, 256)
                            : this.fromString(t, e));
                }
                function b() {
                    return new A(null);
                }
                "Microsoft Internet Explorer" == u.appName
                    ? ((A.prototype.am = function (t, e, n, r, i, s) {
                          for (var a = 32767 & e, o = e >> 15; --s >= 0; ) {
                              var h = 32767 & this[t],
                                  u = this[t++] >> 15,
                                  c = o * h + u * a;
                              (i =
                                  ((h =
                                      a * h +
                                      ((32767 & c) << 15) +
                                      n[r] +
                                      (1073741823 & i)) >>>
                                      30) +
                                  (c >>> 15) +
                                  o * u +
                                  (i >>> 30)),
                                  (n[r++] = 1073741823 & h);
                          }
                          return i;
                      }),
                      (y = 30))
                    : "Netscape" != u.appName
                    ? ((A.prototype.am = function (t, e, n, r, i, s) {
                          for (; --s >= 0; ) {
                              var a = e * this[t++] + n[r] + i;
                              (i = Math.floor(a / 67108864)),
                                  (n[r++] = 67108863 & a);
                          }
                          return i;
                      }),
                      (y = 26))
                    : ((A.prototype.am = function (t, e, n, r, i, s) {
                          for (var a = 16383 & e, o = e >> 14; --s >= 0; ) {
                              var h = 16383 & this[t],
                                  u = this[t++] >> 14,
                                  c = o * h + u * a;
                              (i =
                                  ((h =
                                      a * h + ((16383 & c) << 14) + n[r] + i) >>
                                      28) +
                                  (c >> 14) +
                                  o * u),
                                  (n[r++] = 268435455 & h);
                          }
                          return i;
                      }),
                      (y = 28)),
                    (A.prototype.DB = y),
                    (A.prototype.DM = (1 << y) - 1),
                    (A.prototype.DV = 1 << y),
                    (A.prototype.FV = Math.pow(2, 52)),
                    (A.prototype.F1 = 52 - y),
                    (A.prototype.F2 = 2 * y - 52);
                var E,
                    x,
                    w = new Array();
                for (E = "0".charCodeAt(0), x = 0; x <= 9; ++x) w[E++] = x;
                for (E = "a".charCodeAt(0), x = 10; x < 36; ++x) w[E++] = x;
                for (E = "A".charCodeAt(0), x = 10; x < 36; ++x) w[E++] = x;
                function F(t) {
                    return "0123456789abcdefghijklmnopqrstuvwxyz".charAt(t);
                }
                function P(t, e) {
                    var n = w[t.charCodeAt(e)];
                    return null == n ? -1 : n;
                }
                function C(t) {
                    var e = b();
                    return e.fromInt(t), e;
                }
                function D(t) {
                    var e,
                        n = 1;
                    return (
                        0 != (e = t >>> 16) && ((t = e), (n += 16)),
                        0 != (e = t >> 8) && ((t = e), (n += 8)),
                        0 != (e = t >> 4) && ((t = e), (n += 4)),
                        0 != (e = t >> 2) && ((t = e), (n += 2)),
                        0 != (e = t >> 1) && ((t = e), (n += 1)),
                        n
                    );
                }
                function O(t) {
                    this.m = t;
                }
                function T(t) {
                    (this.m = t),
                        (this.mp = t.invDigit()),
                        (this.mpl = 32767 & this.mp),
                        (this.mph = this.mp >> 15),
                        (this.um = (1 << (t.DB - 15)) - 1),
                        (this.mt2 = 2 * t.t);
                }
                function H(t, e) {
                    return t & e;
                }
                function I(t, e) {
                    return t | e;
                }
                function R(t, e) {
                    return t ^ e;
                }
                function N(t, e) {
                    return t & ~e;
                }
                function B(t) {
                    if (0 == t) return -1;
                    var e = 0;
                    return (
                        0 == (65535 & t) && ((t >>= 16), (e += 16)),
                        0 == (255 & t) && ((t >>= 8), (e += 8)),
                        0 == (15 & t) && ((t >>= 4), (e += 4)),
                        0 == (3 & t) && ((t >>= 2), (e += 2)),
                        0 == (1 & t) && ++e,
                        e
                    );
                }
                function j(t) {
                    for (var e = 0; 0 != t; ) (t &= t - 1), ++e;
                    return e;
                }
                function _() {}
                function V(t) {
                    return t;
                }
                function K(t) {
                    (this.r2 = b()),
                        (this.q3 = b()),
                        A.ONE.dlShiftTo(2 * t.t, this.r2),
                        (this.mu = this.r2.divide(t)),
                        (this.m = t);
                }
                (O.prototype.convert = function (t) {
                    return t.s < 0 || t.compareTo(this.m) >= 0
                        ? t.mod(this.m)
                        : t;
                }),
                    (O.prototype.revert = function (t) {
                        return t;
                    }),
                    (O.prototype.reduce = function (t) {
                        t.divRemTo(this.m, null, t);
                    }),
                    (O.prototype.mulTo = function (t, e, n) {
                        t.multiplyTo(e, n), this.reduce(n);
                    }),
                    (O.prototype.sqrTo = function (t, e) {
                        t.squareTo(e), this.reduce(e);
                    }),
                    (T.prototype.convert = function (t) {
                        var e = b();
                        return (
                            t.abs().dlShiftTo(this.m.t, e),
                            e.divRemTo(this.m, null, e),
                            t.s < 0 &&
                                e.compareTo(A.ZERO) > 0 &&
                                this.m.subTo(e, e),
                            e
                        );
                    }),
                    (T.prototype.revert = function (t) {
                        var e = b();
                        return t.copyTo(e), this.reduce(e), e;
                    }),
                    (T.prototype.reduce = function (t) {
                        for (; t.t <= this.mt2; ) t[t.t++] = 0;
                        for (var e = 0; e < this.m.t; ++e) {
                            var n = 32767 & t[e],
                                r =
                                    (n * this.mpl +
                                        (((n * this.mph +
                                            (t[e] >> 15) * this.mpl) &
                                            this.um) <<
                                            15)) &
                                    t.DM;
                            for (
                                t[(n = e + this.m.t)] += this.m.am(
                                    0,
                                    r,
                                    t,
                                    e,
                                    0,
                                    this.m.t
                                );
                                t[n] >= t.DV;

                            )
                                (t[n] -= t.DV), t[++n]++;
                        }
                        t.clamp(),
                            t.drShiftTo(this.m.t, t),
                            t.compareTo(this.m) >= 0 && t.subTo(this.m, t);
                    }),
                    (T.prototype.mulTo = function (t, e, n) {
                        t.multiplyTo(e, n), this.reduce(n);
                    }),
                    (T.prototype.sqrTo = function (t, e) {
                        t.squareTo(e), this.reduce(e);
                    }),
                    (A.prototype.copyTo = function (t) {
                        for (var e = this.t - 1; e >= 0; --e) t[e] = this[e];
                        (t.t = this.t), (t.s = this.s);
                    }),
                    (A.prototype.fromInt = function (t) {
                        (this.t = 1),
                            (this.s = t < 0 ? -1 : 0),
                            t > 0
                                ? (this[0] = t)
                                : t < -1
                                ? (this[0] = t + this.DV)
                                : (this.t = 0);
                    }),
                    (A.prototype.fromString = function (t, e) {
                        var n;
                        if (16 == e) n = 4;
                        else if (8 == e) n = 3;
                        else if (256 == e) n = 8;
                        else if (2 == e) n = 1;
                        else if (32 == e) n = 5;
                        else {
                            if (4 != e) return void this.fromRadix(t, e);
                            n = 2;
                        }
                        (this.t = 0), (this.s = 0);
                        for (var r = t.length, i = !1, s = 0; --r >= 0; ) {
                            var a = 8 == n ? 255 & t[r] : P(t, r);
                            a < 0
                                ? "-" == t.charAt(r) && (i = !0)
                                : ((i = !1),
                                  0 == s
                                      ? (this[this.t++] = a)
                                      : s + n > this.DB
                                      ? ((this[this.t - 1] |=
                                            (a & ((1 << (this.DB - s)) - 1)) <<
                                            s),
                                        (this[this.t++] = a >> (this.DB - s)))
                                      : (this[this.t - 1] |= a << s),
                                  (s += n) >= this.DB && (s -= this.DB));
                        }
                        8 == n &&
                            0 != (128 & t[0]) &&
                            ((this.s = -1),
                            s > 0 &&
                                (this[this.t - 1] |=
                                    ((1 << (this.DB - s)) - 1) << s)),
                            this.clamp(),
                            i && A.ZERO.subTo(this, this);
                    }),
                    (A.prototype.clamp = function () {
                        for (
                            var t = this.s & this.DM;
                            this.t > 0 && this[this.t - 1] == t;

                        )
                            --this.t;
                    }),
                    (A.prototype.dlShiftTo = function (t, e) {
                        var n;
                        for (n = this.t - 1; n >= 0; --n) e[n + t] = this[n];
                        for (n = t - 1; n >= 0; --n) e[n] = 0;
                        (e.t = this.t + t), (e.s = this.s);
                    }),
                    (A.prototype.drShiftTo = function (t, e) {
                        for (var n = t; n < this.t; ++n) e[n - t] = this[n];
                        (e.t = Math.max(this.t - t, 0)), (e.s = this.s);
                    }),
                    (A.prototype.lShiftTo = function (t, e) {
                        var n,
                            r = t % this.DB,
                            i = this.DB - r,
                            s = (1 << i) - 1,
                            a = Math.floor(t / this.DB),
                            o = (this.s << r) & this.DM;
                        for (n = this.t - 1; n >= 0; --n)
                            (e[n + a + 1] = (this[n] >> i) | o),
                                (o = (this[n] & s) << r);
                        for (n = a - 1; n >= 0; --n) e[n] = 0;
                        (e[a] = o),
                            (e.t = this.t + a + 1),
                            (e.s = this.s),
                            e.clamp();
                    }),
                    (A.prototype.rShiftTo = function (t, e) {
                        e.s = this.s;
                        var n = Math.floor(t / this.DB);
                        if (n >= this.t) e.t = 0;
                        else {
                            var r = t % this.DB,
                                i = this.DB - r,
                                s = (1 << r) - 1;
                            e[0] = this[n] >> r;
                            for (var a = n + 1; a < this.t; ++a)
                                (e[a - n - 1] |= (this[a] & s) << i),
                                    (e[a - n] = this[a] >> r);
                            r > 0 && (e[this.t - n - 1] |= (this.s & s) << i),
                                (e.t = this.t - n),
                                e.clamp();
                        }
                    }),
                    (A.prototype.subTo = function (t, e) {
                        for (
                            var n = 0, r = 0, i = Math.min(t.t, this.t);
                            n < i;

                        )
                            (r += this[n] - t[n]),
                                (e[n++] = r & this.DM),
                                (r >>= this.DB);
                        if (t.t < this.t) {
                            for (r -= t.s; n < this.t; )
                                (r += this[n]),
                                    (e[n++] = r & this.DM),
                                    (r >>= this.DB);
                            r += this.s;
                        } else {
                            for (r += this.s; n < t.t; )
                                (r -= t[n]),
                                    (e[n++] = r & this.DM),
                                    (r >>= this.DB);
                            r -= t.s;
                        }
                        (e.s = r < 0 ? -1 : 0),
                            r < -1
                                ? (e[n++] = this.DV + r)
                                : r > 0 && (e[n++] = r),
                            (e.t = n),
                            e.clamp();
                    }),
                    (A.prototype.multiplyTo = function (t, e) {
                        var n = this.abs(),
                            r = t.abs(),
                            i = n.t;
                        for (e.t = i + r.t; --i >= 0; ) e[i] = 0;
                        for (i = 0; i < r.t; ++i)
                            e[i + n.t] = n.am(0, r[i], e, i, 0, n.t);
                        (e.s = 0),
                            e.clamp(),
                            this.s != t.s && A.ZERO.subTo(e, e);
                    }),
                    (A.prototype.squareTo = function (t) {
                        for (
                            var e = this.abs(), n = (t.t = 2 * e.t);
                            --n >= 0;

                        )
                            t[n] = 0;
                        for (n = 0; n < e.t - 1; ++n) {
                            var r = e.am(n, e[n], t, 2 * n, 0, 1);
                            (t[n + e.t] += e.am(
                                n + 1,
                                2 * e[n],
                                t,
                                2 * n + 1,
                                r,
                                e.t - n - 1
                            )) >= e.DV &&
                                ((t[n + e.t] -= e.DV), (t[n + e.t + 1] = 1));
                        }
                        t.t > 0 &&
                            (t[t.t - 1] += e.am(n, e[n], t, 2 * n, 0, 1)),
                            (t.s = 0),
                            t.clamp();
                    }),
                    (A.prototype.divRemTo = function (t, e, n) {
                        var r = t.abs();
                        if (!(r.t <= 0)) {
                            var i = this.abs();
                            if (i.t < r.t)
                                return (
                                    null != e && e.fromInt(0),
                                    void (null != n && this.copyTo(n))
                                );
                            null == n && (n = b());
                            var s = b(),
                                a = this.s,
                                o = t.s,
                                h = this.DB - D(r[r.t - 1]);
                            h > 0
                                ? (r.lShiftTo(h, s), i.lShiftTo(h, n))
                                : (r.copyTo(s), i.copyTo(n));
                            var u = s.t,
                                c = s[u - 1];
                            if (0 != c) {
                                var l =
                                        c * (1 << this.F1) +
                                        (u > 1 ? s[u - 2] >> this.F2 : 0),
                                    f = this.FV / l,
                                    d = (1 << this.F1) / l,
                                    g = 1 << this.F2,
                                    p = n.t,
                                    y = p - u,
                                    m = null == e ? b() : e;
                                for (
                                    s.dlShiftTo(y, m),
                                        n.compareTo(m) >= 0 &&
                                            ((n[n.t++] = 1), n.subTo(m, n)),
                                        A.ONE.dlShiftTo(u, m),
                                        m.subTo(s, s);
                                    s.t < u;

                                )
                                    s[s.t++] = 0;
                                for (; --y >= 0; ) {
                                    var v =
                                        n[--p] == c
                                            ? this.DM
                                            : Math.floor(
                                                  n[p] * f + (n[p - 1] + g) * d
                                              );
                                    if ((n[p] += s.am(0, v, n, y, 0, u)) < v)
                                        for (
                                            s.dlShiftTo(y, m), n.subTo(m, n);
                                            n[p] < --v;

                                        )
                                            n.subTo(m, n);
                                }
                                null != e &&
                                    (n.drShiftTo(u, e),
                                    a != o && A.ZERO.subTo(e, e)),
                                    (n.t = u),
                                    n.clamp(),
                                    h > 0 && n.rShiftTo(h, n),
                                    a < 0 && A.ZERO.subTo(n, n);
                            }
                        }
                    }),
                    (A.prototype.invDigit = function () {
                        if (this.t < 1) return 0;
                        var t = this[0];
                        if (0 == (1 & t)) return 0;
                        var e = 3 & t;
                        return (e =
                            ((e =
                                ((e =
                                    ((e = (e * (2 - (15 & t) * e)) & 15) *
                                        (2 - (255 & t) * e)) &
                                    255) *
                                    (2 - (((65535 & t) * e) & 65535))) &
                                65535) *
                                (2 - ((t * e) % this.DV))) %
                            this.DV) > 0
                            ? this.DV - e
                            : -e;
                    }),
                    (A.prototype.isEven = function () {
                        return 0 == (this.t > 0 ? 1 & this[0] : this.s);
                    }),
                    (A.prototype.exp = function (t, e) {
                        if (t > 4294967295 || t < 1) return A.ONE;
                        var n = b(),
                            r = b(),
                            i = e.convert(this),
                            s = D(t) - 1;
                        for (i.copyTo(n); --s >= 0; )
                            if ((e.sqrTo(n, r), (t & (1 << s)) > 0))
                                e.mulTo(r, i, n);
                            else {
                                var a = n;
                                (n = r), (r = a);
                            }
                        return e.revert(n);
                    }),
                    (A.prototype.toString = function (t) {
                        if (this.s < 0) return "-" + this.negate().toString(t);
                        var e;
                        if (16 == t) e = 4;
                        else if (8 == t) e = 3;
                        else if (2 == t) e = 1;
                        else if (32 == t) e = 5;
                        else {
                            if (4 != t) return this.toRadix(t);
                            e = 2;
                        }
                        var n,
                            r = (1 << e) - 1,
                            i = !1,
                            s = "",
                            a = this.t,
                            o = this.DB - ((a * this.DB) % e);
                        if (a-- > 0)
                            for (
                                o < this.DB &&
                                (n = this[a] >> o) > 0 &&
                                ((i = !0), (s = F(n)));
                                a >= 0;

                            )
                                o < e
                                    ? ((n =
                                          (this[a] & ((1 << o) - 1)) <<
                                          (e - o)),
                                      (n |= this[--a] >> (o += this.DB - e)))
                                    : ((n = (this[a] >> (o -= e)) & r),
                                      o <= 0 && ((o += this.DB), --a)),
                                    n > 0 && (i = !0),
                                    i && (s += F(n));
                        return i ? s : "0";
                    }),
                    (A.prototype.negate = function () {
                        var t = b();
                        return A.ZERO.subTo(this, t), t;
                    }),
                    (A.prototype.abs = function () {
                        return this.s < 0 ? this.negate() : this;
                    }),
                    (A.prototype.compareTo = function (t) {
                        var e = this.s - t.s;
                        if (0 != e) return e;
                        var n = this.t;
                        if (0 != (e = n - t.t)) return this.s < 0 ? -e : e;
                        for (; --n >= 0; )
                            if (0 != (e = this[n] - t[n])) return e;
                        return 0;
                    }),
                    (A.prototype.bitLength = function () {
                        return this.t <= 0
                            ? 0
                            : this.DB * (this.t - 1) +
                                  D(this[this.t - 1] ^ (this.s & this.DM));
                    }),
                    (A.prototype.mod = function (t) {
                        var e = b();
                        return (
                            this.abs().divRemTo(t, null, e),
                            this.s < 0 &&
                                e.compareTo(A.ZERO) > 0 &&
                                t.subTo(e, e),
                            e
                        );
                    }),
                    (A.prototype.modPowInt = function (t, e) {
                        var n;
                        return (
                            (n = t < 256 || e.isEven() ? new O(e) : new T(e)),
                            this.exp(t, n)
                        );
                    }),
                    (A.ZERO = C(0)),
                    (A.ONE = C(1)),
                    (_.prototype.convert = V),
                    (_.prototype.revert = V),
                    (_.prototype.mulTo = function (t, e, n) {
                        t.multiplyTo(e, n);
                    }),
                    (_.prototype.sqrTo = function (t, e) {
                        t.squareTo(e);
                    }),
                    (K.prototype.convert = function (t) {
                        if (t.s < 0 || t.t > 2 * this.m.t) return t.mod(this.m);
                        if (t.compareTo(this.m) < 0) return t;
                        var e = b();
                        return t.copyTo(e), this.reduce(e), e;
                    }),
                    (K.prototype.revert = function (t) {
                        return t;
                    }),
                    (K.prototype.reduce = function (t) {
                        for (
                            t.drShiftTo(this.m.t - 1, this.r2),
                                t.t > this.m.t + 1 &&
                                    ((t.t = this.m.t + 1), t.clamp()),
                                this.mu.multiplyUpperTo(
                                    this.r2,
                                    this.m.t + 1,
                                    this.q3
                                ),
                                this.m.multiplyLowerTo(
                                    this.q3,
                                    this.m.t + 1,
                                    this.r2
                                );
                            t.compareTo(this.r2) < 0;

                        )
                            t.dAddOffset(1, this.m.t + 1);
                        for (t.subTo(this.r2, t); t.compareTo(this.m) >= 0; )
                            t.subTo(this.m, t);
                    }),
                    (K.prototype.mulTo = function (t, e, n) {
                        t.multiplyTo(e, n), this.reduce(n);
                    }),
                    (K.prototype.sqrTo = function (t, e) {
                        t.squareTo(e), this.reduce(e);
                    });
                var L = [
                        2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,
                        53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107,
                        109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,
                        173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229,
                        233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283,
                        293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359,
                        367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431,
                        433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491,
                        499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571,
                        577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641,
                        643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709,
                        719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787,
                        797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,
                        863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941,
                        947, 953, 967, 971, 977, 983, 991, 997,
                    ],
                    k = (1 << 26) / L[L.length - 1];
                function M() {
                    (this.i = 0), (this.j = 0), (this.S = new Array());
                }
                (A.prototype.chunkSize = function (t) {
                    return Math.floor((Math.LN2 * this.DB) / Math.log(t));
                }),
                    (A.prototype.toRadix = function (t) {
                        if (
                            (null == t && (t = 10),
                            0 == this.signum() || t < 2 || t > 36)
                        )
                            return "0";
                        var e = this.chunkSize(t),
                            n = Math.pow(t, e),
                            r = C(n),
                            i = b(),
                            s = b(),
                            a = "";
                        for (this.divRemTo(r, i, s); i.signum() > 0; )
                            (a = (n + s.intValue()).toString(t).substr(1) + a),
                                i.divRemTo(r, i, s);
                        return s.intValue().toString(t) + a;
                    }),
                    (A.prototype.fromRadix = function (t, e) {
                        this.fromInt(0), null == e && (e = 10);
                        for (
                            var n = this.chunkSize(e),
                                r = Math.pow(e, n),
                                i = !1,
                                s = 0,
                                a = 0,
                                o = 0;
                            o < t.length;
                            ++o
                        ) {
                            var h = P(t, o);
                            h < 0
                                ? "-" == t.charAt(o) &&
                                  0 == this.signum() &&
                                  (i = !0)
                                : ((a = e * a + h),
                                  ++s >= n &&
                                      (this.dMultiply(r),
                                      this.dAddOffset(a, 0),
                                      (s = 0),
                                      (a = 0)));
                        }
                        s > 0 &&
                            (this.dMultiply(Math.pow(e, s)),
                            this.dAddOffset(a, 0)),
                            i && A.ZERO.subTo(this, this);
                    }),
                    (A.prototype.fromNumber = function (t, e, n) {
                        if ("number" == typeof e)
                            if (t < 2) this.fromInt(1);
                            else
                                for (
                                    this.fromNumber(t, n),
                                        this.testBit(t - 1) ||
                                            this.bitwiseTo(
                                                A.ONE.shiftLeft(t - 1),
                                                I,
                                                this
                                            ),
                                        this.isEven() && this.dAddOffset(1, 0);
                                    !this.isProbablePrime(e);

                                )
                                    this.dAddOffset(2, 0),
                                        this.bitLength() > t &&
                                            this.subTo(
                                                A.ONE.shiftLeft(t - 1),
                                                this
                                            );
                        else {
                            var r = new Array(),
                                i = 7 & t;
                            (r.length = 1 + (t >> 3)),
                                e.nextBytes(r),
                                i > 0 ? (r[0] &= (1 << i) - 1) : (r[0] = 0),
                                this.fromString(r, 256);
                        }
                    }),
                    (A.prototype.bitwiseTo = function (t, e, n) {
                        var r,
                            i,
                            s = Math.min(t.t, this.t);
                        for (r = 0; r < s; ++r) n[r] = e(this[r], t[r]);
                        if (t.t < this.t) {
                            for (i = t.s & this.DM, r = s; r < this.t; ++r)
                                n[r] = e(this[r], i);
                            n.t = this.t;
                        } else {
                            for (i = this.s & this.DM, r = s; r < t.t; ++r)
                                n[r] = e(i, t[r]);
                            n.t = t.t;
                        }
                        (n.s = e(this.s, t.s)), n.clamp();
                    }),
                    (A.prototype.changeBit = function (t, e) {
                        var n = A.ONE.shiftLeft(t);
                        return this.bitwiseTo(n, e, n), n;
                    }),
                    (A.prototype.addTo = function (t, e) {
                        for (
                            var n = 0, r = 0, i = Math.min(t.t, this.t);
                            n < i;

                        )
                            (r += this[n] + t[n]),
                                (e[n++] = r & this.DM),
                                (r >>= this.DB);
                        if (t.t < this.t) {
                            for (r += t.s; n < this.t; )
                                (r += this[n]),
                                    (e[n++] = r & this.DM),
                                    (r >>= this.DB);
                            r += this.s;
                        } else {
                            for (r += this.s; n < t.t; )
                                (r += t[n]),
                                    (e[n++] = r & this.DM),
                                    (r >>= this.DB);
                            r += t.s;
                        }
                        (e.s = r < 0 ? -1 : 0),
                            r > 0
                                ? (e[n++] = r)
                                : r < -1 && (e[n++] = this.DV + r),
                            (e.t = n),
                            e.clamp();
                    }),
                    (A.prototype.dMultiply = function (t) {
                        (this[this.t] = this.am(0, t - 1, this, 0, 0, this.t)),
                            ++this.t,
                            this.clamp();
                    }),
                    (A.prototype.dAddOffset = function (t, e) {
                        if (0 != t) {
                            for (; this.t <= e; ) this[this.t++] = 0;
                            for (this[e] += t; this[e] >= this.DV; )
                                (this[e] -= this.DV),
                                    ++e >= this.t && (this[this.t++] = 0),
                                    ++this[e];
                        }
                    }),
                    (A.prototype.multiplyLowerTo = function (t, e, n) {
                        var r,
                            i = Math.min(this.t + t.t, e);
                        for (n.s = 0, n.t = i; i > 0; ) n[--i] = 0;
                        for (r = n.t - this.t; i < r; ++i)
                            n[i + this.t] = this.am(0, t[i], n, i, 0, this.t);
                        for (r = Math.min(t.t, e); i < r; ++i)
                            this.am(0, t[i], n, i, 0, e - i);
                        n.clamp();
                    }),
                    (A.prototype.multiplyUpperTo = function (t, e, n) {
                        --e;
                        var r = (n.t = this.t + t.t - e);
                        for (n.s = 0; --r >= 0; ) n[r] = 0;
                        for (r = Math.max(e - this.t, 0); r < t.t; ++r)
                            n[this.t + r - e] = this.am(
                                e - r,
                                t[r],
                                n,
                                0,
                                0,
                                this.t + r - e
                            );
                        n.clamp(), n.drShiftTo(1, n);
                    }),
                    (A.prototype.modInt = function (t) {
                        if (t <= 0) return 0;
                        var e = this.DV % t,
                            n = this.s < 0 ? t - 1 : 0;
                        if (this.t > 0)
                            if (0 == e) n = this[0] % t;
                            else
                                for (var r = this.t - 1; r >= 0; --r)
                                    n = (e * n + this[r]) % t;
                        return n;
                    }),
                    (A.prototype.millerRabin = function (t) {
                        var e = this.subtract(A.ONE),
                            n = e.getLowestSetBit();
                        if (n <= 0) return !1;
                        var r = e.shiftRight(n);
                        (t = (t + 1) >> 1) > L.length && (t = L.length);
                        for (var i = b(), s = 0; s < t; ++s) {
                            i.fromInt(L[Math.floor(Math.random() * L.length)]);
                            var a = i.modPow(r, this);
                            if (
                                0 != a.compareTo(A.ONE) &&
                                0 != a.compareTo(e)
                            ) {
                                for (
                                    var o = 1;
                                    o++ < n && 0 != a.compareTo(e);

                                )
                                    if (
                                        0 ==
                                        (a = a.modPowInt(2, this)).compareTo(
                                            A.ONE
                                        )
                                    )
                                        return !1;
                                if (0 != a.compareTo(e)) return !1;
                            }
                        }
                        return !0;
                    }),
                    (A.prototype.clone = function () {
                        var t = b();
                        return this.copyTo(t), t;
                    }),
                    (A.prototype.intValue = function () {
                        if (this.s < 0) {
                            if (1 == this.t) return this[0] - this.DV;
                            if (0 == this.t) return -1;
                        } else {
                            if (1 == this.t) return this[0];
                            if (0 == this.t) return 0;
                        }
                        return (
                            ((this[1] & ((1 << (32 - this.DB)) - 1)) <<
                                this.DB) |
                            this[0]
                        );
                    }),
                    (A.prototype.byteValue = function () {
                        return 0 == this.t ? this.s : (this[0] << 24) >> 24;
                    }),
                    (A.prototype.shortValue = function () {
                        return 0 == this.t ? this.s : (this[0] << 16) >> 16;
                    }),
                    (A.prototype.signum = function () {
                        return this.s < 0
                            ? -1
                            : this.t <= 0 || (1 == this.t && this[0] <= 0)
                            ? 0
                            : 1;
                    }),
                    (A.prototype.toByteArray = function () {
                        var t = this.t,
                            e = new Array();
                        e[0] = this.s;
                        var n,
                            r = this.DB - ((t * this.DB) % 8),
                            i = 0;
                        if (t-- > 0)
                            for (
                                r < this.DB &&
                                (n = this[t] >> r) != (this.s & this.DM) >> r &&
                                (e[i++] = n | (this.s << (this.DB - r)));
                                t >= 0;

                            )
                                r < 8
                                    ? ((n =
                                          (this[t] & ((1 << r) - 1)) <<
                                          (8 - r)),
                                      (n |= this[--t] >> (r += this.DB - 8)))
                                    : ((n = (this[t] >> (r -= 8)) & 255),
                                      r <= 0 && ((r += this.DB), --t)),
                                    0 != (128 & n) && (n |= -256),
                                    0 == i &&
                                        (128 & this.s) != (128 & n) &&
                                        ++i,
                                    (i > 0 || n != this.s) && (e[i++] = n);
                        return e;
                    }),
                    (A.prototype.equals = function (t) {
                        return 0 == this.compareTo(t);
                    }),
                    (A.prototype.min = function (t) {
                        return this.compareTo(t) < 0 ? this : t;
                    }),
                    (A.prototype.max = function (t) {
                        return this.compareTo(t) > 0 ? this : t;
                    }),
                    (A.prototype.and = function (t) {
                        var e = b();
                        return this.bitwiseTo(t, H, e), e;
                    }),
                    (A.prototype.or = function (t) {
                        var e = b();
                        return this.bitwiseTo(t, I, e), e;
                    }),
                    (A.prototype.xor = function (t) {
                        var e = b();
                        return this.bitwiseTo(t, R, e), e;
                    }),
                    (A.prototype.andNot = function (t) {
                        var e = b();
                        return this.bitwiseTo(t, N, e), e;
                    }),
                    (A.prototype.not = function () {
                        for (var t = b(), e = 0; e < this.t; ++e)
                            t[e] = this.DM & ~this[e];
                        return (t.t = this.t), (t.s = ~this.s), t;
                    }),
                    (A.prototype.shiftLeft = function (t) {
                        var e = b();
                        return (
                            t < 0 ? this.rShiftTo(-t, e) : this.lShiftTo(t, e),
                            e
                        );
                    }),
                    (A.prototype.shiftRight = function (t) {
                        var e = b();
                        return (
                            t < 0 ? this.lShiftTo(-t, e) : this.rShiftTo(t, e),
                            e
                        );
                    }),
                    (A.prototype.getLowestSetBit = function () {
                        for (var t = 0; t < this.t; ++t)
                            if (0 != this[t]) return t * this.DB + B(this[t]);
                        return this.s < 0 ? this.t * this.DB : -1;
                    }),
                    (A.prototype.bitCount = function () {
                        for (
                            var t = 0, e = this.s & this.DM, n = 0;
                            n < this.t;
                            ++n
                        )
                            t += j(this[n] ^ e);
                        return t;
                    }),
                    (A.prototype.testBit = function (t) {
                        var e = Math.floor(t / this.DB);
                        return e >= this.t
                            ? 0 != this.s
                            : 0 != (this[e] & (1 << t % this.DB));
                    }),
                    (A.prototype.setBit = function (t) {
                        return this.changeBit(t, I);
                    }),
                    (A.prototype.clearBit = function (t) {
                        return this.changeBit(t, N);
                    }),
                    (A.prototype.flipBit = function (t) {
                        return this.changeBit(t, R);
                    }),
                    (A.prototype.add = function (t) {
                        var e = b();
                        return this.addTo(t, e), e;
                    }),
                    (A.prototype.subtract = function (t) {
                        var e = b();
                        return this.subTo(t, e), e;
                    }),
                    (A.prototype.multiply = function (t) {
                        var e = b();
                        return this.multiplyTo(t, e), e;
                    }),
                    (A.prototype.divide = function (t) {
                        var e = b();
                        return this.divRemTo(t, e, null), e;
                    }),
                    (A.prototype.remainder = function (t) {
                        var e = b();
                        return this.divRemTo(t, null, e), e;
                    }),
                    (A.prototype.divideAndRemainder = function (t) {
                        var e = b(),
                            n = b();
                        return this.divRemTo(t, e, n), new Array(e, n);
                    }),
                    (A.prototype.modPow = function (t, e) {
                        var n,
                            r,
                            i = t.bitLength(),
                            s = C(1);
                        if (i <= 0) return s;
                        (n =
                            i < 18
                                ? 1
                                : i < 48
                                ? 3
                                : i < 144
                                ? 4
                                : i < 768
                                ? 5
                                : 6),
                            (r =
                                i < 8
                                    ? new O(e)
                                    : e.isEven()
                                    ? new K(e)
                                    : new T(e));
                        var a = new Array(),
                            o = 3,
                            h = n - 1,
                            u = (1 << n) - 1;
                        if (((a[1] = r.convert(this)), n > 1)) {
                            var c = b();
                            for (r.sqrTo(a[1], c); o <= u; )
                                (a[o] = b()),
                                    r.mulTo(c, a[o - 2], a[o]),
                                    (o += 2);
                        }
                        var l,
                            f,
                            d = t.t - 1,
                            g = !0,
                            p = b();
                        for (i = D(t[d]) - 1; d >= 0; ) {
                            for (
                                i >= h
                                    ? (l = (t[d] >> (i - h)) & u)
                                    : ((l =
                                          (t[d] & ((1 << (i + 1)) - 1)) <<
                                          (h - i)),
                                      d > 0 &&
                                          (l |= t[d - 1] >> (this.DB + i - h))),
                                    o = n;
                                0 == (1 & l);

                            )
                                (l >>= 1), --o;
                            if (((i -= o) < 0 && ((i += this.DB), --d), g))
                                a[l].copyTo(s), (g = !1);
                            else {
                                for (; o > 1; )
                                    r.sqrTo(s, p), r.sqrTo(p, s), (o -= 2);
                                o > 0
                                    ? r.sqrTo(s, p)
                                    : ((f = s), (s = p), (p = f)),
                                    r.mulTo(p, a[l], s);
                            }
                            for (; d >= 0 && 0 == (t[d] & (1 << i)); )
                                r.sqrTo(s, p),
                                    (f = s),
                                    (s = p),
                                    (p = f),
                                    --i < 0 && ((i = this.DB - 1), --d);
                        }
                        return r.revert(s);
                    }),
                    (A.prototype.modInverse = function (t) {
                        var e = t.isEven();
                        if ((this.isEven() && e) || 0 == t.signum())
                            return A.ZERO;
                        for (
                            var n = t.clone(),
                                r = this.clone(),
                                i = C(1),
                                s = C(0),
                                a = C(0),
                                o = C(1);
                            0 != n.signum();

                        ) {
                            for (; n.isEven(); )
                                n.rShiftTo(1, n),
                                    e
                                        ? ((i.isEven() && s.isEven()) ||
                                              (i.addTo(this, i), s.subTo(t, s)),
                                          i.rShiftTo(1, i))
                                        : s.isEven() || s.subTo(t, s),
                                    s.rShiftTo(1, s);
                            for (; r.isEven(); )
                                r.rShiftTo(1, r),
                                    e
                                        ? ((a.isEven() && o.isEven()) ||
                                              (a.addTo(this, a), o.subTo(t, o)),
                                          a.rShiftTo(1, a))
                                        : o.isEven() || o.subTo(t, o),
                                    o.rShiftTo(1, o);
                            n.compareTo(r) >= 0
                                ? (n.subTo(r, n),
                                  e && i.subTo(a, i),
                                  s.subTo(o, s))
                                : (r.subTo(n, r),
                                  e && a.subTo(i, a),
                                  o.subTo(s, o));
                        }
                        return 0 != r.compareTo(A.ONE)
                            ? A.ZERO
                            : o.compareTo(t) >= 0
                            ? o.subtract(t)
                            : o.signum() < 0
                            ? (o.addTo(t, o), o.signum() < 0 ? o.add(t) : o)
                            : o;
                    }),
                    (A.prototype.pow = function (t) {
                        return this.exp(t, new _());
                    }),
                    (A.prototype.gcd = function (t) {
                        var e = this.s < 0 ? this.negate() : this.clone(),
                            n = t.s < 0 ? t.negate() : t.clone();
                        if (e.compareTo(n) < 0) {
                            var r = e;
                            (e = n), (n = r);
                        }
                        var i = e.getLowestSetBit(),
                            s = n.getLowestSetBit();
                        if (s < 0) return e;
                        for (
                            i < s && (s = i),
                                s > 0 && (e.rShiftTo(s, e), n.rShiftTo(s, n));
                            e.signum() > 0;

                        )
                            (i = e.getLowestSetBit()) > 0 && e.rShiftTo(i, e),
                                (i = n.getLowestSetBit()) > 0 &&
                                    n.rShiftTo(i, n),
                                e.compareTo(n) >= 0
                                    ? (e.subTo(n, e), e.rShiftTo(1, e))
                                    : (n.subTo(e, n), n.rShiftTo(1, n));
                        return s > 0 && n.lShiftTo(s, n), n;
                    }),
                    (A.prototype.isProbablePrime = function (t) {
                        var e,
                            n = this.abs();
                        if (1 == n.t && n[0] <= L[L.length - 1]) {
                            for (e = 0; e < L.length; ++e)
                                if (n[0] == L[e]) return !0;
                            return !1;
                        }
                        if (n.isEven()) return !1;
                        for (e = 1; e < L.length; ) {
                            for (
                                var r = L[e], i = e + 1;
                                i < L.length && r < k;

                            )
                                r *= L[i++];
                            for (r = n.modInt(r); e < i; )
                                if (r % L[e++] == 0) return !1;
                        }
                        return n.millerRabin(t);
                    }),
                    (A.prototype.square = function () {
                        var t = b();
                        return this.squareTo(t), t;
                    }),
                    (M.prototype.init = function (t) {
                        var e, n, r;
                        for (e = 0; e < 256; ++e) this.S[e] = e;
                        for (n = 0, e = 0; e < 256; ++e)
                            (n = (n + this.S[e] + t[e % t.length]) & 255),
                                (r = this.S[e]),
                                (this.S[e] = this.S[n]),
                                (this.S[n] = r);
                        (this.i = 0), (this.j = 0);
                    }),
                    (M.prototype.next = function () {
                        var t;
                        return (
                            (this.i = (this.i + 1) & 255),
                            (this.j = (this.j + this.S[this.i]) & 255),
                            (t = this.S[this.i]),
                            (this.S[this.i] = this.S[this.j]),
                            (this.S[this.j] = t),
                            this.S[(t + this.S[this.i]) & 255]
                        );
                    });
                var U, q, z;
                function Y() {
                    var t;
                    (t = new Date().getTime()),
                        (q[z++] ^= 255 & t),
                        (q[z++] ^= (t >> 8) & 255),
                        (q[z++] ^= (t >> 16) & 255),
                        (q[z++] ^= (t >> 24) & 255),
                        z >= 256 && (z -= 256);
                }
                if (null == q) {
                    var W;
                    if (
                        ((q = new Array()),
                        (z = 0),
                        c.crypto && c.crypto.getRandomValues)
                    ) {
                        var G = new Uint8Array(32);
                        for (c.crypto.getRandomValues(G), W = 0; W < 32; ++W)
                            q[z++] = G[W];
                    }
                    if (
                        "Netscape" == u.appName &&
                        u.appVersion < "5" &&
                        c.crypto &&
                        c.crypto.random
                    ) {
                        var X = c.crypto.random(32);
                        for (W = 0; W < X.length; ++W)
                            q[z++] = 255 & X.charCodeAt(W);
                    }
                    for (; z < 256; )
                        (W = Math.floor(65536 * Math.random())),
                            (q[z++] = W >>> 8),
                            (q[z++] = 255 & W);
                    (z = 0), Y();
                }
                function J() {
                    if (null == U) {
                        for (
                            Y(), (U = new M()).init(q), z = 0;
                            z < q.length;
                            ++z
                        )
                            q[z] = 0;
                        z = 0;
                    }
                    return U.next();
                }
                function $() {}
                function Z(t, e) {
                    return new A(t, e);
                }
                function Q(t, e, n) {
                    for (var r = "", i = 0; r.length < e; )
                        (r += n(
                            String.fromCharCode.apply(
                                String,
                                t.concat([
                                    (4278190080 & i) >> 24,
                                    (16711680 & i) >> 16,
                                    (65280 & i) >> 8,
                                    255 & i,
                                ])
                            )
                        )),
                            (i += 1);
                    return r;
                }
                function tt() {
                    (this.n = null),
                        (this.e = 0),
                        (this.d = null),
                        (this.p = null),
                        (this.q = null),
                        (this.dmp1 = null),
                        (this.dmq1 = null),
                        (this.coeff = null);
                }
                function et(t, e, n) {
                    for (var r = "", i = 0; r.length < e; )
                        (r += n(
                            t +
                                String.fromCharCode.apply(String, [
                                    (4278190080 & i) >> 24,
                                    (16711680 & i) >> 16,
                                    (65280 & i) >> 8,
                                    255 & i,
                                ])
                        )),
                            (i += 1);
                    return r;
                }
                function nt(t, e) {
                    (this.x = e), (this.q = t);
                }
                function rt(t, e, n, r) {
                    (this.curve = t),
                        (this.x = e),
                        (this.y = n),
                        (this.z = null == r ? A.ONE : r),
                        (this.zinv = null);
                }
                function it(t, e, n) {
                    (this.q = t),
                        (this.a = this.fromBigInteger(e)),
                        (this.b = this.fromBigInteger(n)),
                        (this.infinity = new rt(this, null, null));
                }
                ($.prototype.nextBytes = function (t) {
                    var e;
                    for (e = 0; e < t.length; ++e) t[e] = J();
                }),
                    (tt.prototype.doPublic = function (t) {
                        return t.modPowInt(this.e, this.n);
                    }),
                    (tt.prototype.setPublic = function (t, e) {
                        if (
                            ((this.isPublic = !0),
                            (this.isPrivate = !1),
                            "string" != typeof t)
                        )
                            (this.n = t), (this.e = e);
                        else {
                            if (
                                !(
                                    null != t &&
                                    null != e &&
                                    t.length > 0 &&
                                    e.length > 0
                                )
                            )
                                throw "Invalid RSA public key";
                            (this.n = Z(t, 16)), (this.e = parseInt(e, 16));
                        }
                    }),
                    (tt.prototype.encrypt = function (t) {
                        var e = (function (t, e) {
                            if (e < t.length + 11) return null;
                            for (
                                var n = new Array(), r = t.length - 1;
                                r >= 0 && e > 0;

                            ) {
                                var i = t.charCodeAt(r--);
                                i < 128
                                    ? (n[--e] = i)
                                    : i > 127 && i < 2048
                                    ? ((n[--e] = (63 & i) | 128),
                                      (n[--e] = (i >> 6) | 192))
                                    : ((n[--e] = (63 & i) | 128),
                                      (n[--e] = ((i >> 6) & 63) | 128),
                                      (n[--e] = (i >> 12) | 224));
                            }
                            n[--e] = 0;
                            for (var s = new $(), a = new Array(); e > 2; ) {
                                for (a[0] = 0; 0 == a[0]; ) s.nextBytes(a);
                                n[--e] = a[0];
                            }
                            return (n[--e] = 2), (n[--e] = 0), new A(n);
                        })(t, (this.n.bitLength() + 7) >> 3);
                        if (null == e) return null;
                        var n = this.doPublic(e);
                        if (null == n) return null;
                        var r = n.toString(16);
                        return 0 == (1 & r.length) ? r : "0" + r;
                    }),
                    (tt.prototype.encryptOAEP = function (t, e, n) {
                        var r = (function (t, e, n, r) {
                            var i = l.crypto.MessageDigest,
                                s = l.crypto.Util,
                                a = null;
                            if (
                                (n || (n = "sha1"),
                                "string" == typeof n &&
                                    ((a = i.getCanonicalAlgName(n)),
                                    (r = i.getHashLength(a)),
                                    (n = function (t) {
                                        return mt(s.hashString(t, a));
                                    })),
                                t.length + 2 * r + 2 > e)
                            )
                                throw "Message too long for RSA";
                            var o,
                                h = "";
                            for (o = 0; o < e - t.length - 2 * r - 2; o += 1)
                                h += "\0";
                            var u = n("") + h + "" + t,
                                c = new Array(r);
                            new $().nextBytes(c);
                            var f = Q(c, u.length, n),
                                d = [];
                            for (o = 0; o < u.length; o += 1)
                                d[o] = u.charCodeAt(o) ^ f.charCodeAt(o);
                            var g = Q(d, c.length, n),
                                p = [0];
                            for (o = 0; o < c.length; o += 1)
                                p[o + 1] = c[o] ^ g.charCodeAt(o);
                            return new A(p.concat(d));
                        })(t, (this.n.bitLength() + 7) >> 3, e, n);
                        if (null == r) return null;
                        var i = this.doPublic(r);
                        if (null == i) return null;
                        var s = i.toString(16);
                        return 0 == (1 & s.length) ? s : "0" + s;
                    }),
                    (tt.prototype.type = "RSA"),
                    (tt.prototype.doPrivate = function (t) {
                        if (null == this.p || null == this.q)
                            return t.modPow(this.d, this.n);
                        for (
                            var e = t.mod(this.p).modPow(this.dmp1, this.p),
                                n = t.mod(this.q).modPow(this.dmq1, this.q);
                            e.compareTo(n) < 0;

                        )
                            e = e.add(this.p);
                        return e
                            .subtract(n)
                            .multiply(this.coeff)
                            .mod(this.p)
                            .multiply(this.q)
                            .add(n);
                    }),
                    (tt.prototype.setPrivate = function (t, e, n) {
                        (this.isPrivate = !0),
                            "string" != typeof t
                                ? ((this.n = t), (this.e = e), (this.d = n))
                                : null != t &&
                                  null != e &&
                                  t.length > 0 &&
                                  e.length > 0
                                ? ((this.n = Z(t, 16)),
                                  (this.e = parseInt(e, 16)),
                                  (this.d = Z(n, 16)))
                                : alert("Invalid RSA private key");
                    }),
                    (tt.prototype.setPrivateEx = function (
                        t,
                        e,
                        n,
                        r,
                        i,
                        s,
                        a,
                        o
                    ) {
                        if (
                            ((this.isPrivate = !0),
                            (this.isPublic = !1),
                            null == t)
                        )
                            throw "RSASetPrivateEx N == null";
                        if (null == e) throw "RSASetPrivateEx E == null";
                        if (0 == t.length)
                            throw "RSASetPrivateEx N.length == 0";
                        if (0 == e.length)
                            throw "RSASetPrivateEx E.length == 0";
                        null != t && null != e && t.length > 0 && e.length > 0
                            ? ((this.n = Z(t, 16)),
                              (this.e = parseInt(e, 16)),
                              (this.d = Z(n, 16)),
                              (this.p = Z(r, 16)),
                              (this.q = Z(i, 16)),
                              (this.dmp1 = Z(s, 16)),
                              (this.dmq1 = Z(a, 16)),
                              (this.coeff = Z(o, 16)))
                            : alert(
                                  "Invalid RSA private key in RSASetPrivateEx"
                              );
                    }),
                    (tt.prototype.generate = function (t, e) {
                        var n = new $(),
                            r = t >> 1;
                        this.e = parseInt(e, 16);
                        for (var i = new A(e, 16); ; ) {
                            for (
                                ;
                                (this.p = new A(t - r, 1, n)),
                                    0 !=
                                        this.p
                                            .subtract(A.ONE)
                                            .gcd(i)
                                            .compareTo(A.ONE) ||
                                        !this.p.isProbablePrime(10);

                            );
                            for (
                                ;
                                (this.q = new A(r, 1, n)),
                                    0 !=
                                        this.q
                                            .subtract(A.ONE)
                                            .gcd(i)
                                            .compareTo(A.ONE) ||
                                        !this.q.isProbablePrime(10);

                            );
                            if (this.p.compareTo(this.q) <= 0) {
                                var s = this.p;
                                (this.p = this.q), (this.q = s);
                            }
                            var a = this.p.subtract(A.ONE),
                                o = this.q.subtract(A.ONE),
                                h = a.multiply(o);
                            if (0 == h.gcd(i).compareTo(A.ONE)) {
                                (this.n = this.p.multiply(this.q)),
                                    (this.d = i.modInverse(h)),
                                    (this.dmp1 = this.d.mod(a)),
                                    (this.dmq1 = this.d.mod(o)),
                                    (this.coeff = this.q.modInverse(this.p));
                                break;
                            }
                        }
                        this.isPrivate = !0;
                    }),
                    (tt.prototype.decrypt = function (t) {
                        var e = Z(t, 16),
                            n = this.doPrivate(e);
                        return null == n
                            ? null
                            : (function (t, e) {
                                  for (
                                      var n = t.toByteArray(), r = 0;
                                      r < n.length && 0 == n[r];

                                  )
                                      ++r;
                                  if (n.length - r != e - 1 || 2 != n[r])
                                      return null;
                                  for (++r; 0 != n[r]; )
                                      if (++r >= n.length) return null;
                                  for (var i = ""; ++r < n.length; ) {
                                      var s = 255 & n[r];
                                      s < 128
                                          ? (i += String.fromCharCode(s))
                                          : s > 191 && s < 224
                                          ? ((i += String.fromCharCode(
                                                ((31 & s) << 6) |
                                                    (63 & n[r + 1])
                                            )),
                                            ++r)
                                          : ((i += String.fromCharCode(
                                                ((15 & s) << 12) |
                                                    ((63 & n[r + 1]) << 6) |
                                                    (63 & n[r + 2])
                                            )),
                                            (r += 2));
                                  }
                                  return i;
                              })(n, (this.n.bitLength() + 7) >> 3);
                    }),
                    (tt.prototype.decryptOAEP = function (t, e, n) {
                        var r = Z(t, 16),
                            i = this.doPrivate(r);
                        return null == i
                            ? null
                            : (function (t, e, n, r) {
                                  var i = l.crypto.MessageDigest,
                                      s = l.crypto.Util,
                                      a = null;
                                  for (
                                      n || (n = "sha1"),
                                          "string" == typeof n &&
                                              ((a = i.getCanonicalAlgName(n)),
                                              (r = i.getHashLength(a)),
                                              (n = function (t) {
                                                  return mt(s.hashString(t, a));
                                              })),
                                          t = t.toByteArray(),
                                          o = 0;
                                      o < t.length;
                                      o += 1
                                  )
                                      t[o] &= 255;
                                  for (; t.length < e; ) t.unshift(0);
                                  if (
                                      (t = String.fromCharCode.apply(String, t))
                                          .length <
                                      2 * r + 2
                                  )
                                      throw "Cipher too short";
                                  var o,
                                      h = t.substr(1, r),
                                      u = t.substr(r + 1),
                                      c = et(u, r, n),
                                      f = [];
                                  for (o = 0; o < h.length; o += 1)
                                      f[o] = h.charCodeAt(o) ^ c.charCodeAt(o);
                                  var d = et(
                                          String.fromCharCode.apply(String, f),
                                          t.length - r,
                                          n
                                      ),
                                      g = [];
                                  for (o = 0; o < u.length; o += 1)
                                      g[o] = u.charCodeAt(o) ^ d.charCodeAt(o);
                                  if (
                                      (g = String.fromCharCode.apply(
                                          String,
                                          g
                                      )).substr(0, r) !== n("")
                                  )
                                      throw "Hash mismatch";
                                  var p = (g = g.substr(r)).indexOf("");
                                  if (
                                      (-1 != p
                                          ? g.substr(0, p).lastIndexOf("\0")
                                          : -1) +
                                          1 !=
                                      p
                                  )
                                      throw "Malformed data";
                                  return g.substr(p + 1);
                              })(i, (this.n.bitLength() + 7) >> 3, e, n);
                    }),
                    (nt.prototype.equals = function (t) {
                        return (
                            t == this ||
                            (this.q.equals(t.q) && this.x.equals(t.x))
                        );
                    }),
                    (nt.prototype.toBigInteger = function () {
                        return this.x;
                    }),
                    (nt.prototype.negate = function () {
                        return new nt(this.q, this.x.negate().mod(this.q));
                    }),
                    (nt.prototype.add = function (t) {
                        return new nt(
                            this.q,
                            this.x.add(t.toBigInteger()).mod(this.q)
                        );
                    }),
                    (nt.prototype.subtract = function (t) {
                        return new nt(
                            this.q,
                            this.x.subtract(t.toBigInteger()).mod(this.q)
                        );
                    }),
                    (nt.prototype.multiply = function (t) {
                        return new nt(
                            this.q,
                            this.x.multiply(t.toBigInteger()).mod(this.q)
                        );
                    }),
                    (nt.prototype.square = function () {
                        return new nt(this.q, this.x.square().mod(this.q));
                    }),
                    (nt.prototype.divide = function (t) {
                        return new nt(
                            this.q,
                            this.x
                                .multiply(t.toBigInteger().modInverse(this.q))
                                .mod(this.q)
                        );
                    }),
                    (rt.prototype.getX = function () {
                        return (
                            null == this.zinv &&
                                (this.zinv = this.z.modInverse(this.curve.q)),
                            this.curve.fromBigInteger(
                                this.x
                                    .toBigInteger()
                                    .multiply(this.zinv)
                                    .mod(this.curve.q)
                            )
                        );
                    }),
                    (rt.prototype.getY = function () {
                        return (
                            null == this.zinv &&
                                (this.zinv = this.z.modInverse(this.curve.q)),
                            this.curve.fromBigInteger(
                                this.y
                                    .toBigInteger()
                                    .multiply(this.zinv)
                                    .mod(this.curve.q)
                            )
                        );
                    }),
                    (rt.prototype.equals = function (t) {
                        return (
                            t == this ||
                            (this.isInfinity()
                                ? t.isInfinity()
                                : t.isInfinity()
                                ? this.isInfinity()
                                : !!t.y
                                      .toBigInteger()
                                      .multiply(this.z)
                                      .subtract(
                                          this.y.toBigInteger().multiply(t.z)
                                      )
                                      .mod(this.curve.q)
                                      .equals(A.ZERO) &&
                                  t.x
                                      .toBigInteger()
                                      .multiply(this.z)
                                      .subtract(
                                          this.x.toBigInteger().multiply(t.z)
                                      )
                                      .mod(this.curve.q)
                                      .equals(A.ZERO))
                        );
                    }),
                    (rt.prototype.isInfinity = function () {
                        return (
                            (null == this.x && null == this.y) ||
                            (this.z.equals(A.ZERO) &&
                                !this.y.toBigInteger().equals(A.ZERO))
                        );
                    }),
                    (rt.prototype.negate = function () {
                        return new rt(
                            this.curve,
                            this.x,
                            this.y.negate(),
                            this.z
                        );
                    }),
                    (rt.prototype.add = function (t) {
                        if (this.isInfinity()) return t;
                        if (t.isInfinity()) return this;
                        var e = t.y
                                .toBigInteger()
                                .multiply(this.z)
                                .subtract(this.y.toBigInteger().multiply(t.z))
                                .mod(this.curve.q),
                            n = t.x
                                .toBigInteger()
                                .multiply(this.z)
                                .subtract(this.x.toBigInteger().multiply(t.z))
                                .mod(this.curve.q);
                        if (A.ZERO.equals(n))
                            return A.ZERO.equals(e)
                                ? this.twice()
                                : this.curve.getInfinity();
                        var r = new A("3"),
                            i = this.x.toBigInteger(),
                            s = this.y.toBigInteger(),
                            a =
                                (t.x.toBigInteger(),
                                t.y.toBigInteger(),
                                n.square()),
                            o = a.multiply(n),
                            h = i.multiply(a),
                            u = e.square().multiply(this.z),
                            c = u
                                .subtract(h.shiftLeft(1))
                                .multiply(t.z)
                                .subtract(o)
                                .multiply(n)
                                .mod(this.curve.q),
                            l = h
                                .multiply(r)
                                .multiply(e)
                                .subtract(s.multiply(o))
                                .subtract(u.multiply(e))
                                .multiply(t.z)
                                .add(e.multiply(o))
                                .mod(this.curve.q),
                            f = o
                                .multiply(this.z)
                                .multiply(t.z)
                                .mod(this.curve.q);
                        return new rt(
                            this.curve,
                            this.curve.fromBigInteger(c),
                            this.curve.fromBigInteger(l),
                            f
                        );
                    }),
                    (rt.prototype.twice = function () {
                        if (this.isInfinity()) return this;
                        if (0 == this.y.toBigInteger().signum())
                            return this.curve.getInfinity();
                        var t = new A("3"),
                            e = this.x.toBigInteger(),
                            n = this.y.toBigInteger(),
                            r = n.multiply(this.z),
                            i = r.multiply(n).mod(this.curve.q),
                            s = this.curve.a.toBigInteger(),
                            a = e.square().multiply(t);
                        A.ZERO.equals(s) ||
                            (a = a.add(this.z.square().multiply(s)));
                        var o = (a = a.mod(this.curve.q))
                                .square()
                                .subtract(e.shiftLeft(3).multiply(i))
                                .shiftLeft(1)
                                .multiply(r)
                                .mod(this.curve.q),
                            h = a
                                .multiply(t)
                                .multiply(e)
                                .subtract(i.shiftLeft(1))
                                .shiftLeft(2)
                                .multiply(i)
                                .subtract(a.square().multiply(a))
                                .mod(this.curve.q),
                            u = r
                                .square()
                                .multiply(r)
                                .shiftLeft(3)
                                .mod(this.curve.q);
                        return new rt(
                            this.curve,
                            this.curve.fromBigInteger(o),
                            this.curve.fromBigInteger(h),
                            u
                        );
                    }),
                    (rt.prototype.multiply = function (t) {
                        if (this.isInfinity()) return this;
                        if (0 == t.signum()) return this.curve.getInfinity();
                        var e,
                            n = t,
                            r = n.multiply(new A("3")),
                            i = this.negate(),
                            s = this;
                        for (e = r.bitLength() - 2; e > 0; --e) {
                            s = s.twice();
                            var a = r.testBit(e);
                            a != n.testBit(e) && (s = s.add(a ? this : i));
                        }
                        return s;
                    }),
                    (rt.prototype.multiplyTwo = function (t, e, n) {
                        var r;
                        r =
                            t.bitLength() > n.bitLength()
                                ? t.bitLength() - 1
                                : n.bitLength() - 1;
                        for (
                            var i = this.curve.getInfinity(), s = this.add(e);
                            r >= 0;

                        )
                            (i = i.twice()),
                                t.testBit(r)
                                    ? (i = n.testBit(r)
                                          ? i.add(s)
                                          : i.add(this))
                                    : n.testBit(r) && (i = i.add(e)),
                                --r;
                        return i;
                    }),
                    (it.prototype.getQ = function () {
                        return this.q;
                    }),
                    (it.prototype.getA = function () {
                        return this.a;
                    }),
                    (it.prototype.getB = function () {
                        return this.b;
                    }),
                    (it.prototype.equals = function (t) {
                        return (
                            t == this ||
                            (this.q.equals(t.q) &&
                                this.a.equals(t.a) &&
                                this.b.equals(t.b))
                        );
                    }),
                    (it.prototype.getInfinity = function () {
                        return this.infinity;
                    }),
                    (it.prototype.fromBigInteger = function (t) {
                        return new nt(this.q, t);
                    }),
                    (it.prototype.decodePointHex = function (t) {
                        switch (parseInt(t.substr(0, 2), 16)) {
                            case 0:
                                return this.infinity;
                            case 2:
                            case 3:
                                return null;
                            case 4:
                            case 6:
                            case 7:
                                var e = (t.length - 2) / 2,
                                    n = t.substr(2, e),
                                    r = t.substr(e + 2, e);
                                return new rt(
                                    this,
                                    this.fromBigInteger(new A(n, 16)),
                                    this.fromBigInteger(new A(r, 16))
                                );
                            default:
                                return null;
                        }
                    }),
                    (nt.prototype.getByteLength = function () {
                        return Math.floor(
                            (this.toBigInteger().bitLength() + 7) / 8
                        );
                    }),
                    (rt.prototype.getEncoded = function (t) {
                        var e = function (t, e) {
                                var n = t.toByteArrayUnsigned();
                                if (e < n.length) n = n.slice(n.length - e);
                                else for (; e > n.length; ) n.unshift(0);
                                return n;
                            },
                            n = this.getX().toBigInteger(),
                            r = this.getY().toBigInteger(),
                            i = e(n, 32);
                        return (
                            t
                                ? r.isEven()
                                    ? i.unshift(2)
                                    : i.unshift(3)
                                : (i.unshift(4), (i = i.concat(e(r, 32)))),
                            i
                        );
                    }),
                    (rt.decodeFrom = function (t, e) {
                        e[0];
                        var n = e.length - 1,
                            r = e.slice(1, 1 + n / 2),
                            i = e.slice(1 + n / 2, 1 + n);
                        r.unshift(0), i.unshift(0);
                        var s = new A(r),
                            a = new A(i);
                        return new rt(
                            t,
                            t.fromBigInteger(s),
                            t.fromBigInteger(a)
                        );
                    }),
                    (rt.decodeFromHex = function (t, e) {
                        e.substr(0, 2);
                        var n = e.length - 2,
                            r = e.substr(2, n / 2),
                            i = e.substr(2 + n / 2, n / 2),
                            s = new A(r, 16),
                            a = new A(i, 16);
                        return new rt(
                            t,
                            t.fromBigInteger(s),
                            t.fromBigInteger(a)
                        );
                    }),
                    (rt.prototype.add2D = function (t) {
                        if (this.isInfinity()) return t;
                        if (t.isInfinity()) return this;
                        if (this.x.equals(t.x))
                            return this.y.equals(t.y)
                                ? this.twice()
                                : this.curve.getInfinity();
                        var e = t.x.subtract(this.x),
                            n = t.y.subtract(this.y).divide(e),
                            r = n.square().subtract(this.x).subtract(t.x),
                            i = n.multiply(this.x.subtract(r)).subtract(this.y);
                        return new rt(this.curve, r, i);
                    }),
                    (rt.prototype.twice2D = function () {
                        if (this.isInfinity()) return this;
                        if (0 == this.y.toBigInteger().signum())
                            return this.curve.getInfinity();
                        var t = this.curve.fromBigInteger(A.valueOf(2)),
                            e = this.curve.fromBigInteger(A.valueOf(3)),
                            n = this.x
                                .square()
                                .multiply(e)
                                .add(this.curve.a)
                                .divide(this.y.multiply(t)),
                            r = n.square().subtract(this.x.multiply(t)),
                            i = n.multiply(this.x.subtract(r)).subtract(this.y);
                        return new rt(this.curve, r, i);
                    }),
                    (rt.prototype.multiply2D = function (t) {
                        if (this.isInfinity()) return this;
                        if (0 == t.signum()) return this.curve.getInfinity();
                        var e,
                            n = t,
                            r = n.multiply(new A("3")),
                            i = this.negate(),
                            s = this;
                        for (e = r.bitLength() - 2; e > 0; --e) {
                            s = s.twice();
                            var a = r.testBit(e);
                            a != n.testBit(e) && (s = s.add2D(a ? this : i));
                        }
                        return s;
                    }),
                    (rt.prototype.isOnCurve = function () {
                        var t = this.getX().toBigInteger(),
                            e = this.getY().toBigInteger(),
                            n = this.curve.getA().toBigInteger(),
                            r = this.curve.getB().toBigInteger(),
                            i = this.curve.getQ(),
                            s = e.multiply(e).mod(i),
                            a = t
                                .multiply(t)
                                .multiply(t)
                                .add(n.multiply(t))
                                .add(r)
                                .mod(i);
                        return s.equals(a);
                    }),
                    (rt.prototype.toString = function () {
                        return (
                            "(" +
                            this.getX().toBigInteger().toString() +
                            "," +
                            this.getY().toBigInteger().toString() +
                            ")"
                        );
                    }),
                    (rt.prototype.validate = function () {
                        var t = this.curve.getQ();
                        if (this.isInfinity())
                            throw new Error("Point is at infinity.");
                        var e = this.getX().toBigInteger(),
                            n = this.getY().toBigInteger();
                        if (
                            e.compareTo(A.ONE) < 0 ||
                            e.compareTo(t.subtract(A.ONE)) > 0
                        )
                            throw new Error("x coordinate out of bounds");
                        if (
                            n.compareTo(A.ONE) < 0 ||
                            n.compareTo(t.subtract(A.ONE)) > 0
                        )
                            throw new Error("y coordinate out of bounds");
                        if (!this.isOnCurve())
                            throw new Error("Point is not on the curve.");
                        if (this.multiply(t).isInfinity())
                            throw new Error(
                                "Point is not a scalar multiple of G."
                            );
                        return !0;
                    });
                var st = (function () {
                    var t = new RegExp(
                            '(?:false|true|null|[\\{\\}\\[\\]]|(?:-?\\b(?:0|[1-9][0-9]*)(?:\\.[0-9]+)?(?:[eE][+-]?[0-9]+)?\\b)|(?:"(?:[^\\0-\\x08\\x0a-\\x1f"\\\\]|\\\\(?:["/\\\\bfnrt]|u[0-9A-Fa-f]{4}))*"))',
                            "g"
                        ),
                        e = new RegExp("\\\\(?:([^u])|u(.{4}))", "g"),
                        n = {
                            '"': '"',
                            "/": "/",
                            "\\": "\\",
                            b: "\b",
                            f: "\f",
                            n: "\n",
                            r: "\r",
                            t: "\t",
                        };
                    function r(t, e, r) {
                        return e ? n[e] : String.fromCharCode(parseInt(r, 16));
                    }
                    var i = new String(""),
                        s = Object.hasOwnProperty;
                    return function (n, a) {
                        var o,
                            h,
                            u = n.match(t),
                            c = u[0],
                            l = !1;
                        "{" === c
                            ? (o = {})
                            : "[" === c
                            ? (o = [])
                            : ((o = []), (l = !0));
                        for (var f = [o], d = 1 - l, g = u.length; d < g; ++d) {
                            var p;
                            switch ((c = u[d]).charCodeAt(0)) {
                                default:
                                    ((p = f[0])[h || p.length] = +c),
                                        (h = void 0);
                                    break;
                                case 34:
                                    if (
                                        (-1 !==
                                            (c = c.substring(
                                                1,
                                                c.length - 1
                                            )).indexOf("\\") &&
                                            (c = c.replace(e, r)),
                                        (p = f[0]),
                                        !h)
                                    ) {
                                        if (!(p instanceof Array)) {
                                            h = c || i;
                                            break;
                                        }
                                        h = p.length;
                                    }
                                    (p[h] = c), (h = void 0);
                                    break;
                                case 91:
                                    (p = f[0]),
                                        f.unshift((p[h || p.length] = [])),
                                        (h = void 0);
                                    break;
                                case 93:
                                    f.shift();
                                    break;
                                case 102:
                                    ((p = f[0])[h || p.length] = !1),
                                        (h = void 0);
                                    break;
                                case 110:
                                    ((p = f[0])[h || p.length] = null),
                                        (h = void 0);
                                    break;
                                case 116:
                                    ((p = f[0])[h || p.length] = !0),
                                        (h = void 0);
                                    break;
                                case 123:
                                    (p = f[0]),
                                        f.unshift((p[h || p.length] = {})),
                                        (h = void 0);
                                    break;
                                case 125:
                                    f.shift();
                            }
                        }
                        if (l) {
                            if (1 !== f.length) throw new Error();
                            o = o[0];
                        } else if (f.length) throw new Error();
                        if (a) {
                            var y = function (t, e) {
                                var n = t[e];
                                if (n && "object" == typeof n) {
                                    var r = null;
                                    for (var i in n)
                                        if (s.call(n, i) && n !== t) {
                                            var o = y(n, i);
                                            void 0 !== o
                                                ? (n[i] = o)
                                                : (r || (r = []), r.push(i));
                                        }
                                    if (r)
                                        for (var h = r.length; --h >= 0; )
                                            delete n[r[h]];
                                }
                                return a.call(t, e, n);
                            };
                            o = y({ "": o }, "");
                        }
                        return o;
                    };
                })();
                (void 0 !== l && l) || (l = {}),
                    (void 0 !== l.asn1 && l.asn1) || (l.asn1 = {}),
                    (l.asn1.ASN1Util = new (function () {
                        (this.integerToByteHex = function (t) {
                            var e = t.toString(16);
                            return e.length % 2 == 1 && (e = "0" + e), e;
                        }),
                            (this.bigIntToMinTwosComplementsHex = function (t) {
                                var e = t.toString(16);
                                if ("-" != e.substr(0, 1))
                                    e.length % 2 == 1
                                        ? (e = "0" + e)
                                        : e.match(/^[0-7]/) || (e = "00" + e);
                                else {
                                    var n = e.substr(1).length;
                                    n % 2 == 1
                                        ? (n += 1)
                                        : e.match(/^[0-7]/) || (n += 2);
                                    for (var r = "", i = 0; i < n; i++)
                                        r += "f";
                                    e = new A(r, 16)
                                        .xor(t)
                                        .add(A.ONE)
                                        .toString(16)
                                        .replace(/^-/, "");
                                }
                                return e;
                            }),
                            (this.getPEMStringFromHex = function (t, e) {
                                var n = (function (t) {
                                    return v(t);
                                })(t).replace(/(.{64})/g, "$1\r\n");
                                return (
                                    "-----BEGIN " +
                                    e +
                                    "-----\r\n" +
                                    (n = n.replace(/\r\n$/, "")) +
                                    "\r\n-----END " +
                                    e +
                                    "-----\r\n"
                                );
                            }),
                            (this.newObject = function (t) {
                                var e = l.asn1,
                                    n = Object.keys(t);
                                if (1 != n.length)
                                    throw "key of param shall be only one.";
                                var r = n[0];
                                if (
                                    -1 ==
                                    ":bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:seq:set:tag:".indexOf(
                                        ":" + r + ":"
                                    )
                                )
                                    throw "undefined key: " + r;
                                if ("bool" == r) return new e.DERBoolean(t[r]);
                                if ("int" == r) return new e.DERInteger(t[r]);
                                if ("bitstr" == r)
                                    return new e.DERBitString(t[r]);
                                if ("octstr" == r)
                                    return new e.DEROctetString(t[r]);
                                if ("null" == r) return new e.DERNull(t[r]);
                                if ("oid" == r)
                                    return new e.DERObjectIdentifier(t[r]);
                                if ("enum" == r)
                                    return new e.DEREnumerated(t[r]);
                                if ("utf8str" == r)
                                    return new e.DERUTF8String(t[r]);
                                if ("numstr" == r)
                                    return new e.DERNumericString(t[r]);
                                if ("prnstr" == r)
                                    return new e.DERPrintableString(t[r]);
                                if ("telstr" == r)
                                    return new e.DERTeletexString(t[r]);
                                if ("ia5str" == r)
                                    return new e.DERIA5String(t[r]);
                                if ("utctime" == r)
                                    return new e.DERUTCTime(t[r]);
                                if ("gentime" == r)
                                    return new e.DERGeneralizedTime(t[r]);
                                if ("seq" == r) {
                                    for (
                                        var i = t[r], s = [], a = 0;
                                        a < i.length;
                                        a++
                                    ) {
                                        var o = e.ASN1Util.newObject(i[a]);
                                        s.push(o);
                                    }
                                    return new e.DERSequence({ array: s });
                                }
                                if ("set" == r) {
                                    for (
                                        i = t[r], s = [], a = 0;
                                        a < i.length;
                                        a++
                                    )
                                        (o = e.ASN1Util.newObject(i[a])),
                                            s.push(o);
                                    return new e.DERSet({ array: s });
                                }
                                if ("tag" == r) {
                                    var h = t[r];
                                    if (
                                        "[object Array]" ===
                                            Object.prototype.toString.call(h) &&
                                        3 == h.length
                                    ) {
                                        var u = e.ASN1Util.newObject(h[2]);
                                        return new e.DERTaggedObject({
                                            tag: h[0],
                                            explicit: h[1],
                                            obj: u,
                                        });
                                    }
                                    var c = {};
                                    if (
                                        (void 0 !== h.explicit &&
                                            (c.explicit = h.explicit),
                                        void 0 !== h.tag && (c.tag = h.tag),
                                        void 0 === h.obj)
                                    )
                                        throw "obj shall be specified for 'tag'.";
                                    return (
                                        (c.obj = e.ASN1Util.newObject(h.obj)),
                                        new e.DERTaggedObject(c)
                                    );
                                }
                            }),
                            (this.jsonToASN1HEX = function (t) {
                                return this.newObject(t).getEncodedHex();
                            });
                    })()),
                    (l.asn1.ASN1Util.oidHexToInt = function (t) {
                        for (
                            var e = "",
                                n = parseInt(t.substr(0, 2), 16),
                                r =
                                    ((e = Math.floor(n / 40) + "." + (n % 40)),
                                    ""),
                                i = 2;
                            i < t.length;
                            i += 2
                        ) {
                            var s = (
                                "00000000" +
                                parseInt(t.substr(i, 2), 16).toString(2)
                            ).slice(-8);
                            (r += s.substr(1, 7)),
                                "0" == s.substr(0, 1) &&
                                    ((e = e + "." + new A(r, 2).toString(10)),
                                    (r = ""));
                        }
                        return e;
                    }),
                    (l.asn1.ASN1Util.oidIntToHex = function (t) {
                        var e = function (t) {
                                var e = t.toString(16);
                                return 1 == e.length && (e = "0" + e), e;
                            },
                            n = function (t) {
                                var n = "",
                                    r = new A(t, 10).toString(2),
                                    i = 7 - (r.length % 7);
                                7 == i && (i = 0);
                                for (var s = "", a = 0; a < i; a++) s += "0";
                                for (
                                    r = s + r, a = 0;
                                    a < r.length - 1;
                                    a += 7
                                ) {
                                    var o = r.substr(a, 7);
                                    a != r.length - 7 && (o = "1" + o),
                                        (n += e(parseInt(o, 2)));
                                }
                                return n;
                            };
                        if (!t.match(/^[0-9.]+$/))
                            throw "malformed oid string: " + t;
                        var r = "",
                            i = t.split("."),
                            s = 40 * parseInt(i[0]) + parseInt(i[1]);
                        (r += e(s)), i.splice(0, 2);
                        for (var a = 0; a < i.length; a++) r += n(i[a]);
                        return r;
                    }),
                    (l.asn1.ASN1Object = function () {
                        (this.getLengthHexFromValue = function () {
                            if (void 0 === this.hV || null == this.hV)
                                throw "this.hV is null or undefined.";
                            if (this.hV.length % 2 == 1)
                                throw (
                                    "value hex must be even length: n=" +
                                    "".length +
                                    ",v=" +
                                    this.hV
                                );
                            var t = this.hV.length / 2,
                                e = t.toString(16);
                            if ((e.length % 2 == 1 && (e = "0" + e), t < 128))
                                return e;
                            var n = e.length / 2;
                            if (n > 15)
                                throw (
                                    "ASN.1 length too long to represent by 8x: n = " +
                                    t.toString(16)
                                );
                            return (128 + n).toString(16) + e;
                        }),
                            (this.getEncodedHex = function () {
                                return (
                                    (null == this.hTLV || this.isModified) &&
                                        ((this.hV = this.getFreshValueHex()),
                                        (this.hL =
                                            this.getLengthHexFromValue()),
                                        (this.hTLV =
                                            this.hT + this.hL + this.hV),
                                        (this.isModified = !1)),
                                    this.hTLV
                                );
                            }),
                            (this.getValueHex = function () {
                                return this.getEncodedHex(), this.hV;
                            }),
                            (this.getFreshValueHex = function () {
                                return "";
                            });
                    }),
                    (l.asn1.DERAbstractString = function (t) {
                        l.asn1.DERAbstractString.superclass.constructor.call(
                            this
                        ),
                            (this.getString = function () {
                                return this.s;
                            }),
                            (this.setString = function (t) {
                                (this.hTLV = null),
                                    (this.isModified = !0),
                                    (this.s = t),
                                    (this.hV = ct(this.s));
                            }),
                            (this.setStringHex = function (t) {
                                (this.hTLV = null),
                                    (this.isModified = !0),
                                    (this.s = null),
                                    (this.hV = t);
                            }),
                            (this.getFreshValueHex = function () {
                                return this.hV;
                            }),
                            void 0 !== t &&
                                ("string" == typeof t
                                    ? this.setString(t)
                                    : void 0 !== t.str
                                    ? this.setString(t.str)
                                    : void 0 !== t.hex &&
                                      this.setStringHex(t.hex));
                    }),
                    f.lang.extend(l.asn1.DERAbstractString, l.asn1.ASN1Object),
                    (l.asn1.DERAbstractTime = function (t) {
                        l.asn1.DERAbstractTime.superclass.constructor.call(
                            this
                        ),
                            (this.localDateToUTC = function (t) {
                                return (
                                    (utc =
                                        t.getTime() +
                                        6e4 * t.getTimezoneOffset()),
                                    new Date(utc)
                                );
                            }),
                            (this.formatDate = function (t, e, n) {
                                var r = this.zeroPadding,
                                    i = this.localDateToUTC(t),
                                    s = String(i.getFullYear());
                                "utc" == e && (s = s.substr(2, 2));
                                var a =
                                    s +
                                    r(String(i.getMonth() + 1), 2) +
                                    r(String(i.getDate()), 2) +
                                    r(String(i.getHours()), 2) +
                                    r(String(i.getMinutes()), 2) +
                                    r(String(i.getSeconds()), 2);
                                if (!0 === n) {
                                    var o = i.getMilliseconds();
                                    if (0 != o) {
                                        var h = r(String(o), 3);
                                        a =
                                            a +
                                            "." +
                                            (h = h.replace(/[0]+$/, ""));
                                    }
                                }
                                return a + "Z";
                            }),
                            (this.zeroPadding = function (t, e) {
                                return t.length >= e
                                    ? t
                                    : new Array(e - t.length + 1).join("0") + t;
                            }),
                            (this.getString = function () {
                                return this.s;
                            }),
                            (this.setString = function (t) {
                                (this.hTLV = null),
                                    (this.isModified = !0),
                                    (this.s = t),
                                    (this.hV = ct(t));
                            }),
                            (this.setByDateValue = function (t, e, n, r, i, s) {
                                var a = new Date(
                                    Date.UTC(t, e - 1, n, r, i, s, 0)
                                );
                                this.setByDate(a);
                            }),
                            (this.getFreshValueHex = function () {
                                return this.hV;
                            });
                    }),
                    f.lang.extend(l.asn1.DERAbstractTime, l.asn1.ASN1Object),
                    (l.asn1.DERAbstractStructured = function (t) {
                        l.asn1.DERAbstractString.superclass.constructor.call(
                            this
                        ),
                            (this.setByASN1ObjectArray = function (t) {
                                (this.hTLV = null),
                                    (this.isModified = !0),
                                    (this.asn1Array = t);
                            }),
                            (this.appendASN1Object = function (t) {
                                (this.hTLV = null),
                                    (this.isModified = !0),
                                    this.asn1Array.push(t);
                            }),
                            (this.asn1Array = new Array()),
                            void 0 !== t &&
                                void 0 !== t.array &&
                                (this.asn1Array = t.array);
                    }),
                    f.lang.extend(
                        l.asn1.DERAbstractStructured,
                        l.asn1.ASN1Object
                    ),
                    (l.asn1.DERBoolean = function () {
                        l.asn1.DERBoolean.superclass.constructor.call(this),
                            (this.hT = "01"),
                            (this.hTLV = "0101ff");
                    }),
                    f.lang.extend(l.asn1.DERBoolean, l.asn1.ASN1Object),
                    (l.asn1.DERInteger = function (t) {
                        l.asn1.DERInteger.superclass.constructor.call(this),
                            (this.hT = "02"),
                            (this.setByBigInteger = function (t) {
                                (this.hTLV = null),
                                    (this.isModified = !0),
                                    (this.hV =
                                        l.asn1.ASN1Util.bigIntToMinTwosComplementsHex(
                                            t
                                        ));
                            }),
                            (this.setByInteger = function (t) {
                                var e = new A(String(t), 10);
                                this.setByBigInteger(e);
                            }),
                            (this.setValueHex = function (t) {
                                this.hV = t;
                            }),
                            (this.getFreshValueHex = function () {
                                return this.hV;
                            }),
                            void 0 !== t &&
                                (void 0 !== t.bigint
                                    ? this.setByBigInteger(t.bigint)
                                    : void 0 !== t.int
                                    ? this.setByInteger(t.int)
                                    : "number" == typeof t
                                    ? this.setByInteger(t)
                                    : void 0 !== t.hex &&
                                      this.setValueHex(t.hex));
                    }),
                    f.lang.extend(l.asn1.DERInteger, l.asn1.ASN1Object),
                    (l.asn1.DERBitString = function (t) {
                        if (void 0 !== t && void 0 !== t.obj) {
                            var e = l.asn1.ASN1Util.newObject(t.obj);
                            t.hex = "00" + e.getEncodedHex();
                        }
                        l.asn1.DERBitString.superclass.constructor.call(this),
                            (this.hT = "03"),
                            (this.setHexValueIncludingUnusedBits = function (
                                t
                            ) {
                                (this.hTLV = null),
                                    (this.isModified = !0),
                                    (this.hV = t);
                            }),
                            (this.setUnusedBitsAndHexValue = function (t, e) {
                                if (t < 0 || 7 < t)
                                    throw (
                                        "unused bits shall be from 0 to 7: u = " +
                                        t
                                    );
                                var n = "0" + t;
                                (this.hTLV = null),
                                    (this.isModified = !0),
                                    (this.hV = n + e);
                            }),
                            (this.setByBinaryString = function (t) {
                                var e =
                                    8 - ((t = t.replace(/0+$/, "")).length % 8);
                                8 == e && (e = 0);
                                for (var n = 0; n <= e; n++) t += "0";
                                var r = "";
                                for (n = 0; n < t.length - 1; n += 8) {
                                    var i = t.substr(n, 8),
                                        s = parseInt(i, 2).toString(16);
                                    1 == s.length && (s = "0" + s), (r += s);
                                }
                                (this.hTLV = null),
                                    (this.isModified = !0),
                                    (this.hV = "0" + e + r);
                            }),
                            (this.setByBooleanArray = function (t) {
                                for (var e = "", n = 0; n < t.length; n++)
                                    1 == t[n] ? (e += "1") : (e += "0");
                                this.setByBinaryString(e);
                            }),
                            (this.newFalseArray = function (t) {
                                for (var e = new Array(t), n = 0; n < t; n++)
                                    e[n] = !1;
                                return e;
                            }),
                            (this.getFreshValueHex = function () {
                                return this.hV;
                            }),
                            void 0 !== t &&
                                ("string" == typeof t &&
                                t.toLowerCase().match(/^[0-9a-f]+$/)
                                    ? this.setHexValueIncludingUnusedBits(t)
                                    : void 0 !== t.hex
                                    ? this.setHexValueIncludingUnusedBits(t.hex)
                                    : void 0 !== t.bin
                                    ? this.setByBinaryString(t.bin)
                                    : void 0 !== t.array &&
                                      this.setByBooleanArray(t.array));
                    }),
                    f.lang.extend(l.asn1.DERBitString, l.asn1.ASN1Object),
                    (l.asn1.DEROctetString = function (t) {
                        if (void 0 !== t && void 0 !== t.obj) {
                            var e = l.asn1.ASN1Util.newObject(t.obj);
                            t.hex = e.getEncodedHex();
                        }
                        l.asn1.DEROctetString.superclass.constructor.call(
                            this,
                            t
                        ),
                            (this.hT = "04");
                    }),
                    f.lang.extend(
                        l.asn1.DEROctetString,
                        l.asn1.DERAbstractString
                    ),
                    (l.asn1.DERNull = function () {
                        l.asn1.DERNull.superclass.constructor.call(this),
                            (this.hT = "05"),
                            (this.hTLV = "0500");
                    }),
                    f.lang.extend(l.asn1.DERNull, l.asn1.ASN1Object),
                    (l.asn1.DERObjectIdentifier = function (t) {
                        var e = function (t) {
                                var e = t.toString(16);
                                return 1 == e.length && (e = "0" + e), e;
                            },
                            n = function (t) {
                                var n = "",
                                    r = new A(t, 10).toString(2),
                                    i = 7 - (r.length % 7);
                                7 == i && (i = 0);
                                for (var s = "", a = 0; a < i; a++) s += "0";
                                for (
                                    r = s + r, a = 0;
                                    a < r.length - 1;
                                    a += 7
                                ) {
                                    var o = r.substr(a, 7);
                                    a != r.length - 7 && (o = "1" + o),
                                        (n += e(parseInt(o, 2)));
                                }
                                return n;
                            };
                        l.asn1.DERObjectIdentifier.superclass.constructor.call(
                            this
                        ),
                            (this.hT = "06"),
                            (this.setValueHex = function (t) {
                                (this.hTLV = null),
                                    (this.isModified = !0),
                                    (this.s = null),
                                    (this.hV = t);
                            }),
                            (this.setValueOidString = function (t) {
                                if (!t.match(/^[0-9.]+$/))
                                    throw "malformed oid string: " + t;
                                var r = "",
                                    i = t.split("."),
                                    s = 40 * parseInt(i[0]) + parseInt(i[1]);
                                (r += e(s)), i.splice(0, 2);
                                for (var a = 0; a < i.length; a++) r += n(i[a]);
                                (this.hTLV = null),
                                    (this.isModified = !0),
                                    (this.s = null),
                                    (this.hV = r);
                            }),
                            (this.setValueName = function (t) {
                                var e = l.asn1.x509.OID.name2oid(t);
                                if ("" === e)
                                    throw (
                                        "DERObjectIdentifier oidName undefined: " +
                                        t
                                    );
                                this.setValueOidString(e);
                            }),
                            (this.getFreshValueHex = function () {
                                return this.hV;
                            }),
                            void 0 !== t &&
                                ("string" == typeof t
                                    ? t.match(/^[0-2].[0-9.]+$/)
                                        ? this.setValueOidString(t)
                                        : this.setValueName(t)
                                    : void 0 !== t.oid
                                    ? this.setValueOidString(t.oid)
                                    : void 0 !== t.hex
                                    ? this.setValueHex(t.hex)
                                    : void 0 !== t.name &&
                                      this.setValueName(t.name));
                    }),
                    f.lang.extend(
                        l.asn1.DERObjectIdentifier,
                        l.asn1.ASN1Object
                    ),
                    (l.asn1.DEREnumerated = function (t) {
                        l.asn1.DEREnumerated.superclass.constructor.call(this),
                            (this.hT = "0a"),
                            (this.setByBigInteger = function (t) {
                                (this.hTLV = null),
                                    (this.isModified = !0),
                                    (this.hV =
                                        l.asn1.ASN1Util.bigIntToMinTwosComplementsHex(
                                            t
                                        ));
                            }),
                            (this.setByInteger = function (t) {
                                var e = new A(String(t), 10);
                                this.setByBigInteger(e);
                            }),
                            (this.setValueHex = function (t) {
                                this.hV = t;
                            }),
                            (this.getFreshValueHex = function () {
                                return this.hV;
                            }),
                            void 0 !== t &&
                                (void 0 !== t.int
                                    ? this.setByInteger(t.int)
                                    : "number" == typeof t
                                    ? this.setByInteger(t)
                                    : void 0 !== t.hex &&
                                      this.setValueHex(t.hex));
                    }),
                    f.lang.extend(l.asn1.DEREnumerated, l.asn1.ASN1Object),
                    (l.asn1.DERUTF8String = function (t) {
                        l.asn1.DERUTF8String.superclass.constructor.call(
                            this,
                            t
                        ),
                            (this.hT = "0c");
                    }),
                    f.lang.extend(
                        l.asn1.DERUTF8String,
                        l.asn1.DERAbstractString
                    ),
                    (l.asn1.DERNumericString = function (t) {
                        l.asn1.DERNumericString.superclass.constructor.call(
                            this,
                            t
                        ),
                            (this.hT = "12");
                    }),
                    f.lang.extend(
                        l.asn1.DERNumericString,
                        l.asn1.DERAbstractString
                    ),
                    (l.asn1.DERPrintableString = function (t) {
                        l.asn1.DERPrintableString.superclass.constructor.call(
                            this,
                            t
                        ),
                            (this.hT = "13");
                    }),
                    f.lang.extend(
                        l.asn1.DERPrintableString,
                        l.asn1.DERAbstractString
                    ),
                    (l.asn1.DERTeletexString = function (t) {
                        l.asn1.DERTeletexString.superclass.constructor.call(
                            this,
                            t
                        ),
                            (this.hT = "14");
                    }),
                    f.lang.extend(
                        l.asn1.DERTeletexString,
                        l.asn1.DERAbstractString
                    ),
                    (l.asn1.DERIA5String = function (t) {
                        l.asn1.DERIA5String.superclass.constructor.call(
                            this,
                            t
                        ),
                            (this.hT = "16");
                    }),
                    f.lang.extend(
                        l.asn1.DERIA5String,
                        l.asn1.DERAbstractString
                    ),
                    (l.asn1.DERUTCTime = function (t) {
                        l.asn1.DERUTCTime.superclass.constructor.call(this, t),
                            (this.hT = "17"),
                            (this.setByDate = function (t) {
                                (this.hTLV = null),
                                    (this.isModified = !0),
                                    (this.date = t),
                                    (this.s = this.formatDate(
                                        this.date,
                                        "utc"
                                    )),
                                    (this.hV = ct(this.s));
                            }),
                            (this.getFreshValueHex = function () {
                                return (
                                    void 0 === this.date &&
                                        void 0 === this.s &&
                                        ((this.date = new Date()),
                                        (this.s = this.formatDate(
                                            this.date,
                                            "utc"
                                        )),
                                        (this.hV = ct(this.s))),
                                    this.hV
                                );
                            }),
                            void 0 !== t &&
                                (void 0 !== t.str
                                    ? this.setString(t.str)
                                    : "string" == typeof t &&
                                      t.match(/^[0-9]{12}Z$/)
                                    ? this.setString(t)
                                    : void 0 !== t.hex
                                    ? this.setStringHex(t.hex)
                                    : void 0 !== t.date &&
                                      this.setByDate(t.date));
                    }),
                    f.lang.extend(l.asn1.DERUTCTime, l.asn1.DERAbstractTime),
                    (l.asn1.DERGeneralizedTime = function (t) {
                        l.asn1.DERGeneralizedTime.superclass.constructor.call(
                            this,
                            t
                        ),
                            (this.hT = "18"),
                            (this.withMillis = !1),
                            (this.setByDate = function (t) {
                                (this.hTLV = null),
                                    (this.isModified = !0),
                                    (this.date = t),
                                    (this.s = this.formatDate(
                                        this.date,
                                        "gen",
                                        this.withMillis
                                    )),
                                    (this.hV = ct(this.s));
                            }),
                            (this.getFreshValueHex = function () {
                                return (
                                    void 0 === this.date &&
                                        void 0 === this.s &&
                                        ((this.date = new Date()),
                                        (this.s = this.formatDate(
                                            this.date,
                                            "gen",
                                            this.withMillis
                                        )),
                                        (this.hV = ct(this.s))),
                                    this.hV
                                );
                            }),
                            void 0 !== t &&
                                (void 0 !== t.str
                                    ? this.setString(t.str)
                                    : "string" == typeof t &&
                                      t.match(/^[0-9]{14}Z$/)
                                    ? this.setString(t)
                                    : void 0 !== t.hex
                                    ? this.setStringHex(t.hex)
                                    : void 0 !== t.date &&
                                      this.setByDate(t.date),
                                !0 === t.millis && (this.withMillis = !0));
                    }),
                    f.lang.extend(
                        l.asn1.DERGeneralizedTime,
                        l.asn1.DERAbstractTime
                    ),
                    (l.asn1.DERSequence = function (t) {
                        l.asn1.DERSequence.superclass.constructor.call(this, t),
                            (this.hT = "30"),
                            (this.getFreshValueHex = function () {
                                for (
                                    var t = "", e = 0;
                                    e < this.asn1Array.length;
                                    e++
                                )
                                    t += this.asn1Array[e].getEncodedHex();
                                return (this.hV = t), this.hV;
                            });
                    }),
                    f.lang.extend(
                        l.asn1.DERSequence,
                        l.asn1.DERAbstractStructured
                    ),
                    (l.asn1.DERSet = function (t) {
                        l.asn1.DERSet.superclass.constructor.call(this, t),
                            (this.hT = "31"),
                            (this.sortFlag = !0),
                            (this.getFreshValueHex = function () {
                                for (
                                    var t = new Array(), e = 0;
                                    e < this.asn1Array.length;
                                    e++
                                ) {
                                    var n = this.asn1Array[e];
                                    t.push(n.getEncodedHex());
                                }
                                return (
                                    1 == this.sortFlag && t.sort(),
                                    (this.hV = t.join("")),
                                    this.hV
                                );
                            }),
                            void 0 !== t &&
                                void 0 !== t.sortflag &&
                                0 == t.sortflag &&
                                (this.sortFlag = !1);
                    }),
                    f.lang.extend(l.asn1.DERSet, l.asn1.DERAbstractStructured),
                    (l.asn1.DERTaggedObject = function (t) {
                        l.asn1.DERTaggedObject.superclass.constructor.call(
                            this
                        ),
                            (this.hT = "a0"),
                            (this.hV = ""),
                            (this.isExplicit = !0),
                            (this.asn1Object = null),
                            (this.setASN1Object = function (t, e, n) {
                                (this.hT = e),
                                    (this.isExplicit = t),
                                    (this.asn1Object = n),
                                    this.isExplicit
                                        ? ((this.hV =
                                              this.asn1Object.getEncodedHex()),
                                          (this.hTLV = null),
                                          (this.isModified = !0))
                                        : ((this.hV = null),
                                          (this.hTLV = n.getEncodedHex()),
                                          (this.hTLV = this.hTLV.replace(
                                              /^../,
                                              e
                                          )),
                                          (this.isModified = !1));
                            }),
                            (this.getFreshValueHex = function () {
                                return this.hV;
                            }),
                            void 0 !== t &&
                                (void 0 !== t.tag && (this.hT = t.tag),
                                void 0 !== t.explicit &&
                                    (this.isExplicit = t.explicit),
                                void 0 !== t.obj &&
                                    ((this.asn1Object = t.obj),
                                    this.setASN1Object(
                                        this.isExplicit,
                                        this.hT,
                                        this.asn1Object
                                    )));
                    }),
                    f.lang.extend(l.asn1.DERTaggedObject, l.asn1.ASN1Object);
                var at,
                    ot,
                    ht = new (function () {})();
                function ut(t) {
                    for (var e = "", n = 0; n < t.length; n++) {
                        var r = t[n].toString(16);
                        1 == r.length && (r = "0" + r), (e += r);
                    }
                    return e;
                }
                function ct(t) {
                    return ut(
                        (function (t) {
                            for (var e = new Array(), n = 0; n < t.length; n++)
                                e[n] = t.charCodeAt(n);
                            return e;
                        })(t)
                    );
                }
                function lt(t) {
                    return (t = (t = t.replace(/\=/g, "")).replace(
                        /\+/g,
                        "-"
                    )).replace(/\//g, "_");
                }
                function ft(t) {
                    return (
                        t.length % 4 == 2
                            ? (t += "==")
                            : t.length % 4 == 3 && (t += "="),
                        (t = t.replace(/-/g, "+")).replace(/_/g, "/")
                    );
                }
                function dt(t) {
                    return t.length % 2 == 1 && (t = "0" + t), lt(v(t));
                }
                function gt(t) {
                    return S(ft(t));
                }
                function pt(t) {
                    return St(bt(t));
                }
                function yt(t) {
                    return decodeURIComponent(At(t));
                }
                function mt(t) {
                    for (var e = "", n = 0; n < t.length - 1; n += 2)
                        e += String.fromCharCode(parseInt(t.substr(n, 2), 16));
                    return e;
                }
                function vt(t) {
                    for (var e = "", n = 0; n < t.length; n++)
                        e += ("0" + t.charCodeAt(n).toString(16)).slice(-2);
                    return e;
                }
                function St(t) {
                    return t.replace(/%/g, "");
                }
                function At(t) {
                    return t.replace(/(..)/g, "%$1");
                }
                function bt(t) {
                    for (
                        var e = encodeURIComponent(t), n = "", r = 0;
                        r < e.length;
                        r++
                    )
                        "%" == e[r]
                            ? ((n += e.substr(r, 3)), (r += 2))
                            : (n = n + "%" + ct(e[r]));
                    return n;
                }
                (ht.getByteLengthOfL_AtObj = function (t, e) {
                    if ("8" != t.substring(e + 2, e + 3)) return 1;
                    var n = parseInt(t.substring(e + 3, e + 4));
                    return 0 == n ? -1 : 0 < n && n < 10 ? n + 1 : -2;
                }),
                    (ht.getHexOfL_AtObj = function (t, e) {
                        var n = ht.getByteLengthOfL_AtObj(t, e);
                        return n < 1 ? "" : t.substring(e + 2, e + 2 + 2 * n);
                    }),
                    (ht.getIntOfL_AtObj = function (t, e) {
                        var n = ht.getHexOfL_AtObj(t, e);
                        return "" == n
                            ? -1
                            : (parseInt(n.substring(0, 1)) < 8
                                  ? new A(n, 16)
                                  : new A(n.substring(2), 16)
                              ).intValue();
                    }),
                    (ht.getStartPosOfV_AtObj = function (t, e) {
                        var n = ht.getByteLengthOfL_AtObj(t, e);
                        return n < 0 ? n : e + 2 * (n + 1);
                    }),
                    (ht.getHexOfV_AtObj = function (t, e) {
                        var n = ht.getStartPosOfV_AtObj(t, e),
                            r = ht.getIntOfL_AtObj(t, e);
                        return t.substring(n, n + 2 * r);
                    }),
                    (ht.getHexOfTLV_AtObj = function (t, e) {
                        return (
                            t.substr(e, 2) +
                            ht.getHexOfL_AtObj(t, e) +
                            ht.getHexOfV_AtObj(t, e)
                        );
                    }),
                    (ht.getPosOfNextSibling_AtObj = function (t, e) {
                        return (
                            ht.getStartPosOfV_AtObj(t, e) +
                            2 * ht.getIntOfL_AtObj(t, e)
                        );
                    }),
                    (ht.getPosArrayOfChildren_AtObj = function (t, e) {
                        var n = new Array(),
                            r = ht.getStartPosOfV_AtObj(t, e);
                        "03" == t.substr(e, 2) ? n.push(r + 2) : n.push(r);
                        for (
                            var i = ht.getIntOfL_AtObj(t, e), s = r, a = 0;
                            ;

                        ) {
                            var o = ht.getPosOfNextSibling_AtObj(t, s);
                            if (null == o || o - r >= 2 * i) break;
                            if (a >= 200) break;
                            n.push(o), (s = o), a++;
                        }
                        return n;
                    }),
                    (ht.getNthChildIndex_AtObj = function (t, e, n) {
                        return ht.getPosArrayOfChildren_AtObj(t, e)[n];
                    }),
                    (ht.getDecendantIndexByNthList = function (t, e, n) {
                        if (0 == n.length) return e;
                        var r = n.shift(),
                            i = ht.getPosArrayOfChildren_AtObj(t, e);
                        return ht.getDecendantIndexByNthList(t, i[r], n);
                    }),
                    (ht.getDecendantHexTLVByNthList = function (t, e, n) {
                        var r = ht.getDecendantIndexByNthList(t, e, n);
                        return ht.getHexOfTLV_AtObj(t, r);
                    }),
                    (ht.getDecendantHexVByNthList = function (t, e, n) {
                        var r = ht.getDecendantIndexByNthList(t, e, n);
                        return ht.getHexOfV_AtObj(t, r);
                    }),
                    (ht.getVbyList = function (t, e, n, r) {
                        var i = ht.getDecendantIndexByNthList(t, e, n);
                        if (void 0 === i) throw "can't find nthList object";
                        if (void 0 !== r && t.substr(i, 2) != r)
                            throw (
                                "checking tag doesn't match: " +
                                t.substr(i, 2) +
                                "!=" +
                                r
                            );
                        return ht.getHexOfV_AtObj(t, i);
                    }),
                    (ht.hextooidstr = function (t) {
                        var e = function (t, e) {
                                return t.length >= e
                                    ? t
                                    : new Array(e - t.length + 1).join("0") + t;
                            },
                            n = [],
                            r = t.substr(0, 2),
                            i = parseInt(r, 16);
                        (n[0] = new String(Math.floor(i / 40))),
                            (n[1] = new String(i % 40));
                        for (
                            var s = t.substr(2), a = [], o = 0;
                            o < s.length / 2;
                            o++
                        )
                            a.push(parseInt(s.substr(2 * o, 2), 16));
                        var h = [],
                            u = "";
                        for (o = 0; o < a.length; o++)
                            128 & a[o]
                                ? (u += e((127 & a[o]).toString(2), 7))
                                : ((u += e((127 & a[o]).toString(2), 7)),
                                  h.push(new String(parseInt(u, 2))),
                                  (u = ""));
                        var c = n.join(".");
                        return h.length > 0 && (c = c + "." + h.join(".")), c;
                    }),
                    (ht.dump = function (t, e, n, r) {
                        var i = t;
                        t instanceof l.asn1.ASN1Object &&
                            (i = t.getEncodedHex());
                        var s = function (t, e) {
                            return t.length <= 2 * e
                                ? t
                                : t.substr(0, e) +
                                      "..(total " +
                                      t.length / 2 +
                                      "bytes).." +
                                      t.substr(t.length - e, e);
                        };
                        void 0 === e && (e = { ommit_long_octet: 32 }),
                            void 0 === n && (n = 0),
                            void 0 === r && (r = "");
                        var a = e.ommit_long_octet;
                        if ("01" == i.substr(n, 2))
                            return "00" == (o = ht.getHexOfV_AtObj(i, n))
                                ? r + "BOOLEAN FALSE\n"
                                : r + "BOOLEAN TRUE\n";
                        if ("02" == i.substr(n, 2))
                            return (
                                r +
                                "INTEGER " +
                                s((o = ht.getHexOfV_AtObj(i, n)), a) +
                                "\n"
                            );
                        if ("03" == i.substr(n, 2))
                            return (
                                r +
                                "BITSTRING " +
                                s((o = ht.getHexOfV_AtObj(i, n)), a) +
                                "\n"
                            );
                        if ("04" == i.substr(n, 2)) {
                            var o = ht.getHexOfV_AtObj(i, n);
                            return ht.isASN1HEX(o)
                                ? (A = r + "OCTETSTRING, encapsulates\n") +
                                      ht.dump(o, e, 0, r + "  ")
                                : r + "OCTETSTRING " + s(o, a) + "\n";
                        }
                        if ("05" == i.substr(n, 2)) return r + "NULL\n";
                        if ("06" == i.substr(n, 2)) {
                            var h = ht.getHexOfV_AtObj(i, n),
                                u = l.asn1.ASN1Util.oidHexToInt(h),
                                c = l.asn1.x509.OID.oid2name(u),
                                f = u.replace(/\./g, " ");
                            return "" != c
                                ? r + "ObjectIdentifier " + c + " (" + f + ")\n"
                                : r + "ObjectIdentifier (" + f + ")\n";
                        }
                        if ("0c" == i.substr(n, 2))
                            return (
                                r +
                                "UTF8String '" +
                                yt(ht.getHexOfV_AtObj(i, n)) +
                                "'\n"
                            );
                        if ("13" == i.substr(n, 2))
                            return (
                                r +
                                "PrintableString '" +
                                yt(ht.getHexOfV_AtObj(i, n)) +
                                "'\n"
                            );
                        if ("14" == i.substr(n, 2))
                            return (
                                r +
                                "TeletexString '" +
                                yt(ht.getHexOfV_AtObj(i, n)) +
                                "'\n"
                            );
                        if ("16" == i.substr(n, 2))
                            return (
                                r +
                                "IA5String '" +
                                yt(ht.getHexOfV_AtObj(i, n)) +
                                "'\n"
                            );
                        if ("17" == i.substr(n, 2))
                            return (
                                r +
                                "UTCTime " +
                                yt(ht.getHexOfV_AtObj(i, n)) +
                                "\n"
                            );
                        if ("18" == i.substr(n, 2))
                            return (
                                r +
                                "GeneralizedTime " +
                                yt(ht.getHexOfV_AtObj(i, n)) +
                                "\n"
                            );
                        if ("30" == i.substr(n, 2)) {
                            if ("3000" == i.substr(n, 4))
                                return r + "SEQUENCE {}\n";
                            A = r + "SEQUENCE\n";
                            var d = e;
                            if (
                                (2 ==
                                    (m = ht.getPosArrayOfChildren_AtObj(i, n))
                                        .length ||
                                    3 == m.length) &&
                                "06" == i.substr(m[0], 2) &&
                                "04" == i.substr(m[m.length - 1], 2)
                            ) {
                                var g = ht.getHexOfV_AtObj(i, m[0]),
                                    p =
                                        ((u = l.asn1.ASN1Util.oidHexToInt(g)),
                                        (c = l.asn1.x509.OID.oid2name(u)),
                                        JSON.parse(JSON.stringify(e)));
                                (p.x509ExtName = c), (d = p);
                            }
                            for (var y = 0; y < m.length; y++)
                                A += ht.dump(i, d, m[y], r + "  ");
                            return A;
                        }
                        if ("31" == i.substr(n, 2)) {
                            A = r + "SET\n";
                            var m = ht.getPosArrayOfChildren_AtObj(i, n);
                            for (y = 0; y < m.length; y++)
                                A += ht.dump(i, e, m[y], r + "  ");
                            return A;
                        }
                        var v = parseInt(i.substr(n, 2), 16);
                        if (0 != (128 & v)) {
                            var S = 31 & v;
                            if (0 != (32 & v)) {
                                var A = r + "[" + S + "]\n";
                                for (
                                    m = ht.getPosArrayOfChildren_AtObj(i, n),
                                        y = 0;
                                    y < m.length;
                                    y++
                                )
                                    A += ht.dump(i, e, m[y], r + "  ");
                                return A;
                            }
                            return (
                                "68747470" ==
                                    (o = ht.getHexOfV_AtObj(i, n)).substr(
                                        0,
                                        8
                                    ) && (o = yt(o)),
                                "subjectAltName" === e.x509ExtName &&
                                    2 == S &&
                                    (o = yt(o)),
                                r + "[" + S + "] " + o + "\n"
                            );
                        }
                        return (
                            r +
                            "UNKNOWN(" +
                            i.substr(n, 2) +
                            ") " +
                            ht.getHexOfV_AtObj(i, n) +
                            "\n"
                        );
                    }),
                    (ht.isASN1HEX = function (t) {
                        if (t.length % 2 == 1) return !1;
                        var e = ht.getIntOfL_AtObj(t, 0),
                            n = t.substr(0, 2),
                            r = ht.getHexOfL_AtObj(t, 0);
                        return t.length - n.length - r.length == 2 * e;
                    }),
                    (ht.pemToHex = function (t, e) {
                        if (-1 == t.indexOf("-----BEGIN "))
                            throw "can't find PEM header: " + e;
                        return S(
                            (t =
                                void 0 !== e
                                    ? (t = t.replace(
                                          "-----BEGIN " + e + "-----",
                                          ""
                                      )).replace("-----END " + e + "-----", "")
                                    : (t = t.replace(
                                          /-----BEGIN [^-]+-----/,
                                          ""
                                      )).replace(
                                          /-----END [^-]+-----/,
                                          ""
                                      )).replace(/\s+/g, "")
                        );
                    }),
                    (void 0 !== l && l) || (l = {}),
                    (void 0 !== l.asn1 && l.asn1) || (l.asn1 = {}),
                    (void 0 !== l.asn1.x509 && l.asn1.x509) ||
                        (l.asn1.x509 = {}),
                    (l.asn1.x509.Certificate = function (t) {
                        l.asn1.x509.Certificate.superclass.constructor.call(
                            this
                        ),
                            (this.setRsaPrvKeyByPEMandPass = function (t, e) {
                                var n = Et.getDecryptedKeyHex(t, e),
                                    r = new tt();
                                r.readPrivateKeyFromASN1HexString(n),
                                    (this.prvKey = r);
                            }),
                            (this.sign = function () {
                                this.asn1SignatureAlg =
                                    this.asn1TBSCert.asn1SignatureAlg;
                                var t = new l.crypto.Signature({
                                    alg: this.asn1SignatureAlg.nameAlg,
                                });
                                t.init(this.prvKey),
                                    t.updateHex(
                                        this.asn1TBSCert.getEncodedHex()
                                    ),
                                    (this.hexSig = t.sign()),
                                    (this.asn1Sig = new l.asn1.DERBitString({
                                        hex: "00" + this.hexSig,
                                    }));
                                var e = new l.asn1.DERSequence({
                                    array: [
                                        this.asn1TBSCert,
                                        this.asn1SignatureAlg,
                                        this.asn1Sig,
                                    ],
                                });
                                (this.hTLV = e.getEncodedHex()),
                                    (this.isModified = !1);
                            }),
                            (this.setSignatureHex = function (t) {
                                (this.asn1SignatureAlg =
                                    this.asn1TBSCert.asn1SignatureAlg),
                                    (this.hexSig = t),
                                    (this.asn1Sig = new l.asn1.DERBitString({
                                        hex: "00" + this.hexSig,
                                    }));
                                var e = new l.asn1.DERSequence({
                                    array: [
                                        this.asn1TBSCert,
                                        this.asn1SignatureAlg,
                                        this.asn1Sig,
                                    ],
                                });
                                (this.hTLV = e.getEncodedHex()),
                                    (this.isModified = !1);
                            }),
                            (this.getEncodedHex = function () {
                                if (0 == this.isModified && null != this.hTLV)
                                    return this.hTLV;
                                throw "not signed yet";
                            }),
                            (this.getPEMString = function () {
                                var t = this.getEncodedHex(),
                                    e = p.enc.Hex.parse(t);
                                return (
                                    "-----BEGIN CERTIFICATE-----\r\n" +
                                    p.enc.Base64.stringify(e).replace(
                                        /(.{64})/g,
                                        "$1\r\n"
                                    ) +
                                    "\r\n-----END CERTIFICATE-----\r\n"
                                );
                            }),
                            void 0 !== t &&
                                (void 0 !== t.tbscertobj &&
                                    (this.asn1TBSCert = t.tbscertobj),
                                void 0 !== t.prvkeyobj
                                    ? (this.prvKey = t.prvkeyobj)
                                    : void 0 !== t.rsaprvkey
                                    ? (this.prvKey = t.rsaprvkey)
                                    : void 0 !== t.rsaprvpem &&
                                      void 0 !== t.rsaprvpas &&
                                      this.setRsaPrvKeyByPEMandPass(
                                          t.rsaprvpem,
                                          t.rsaprvpas
                                      ));
                    }),
                    f.lang.extend(l.asn1.x509.Certificate, l.asn1.ASN1Object),
                    (l.asn1.x509.TBSCertificate = function (t) {
                        l.asn1.x509.TBSCertificate.superclass.constructor.call(
                            this
                        ),
                            (this._initialize = function () {
                                (this.asn1Array = new Array()),
                                    (this.asn1Version =
                                        new l.asn1.DERTaggedObject({
                                            obj: new l.asn1.DERInteger({
                                                int: 2,
                                            }),
                                        })),
                                    (this.asn1SerialNumber = null),
                                    (this.asn1SignatureAlg = null),
                                    (this.asn1Issuer = null),
                                    (this.asn1NotBefore = null),
                                    (this.asn1NotAfter = null),
                                    (this.asn1Subject = null),
                                    (this.asn1SubjPKey = null),
                                    (this.extensionsArray = new Array());
                            }),
                            (this.setSerialNumberByParam = function (t) {
                                this.asn1SerialNumber = new l.asn1.DERInteger(
                                    t
                                );
                            }),
                            (this.setSignatureAlgByParam = function (t) {
                                this.asn1SignatureAlg =
                                    new l.asn1.x509.AlgorithmIdentifier(t);
                            }),
                            (this.setIssuerByParam = function (t) {
                                this.asn1Issuer = new l.asn1.x509.X500Name(t);
                            }),
                            (this.setNotBeforeByParam = function (t) {
                                this.asn1NotBefore = new l.asn1.x509.Time(t);
                            }),
                            (this.setNotAfterByParam = function (t) {
                                this.asn1NotAfter = new l.asn1.x509.Time(t);
                            }),
                            (this.setSubjectByParam = function (t) {
                                this.asn1Subject = new l.asn1.x509.X500Name(t);
                            }),
                            (this.setSubjectPublicKeyByParam = function (t) {
                                this.asn1SubjPKey =
                                    new l.asn1.x509.SubjectPublicKeyInfo(t);
                            }),
                            (this.setSubjectPublicKeyByGetKey = function (t) {
                                var e = xt.getKey(t);
                                this.asn1SubjPKey =
                                    new l.asn1.x509.SubjectPublicKeyInfo(e);
                            }),
                            (this.appendExtension = function (t) {
                                this.extensionsArray.push(t);
                            }),
                            (this.appendExtensionByName = function (t, e) {
                                l.asn1.x509.Extension.appendByNameToArray(
                                    t,
                                    e,
                                    this.extensionsArray
                                );
                            }),
                            (this.getEncodedHex = function () {
                                if (
                                    null == this.asn1NotBefore ||
                                    null == this.asn1NotAfter
                                )
                                    throw "notBefore and/or notAfter not set";
                                var t = new l.asn1.DERSequence({
                                    array: [
                                        this.asn1NotBefore,
                                        this.asn1NotAfter,
                                    ],
                                });
                                if (
                                    ((this.asn1Array = new Array()),
                                    this.asn1Array.push(this.asn1Version),
                                    this.asn1Array.push(this.asn1SerialNumber),
                                    this.asn1Array.push(this.asn1SignatureAlg),
                                    this.asn1Array.push(this.asn1Issuer),
                                    this.asn1Array.push(t),
                                    this.asn1Array.push(this.asn1Subject),
                                    this.asn1Array.push(this.asn1SubjPKey),
                                    this.extensionsArray.length > 0)
                                ) {
                                    var e = new l.asn1.DERSequence({
                                            array: this.extensionsArray,
                                        }),
                                        n = new l.asn1.DERTaggedObject({
                                            explicit: !0,
                                            tag: "a3",
                                            obj: e,
                                        });
                                    this.asn1Array.push(n);
                                }
                                var r = new l.asn1.DERSequence({
                                    array: this.asn1Array,
                                });
                                return (
                                    (this.hTLV = r.getEncodedHex()),
                                    (this.isModified = !1),
                                    this.hTLV
                                );
                            }),
                            this._initialize();
                    }),
                    f.lang.extend(
                        l.asn1.x509.TBSCertificate,
                        l.asn1.ASN1Object
                    ),
                    (l.asn1.x509.Extension = function (t) {
                        l.asn1.x509.Extension.superclass.constructor.call(this),
                            (this.getEncodedHex = function () {
                                var t = new l.asn1.DERObjectIdentifier({
                                        oid: this.oid,
                                    }),
                                    e = new l.asn1.DEROctetString({
                                        hex: this.getExtnValueHex(),
                                    }),
                                    n = new Array();
                                return (
                                    n.push(t),
                                    this.critical &&
                                        n.push(new l.asn1.DERBoolean()),
                                    n.push(e),
                                    new l.asn1.DERSequence({
                                        array: n,
                                    }).getEncodedHex()
                                );
                            }),
                            (this.critical = !1),
                            void 0 !== t &&
                                void 0 !== t.critical &&
                                (this.critical = t.critical);
                    }),
                    f.lang.extend(l.asn1.x509.Extension, l.asn1.ASN1Object),
                    (l.asn1.x509.Extension.appendByNameToArray = function (
                        t,
                        e,
                        n
                    ) {
                        if ("basicconstraints" == t.toLowerCase()) {
                            var r = new l.asn1.x509.BasicConstraints(e);
                            n.push(r);
                        } else if ("keyusage" == t.toLowerCase())
                            (r = new l.asn1.x509.KeyUsage(e)), n.push(r);
                        else if ("crldistributionpoints" == t.toLowerCase())
                            (r = new l.asn1.x509.CRLDistributionPoints(e)),
                                n.push(r);
                        else if ("extkeyusage" == t.toLowerCase())
                            (r = new l.asn1.x509.ExtKeyUsage(e)), n.push(r);
                        else if ("authoritykeyidentifier" == t.toLowerCase())
                            (r = new l.asn1.x509.AuthorityKeyIdentifier(e)),
                                n.push(r);
                        else if ("authorityinfoaccess" == t.toLowerCase())
                            (r = new l.asn1.x509.AuthorityInfoAccess(e)),
                                n.push(r);
                        else if ("subjectaltname" == t.toLowerCase())
                            (r = new l.asn1.x509.SubjectAltName(e)), n.push(r);
                        else {
                            if ("issueraltname" != t.toLowerCase())
                                throw "unsupported extension name: " + t;
                            (r = new l.asn1.x509.IssuerAltName(e)), n.push(r);
                        }
                    }),
                    (l.asn1.x509.KeyUsage = function (t) {
                        l.asn1.x509.KeyUsage.superclass.constructor.call(
                            this,
                            t
                        ),
                            (this.getExtnValueHex = function () {
                                return this.asn1ExtnValue.getEncodedHex();
                            }),
                            (this.oid = "2.5.29.15"),
                            void 0 !== t &&
                                void 0 !== t.bin &&
                                (this.asn1ExtnValue = new l.asn1.DERBitString(
                                    t
                                ));
                    }),
                    f.lang.extend(l.asn1.x509.KeyUsage, l.asn1.x509.Extension),
                    (l.asn1.x509.BasicConstraints = function (t) {
                        l.asn1.x509.BasicConstraints.superclass.constructor.call(
                            this,
                            t
                        ),
                            (this.getExtnValueHex = function () {
                                var t = new Array();
                                this.cA && t.push(new l.asn1.DERBoolean()),
                                    this.pathLen > -1 &&
                                        t.push(
                                            new l.asn1.DERInteger({
                                                int: this.pathLen,
                                            })
                                        );
                                var e = new l.asn1.DERSequence({ array: t });
                                return (
                                    (this.asn1ExtnValue = e),
                                    this.asn1ExtnValue.getEncodedHex()
                                );
                            }),
                            (this.oid = "2.5.29.19"),
                            (this.cA = !1),
                            (this.pathLen = -1),
                            void 0 !== t &&
                                (void 0 !== t.cA && (this.cA = t.cA),
                                void 0 !== t.pathLen &&
                                    (this.pathLen = t.pathLen));
                    }),
                    f.lang.extend(
                        l.asn1.x509.BasicConstraints,
                        l.asn1.x509.Extension
                    ),
                    (l.asn1.x509.CRLDistributionPoints = function (t) {
                        l.asn1.x509.CRLDistributionPoints.superclass.constructor.call(
                            this,
                            t
                        ),
                            (this.getExtnValueHex = function () {
                                return this.asn1ExtnValue.getEncodedHex();
                            }),
                            (this.setByDPArray = function (t) {
                                this.asn1ExtnValue = new l.asn1.DERSequence({
                                    array: t,
                                });
                            }),
                            (this.setByOneURI = function (t) {
                                var e = new l.asn1.x509.GeneralNames([
                                        { uri: t },
                                    ]),
                                    n = new l.asn1.x509.DistributionPointName(
                                        e
                                    ),
                                    r = new l.asn1.x509.DistributionPoint({
                                        dpobj: n,
                                    });
                                this.setByDPArray([r]);
                            }),
                            (this.oid = "2.5.29.31"),
                            void 0 !== t &&
                                (void 0 !== t.array
                                    ? this.setByDPArray(t.array)
                                    : void 0 !== t.uri &&
                                      this.setByOneURI(t.uri));
                    }),
                    f.lang.extend(
                        l.asn1.x509.CRLDistributionPoints,
                        l.asn1.x509.Extension
                    ),
                    (l.asn1.x509.ExtKeyUsage = function (t) {
                        l.asn1.x509.ExtKeyUsage.superclass.constructor.call(
                            this,
                            t
                        ),
                            (this.setPurposeArray = function (t) {
                                this.asn1ExtnValue = new l.asn1.DERSequence();
                                for (var e = 0; e < t.length; e++) {
                                    var n = new l.asn1.DERObjectIdentifier(
                                        t[e]
                                    );
                                    this.asn1ExtnValue.appendASN1Object(n);
                                }
                            }),
                            (this.getExtnValueHex = function () {
                                return this.asn1ExtnValue.getEncodedHex();
                            }),
                            (this.oid = "2.5.29.37"),
                            void 0 !== t &&
                                void 0 !== t.array &&
                                this.setPurposeArray(t.array);
                    }),
                    f.lang.extend(
                        l.asn1.x509.ExtKeyUsage,
                        l.asn1.x509.Extension
                    ),
                    (l.asn1.x509.AuthorityKeyIdentifier = function (t) {
                        l.asn1.x509.AuthorityKeyIdentifier.superclass.constructor.call(
                            this,
                            t
                        ),
                            (this.asn1KID = null),
                            (this.asn1CertIssuer = null),
                            (this.asn1CertSN = null),
                            (this.getExtnValueHex = function () {
                                var t = new Array();
                                this.asn1KID &&
                                    t.push(
                                        new l.asn1.DERTaggedObject({
                                            explicit: !1,
                                            tag: "80",
                                            obj: this.asn1KID,
                                        })
                                    ),
                                    this.asn1CertIssuer &&
                                        t.push(
                                            new l.asn1.DERTaggedObject({
                                                explicit: !1,
                                                tag: "a1",
                                                obj: this.asn1CertIssuer,
                                            })
                                        ),
                                    this.asn1CertSN &&
                                        t.push(
                                            new l.asn1.DERTaggedObject({
                                                explicit: !1,
                                                tag: "82",
                                                obj: this.asn1CertSN,
                                            })
                                        );
                                var e = new l.asn1.DERSequence({ array: t });
                                return (
                                    (this.asn1ExtnValue = e),
                                    this.asn1ExtnValue.getEncodedHex()
                                );
                            }),
                            (this.setKIDByParam = function (t) {
                                this.asn1KID = new l.asn1.DEROctetString(t);
                            }),
                            (this.setCertIssuerByParam = function (t) {
                                this.asn1CertIssuer = new l.asn1.x509.X500Name(
                                    t
                                );
                            }),
                            (this.setCertSNByParam = function (t) {
                                this.asn1CertSN = new l.asn1.DERInteger(t);
                            }),
                            (this.oid = "2.5.29.35"),
                            void 0 !== t &&
                                (void 0 !== t.kid && this.setKIDByParam(t.kid),
                                void 0 !== t.issuer &&
                                    this.setCertIssuerByParam(t.issuer),
                                void 0 !== t.sn && this.setCertSNByParam(t.sn));
                    }),
                    f.lang.extend(
                        l.asn1.x509.AuthorityKeyIdentifier,
                        l.asn1.x509.Extension
                    ),
                    (l.asn1.x509.AuthorityInfoAccess = function (t) {
                        l.asn1.x509.AuthorityInfoAccess.superclass.constructor.call(
                            this,
                            t
                        ),
                            (this.setAccessDescriptionArray = function (t) {
                                for (
                                    var e = new Array(), n = 0;
                                    n < t.length;
                                    n++
                                ) {
                                    var r = new l.asn1.DERObjectIdentifier(
                                            t[n].accessMethod
                                        ),
                                        i = new l.asn1.x509.GeneralName(
                                            t[n].accessLocation
                                        ),
                                        s = new l.asn1.DERSequence({
                                            array: [r, i],
                                        });
                                    e.push(s);
                                }
                                this.asn1ExtnValue = new l.asn1.DERSequence({
                                    array: e,
                                });
                            }),
                            (this.getExtnValueHex = function () {
                                return this.asn1ExtnValue.getEncodedHex();
                            }),
                            (this.oid = "1.3.6.1.5.5.7.1.1"),
                            void 0 !== t &&
                                void 0 !== t.array &&
                                this.setAccessDescriptionArray(t.array);
                    }),
                    f.lang.extend(
                        l.asn1.x509.AuthorityInfoAccess,
                        l.asn1.x509.Extension
                    ),
                    (l.asn1.x509.SubjectAltName = function (t) {
                        l.asn1.x509.SubjectAltName.superclass.constructor.call(
                            this,
                            t
                        ),
                            (this.setNameArray = function (t) {
                                this.asn1ExtnValue =
                                    new l.asn1.x509.GeneralNames(t);
                            }),
                            (this.getExtnValueHex = function () {
                                return this.asn1ExtnValue.getEncodedHex();
                            }),
                            (this.oid = "2.5.29.17"),
                            void 0 !== t &&
                                void 0 !== t.array &&
                                this.setNameArray(t.array);
                    }),
                    f.lang.extend(
                        l.asn1.x509.SubjectAltName,
                        l.asn1.x509.Extension
                    ),
                    (l.asn1.x509.IssuerAltName = function (t) {
                        l.asn1.x509.IssuerAltName.superclass.constructor.call(
                            this,
                            t
                        ),
                            (this.setNameArray = function (t) {
                                this.asn1ExtnValue =
                                    new l.asn1.x509.GeneralNames(t);
                            }),
                            (this.getExtnValueHex = function () {
                                return this.asn1ExtnValue.getEncodedHex();
                            }),
                            (this.oid = "2.5.29.18"),
                            void 0 !== t &&
                                void 0 !== t.array &&
                                this.setNameArray(t.array);
                    }),
                    f.lang.extend(
                        l.asn1.x509.IssuerAltName,
                        l.asn1.x509.Extension
                    ),
                    (l.asn1.x509.CRL = function (t) {
                        l.asn1.x509.CRL.superclass.constructor.call(this),
                            (this.setRsaPrvKeyByPEMandPass = function (t, e) {
                                var n = Et.getDecryptedKeyHex(t, e),
                                    r = new tt();
                                r.readPrivateKeyFromASN1HexString(n),
                                    (this.rsaPrvKey = r);
                            }),
                            (this.sign = function () {
                                (this.asn1SignatureAlg =
                                    this.asn1TBSCertList.asn1SignatureAlg),
                                    (sig = new l.crypto.Signature({
                                        alg: "SHA1withRSA",
                                        prov: "cryptojs/jsrsa",
                                    })),
                                    sig.initSign(this.rsaPrvKey),
                                    sig.updateHex(
                                        this.asn1TBSCertList.getEncodedHex()
                                    ),
                                    (this.hexSig = sig.sign()),
                                    (this.asn1Sig = new l.asn1.DERBitString({
                                        hex: "00" + this.hexSig,
                                    }));
                                var t = new l.asn1.DERSequence({
                                    array: [
                                        this.asn1TBSCertList,
                                        this.asn1SignatureAlg,
                                        this.asn1Sig,
                                    ],
                                });
                                (this.hTLV = t.getEncodedHex()),
                                    (this.isModified = !1);
                            }),
                            (this.getEncodedHex = function () {
                                if (0 == this.isModified && null != this.hTLV)
                                    return this.hTLV;
                                throw "not signed yet";
                            }),
                            (this.getPEMString = function () {
                                var t = this.getEncodedHex(),
                                    e = p.enc.Hex.parse(t);
                                return (
                                    "-----BEGIN X509 CRL-----\r\n" +
                                    p.enc.Base64.stringify(e).replace(
                                        /(.{64})/g,
                                        "$1\r\n"
                                    ) +
                                    "\r\n-----END X509 CRL-----\r\n"
                                );
                            }),
                            void 0 !== t &&
                                (void 0 !== t.tbsobj &&
                                    (this.asn1TBSCertList = t.tbsobj),
                                void 0 !== t.rsaprvkey &&
                                    (this.rsaPrvKey = t.rsaprvkey),
                                void 0 !== t.rsaprvpem &&
                                    void 0 !== t.rsaprvpas &&
                                    this.setRsaPrvKeyByPEMandPass(
                                        t.rsaprvpem,
                                        t.rsaprvpas
                                    ));
                    }),
                    f.lang.extend(l.asn1.x509.CRL, l.asn1.ASN1Object),
                    (l.asn1.x509.TBSCertList = function (t) {
                        l.asn1.x509.TBSCertList.superclass.constructor.call(
                            this
                        ),
                            (this.setSignatureAlgByParam = function (t) {
                                this.asn1SignatureAlg =
                                    new l.asn1.x509.AlgorithmIdentifier(t);
                            }),
                            (this.setIssuerByParam = function (t) {
                                this.asn1Issuer = new l.asn1.x509.X500Name(t);
                            }),
                            (this.setThisUpdateByParam = function (t) {
                                this.asn1ThisUpdate = new l.asn1.x509.Time(t);
                            }),
                            (this.setNextUpdateByParam = function (t) {
                                this.asn1NextUpdate = new l.asn1.x509.Time(t);
                            }),
                            (this.addRevokedCert = function (t, e) {
                                var n = {};
                                null != t && null != t && (n.sn = t),
                                    null != e && null != e && (n.time = e);
                                var r = new l.asn1.x509.CRLEntry(n);
                                this.aRevokedCert.push(r);
                            }),
                            (this.getEncodedHex = function () {
                                if (
                                    ((this.asn1Array = new Array()),
                                    null != this.asn1Version &&
                                        this.asn1Array.push(this.asn1Version),
                                    this.asn1Array.push(this.asn1SignatureAlg),
                                    this.asn1Array.push(this.asn1Issuer),
                                    this.asn1Array.push(this.asn1ThisUpdate),
                                    null != this.asn1NextUpdate &&
                                        this.asn1Array.push(
                                            this.asn1NextUpdate
                                        ),
                                    this.aRevokedCert.length > 0)
                                ) {
                                    var t = new l.asn1.DERSequence({
                                        array: this.aRevokedCert,
                                    });
                                    this.asn1Array.push(t);
                                }
                                var e = new l.asn1.DERSequence({
                                    array: this.asn1Array,
                                });
                                return (
                                    (this.hTLV = e.getEncodedHex()),
                                    (this.isModified = !1),
                                    this.hTLV
                                );
                            }),
                            (this._initialize = function () {
                                (this.asn1Version = null),
                                    (this.asn1SignatureAlg = null),
                                    (this.asn1Issuer = null),
                                    (this.asn1ThisUpdate = null),
                                    (this.asn1NextUpdate = null),
                                    (this.aRevokedCert = new Array());
                            }),
                            this._initialize();
                    }),
                    f.lang.extend(l.asn1.x509.TBSCertList, l.asn1.ASN1Object),
                    (l.asn1.x509.CRLEntry = function (t) {
                        l.asn1.x509.CRLEntry.superclass.constructor.call(this),
                            (this.setCertSerial = function (t) {
                                this.sn = new l.asn1.DERInteger(t);
                            }),
                            (this.setRevocationDate = function (t) {
                                this.time = new l.asn1.x509.Time(t);
                            }),
                            (this.getEncodedHex = function () {
                                var t = new l.asn1.DERSequence({
                                    array: [this.sn, this.time],
                                });
                                return (this.TLV = t.getEncodedHex()), this.TLV;
                            }),
                            void 0 !== t &&
                                (void 0 !== t.time &&
                                    this.setRevocationDate(t.time),
                                void 0 !== t.sn && this.setCertSerial(t.sn));
                    }),
                    f.lang.extend(l.asn1.x509.CRLEntry, l.asn1.ASN1Object),
                    (l.asn1.x509.X500Name = function (t) {
                        var e;
                        (l.asn1.x509.X500Name.superclass.constructor.call(this),
                        (this.asn1Array = new Array()),
                        (this.setByString = function (t) {
                            var e = t.split("/");
                            e.shift();
                            for (var n = 0; n < e.length; n++)
                                this.asn1Array.push(
                                    new l.asn1.x509.RDN({ str: e[n] })
                                );
                        }),
                        (this.setByLdapString = function (t) {
                            var e = l.asn1.x509.X500Name.ldapToOneline(t);
                            this.setByString(e);
                        }),
                        (this.setByObject = function (t) {
                            for (var e in t)
                                if (t.hasOwnProperty(e)) {
                                    var n = new l.asn1.x509.RDN({
                                        str: e + "=" + t[e],
                                    });
                                    this.asn1Array
                                        ? this.asn1Array.push(n)
                                        : (this.asn1Array = [n]);
                                }
                        }),
                        (this.getEncodedHex = function () {
                            if ("string" == typeof this.hTLV) return this.hTLV;
                            var t = new l.asn1.DERSequence({
                                array: this.asn1Array,
                            });
                            return (this.hTLV = t.getEncodedHex()), this.hTLV;
                        }),
                        void 0 !== t) &&
                            (void 0 !== t.str
                                ? this.setByString(t.str)
                                : void 0 !== t.ldapstr
                                ? this.setByLdapString(t.ldapstr)
                                : "object" == typeof t && this.setByObject(t),
                            void 0 !== t.certissuer &&
                                (((e = new Bt()).hex = ht.pemToHex(
                                    t.certissuer
                                )),
                                (this.hTLV = e.getIssuerHex())),
                            void 0 !== t.certsubject &&
                                (((e = new Bt()).hex = ht.pemToHex(
                                    t.certsubject
                                )),
                                (this.hTLV = e.getSubjectHex())));
                    }),
                    f.lang.extend(l.asn1.x509.X500Name, l.asn1.ASN1Object),
                    (l.asn1.x509.X500Name.onelineToLDAP = function (t) {
                        if ("/" !== t.substr(0, 1)) throw "malformed input";
                        var e = (t = t.substr(1)).split("/");
                        return (
                            e.reverse(),
                            (e = e.map(function (t) {
                                return t.replace(/,/, "\\,");
                            })).join(",")
                        );
                    }),
                    (l.asn1.x509.X500Name.ldapToOneline = function (t) {
                        for (
                            var e = t.split(","), n = !1, r = [], i = 0;
                            e.length > 0;
                            i++
                        ) {
                            var s = e.shift();
                            if (!0 === n) {
                                var a = (r.pop() + "," + s).replace(
                                    /\\,/g,
                                    ","
                                );
                                r.push(a), (n = !1);
                            } else r.push(s);
                            "\\" === s.substr(-1, 1) && (n = !0);
                        }
                        return (
                            (r = r.map(function (t) {
                                return t.replace("/", "\\/");
                            })).reverse(),
                            "/" + r.join("/")
                        );
                    }),
                    (l.asn1.x509.RDN = function (t) {
                        l.asn1.x509.RDN.superclass.constructor.call(this),
                            (this.asn1Array = new Array()),
                            (this.addByString = function (t) {
                                this.asn1Array.push(
                                    new l.asn1.x509.AttributeTypeAndValue({
                                        str: t,
                                    })
                                );
                            }),
                            (this.addByMultiValuedString = function (t) {
                                for (
                                    var e = l.asn1.x509.RDN.parseString(t),
                                        n = 0;
                                    n < e.length;
                                    n++
                                )
                                    this.addByString(e[n]);
                            }),
                            (this.getEncodedHex = function () {
                                var t = new l.asn1.DERSet({
                                    array: this.asn1Array,
                                });
                                return (this.TLV = t.getEncodedHex()), this.TLV;
                            }),
                            void 0 !== t &&
                                void 0 !== t.str &&
                                this.addByMultiValuedString(t.str);
                    }),
                    f.lang.extend(l.asn1.x509.RDN, l.asn1.ASN1Object),
                    (l.asn1.x509.RDN.parseString = function (t) {
                        for (
                            var e = t.split(/\+/), n = !1, r = [], i = 0;
                            e.length > 0;
                            i++
                        ) {
                            var s = e.shift();
                            if (!0 === n) {
                                var a = (r.pop() + "+" + s).replace(
                                    /\\\+/g,
                                    "+"
                                );
                                r.push(a), (n = !1);
                            } else r.push(s);
                            "\\" === s.substr(-1, 1) && (n = !0);
                        }
                        var o = !1,
                            h = [];
                        for (i = 0; r.length > 0; i++) {
                            if (((s = r.shift()), !0 === o)) {
                                var u = h.pop();
                                s.match(/"$/)
                                    ? ((a = (u + "+" + s).replace(
                                          /^([^=]+)="(.*)"$/,
                                          "$1=$2"
                                      )),
                                      h.push(a),
                                      (o = !1))
                                    : h.push(u + "+" + s);
                            } else h.push(s);
                            s.match(/^[^=]+="/) && (o = !0);
                        }
                        return h;
                    }),
                    (l.asn1.x509.AttributeTypeAndValue = function (t) {
                        l.asn1.x509.AttributeTypeAndValue.superclass.constructor.call(
                            this
                        ),
                            (this.setByString = function (t) {
                                var e = t.match(/^([^=]+)=(.+)$/);
                                if (!e)
                                    throw "malformed attrTypeAndValueStr: " + t;
                                this.setByAttrTypeAndValueStr(e[1], e[2]);
                            }),
                            (this.setByAttrTypeAndValueStr = function (t, e) {
                                this.typeObj = l.asn1.x509.OID.atype2obj(t);
                                var n = "utf8";
                                "C" == t && (n = "prn"),
                                    (this.valueObj = this.getValueObj(n, e));
                            }),
                            (this.getValueObj = function (t, e) {
                                if ("utf8" == t)
                                    return new l.asn1.DERUTF8String({ str: e });
                                if ("prn" == t)
                                    return new l.asn1.DERPrintableString({
                                        str: e,
                                    });
                                if ("tel" == t)
                                    return new l.asn1.DERTeletexString({
                                        str: e,
                                    });
                                if ("ia5" == t)
                                    return new l.asn1.DERIA5String({ str: e });
                                throw (
                                    "unsupported directory string type: type=" +
                                    t +
                                    " value=" +
                                    e
                                );
                            }),
                            (this.getEncodedHex = function () {
                                var t = new l.asn1.DERSequence({
                                    array: [this.typeObj, this.valueObj],
                                });
                                return (this.TLV = t.getEncodedHex()), this.TLV;
                            }),
                            void 0 !== t &&
                                void 0 !== t.str &&
                                this.setByString(t.str);
                    }),
                    f.lang.extend(
                        l.asn1.x509.AttributeTypeAndValue,
                        l.asn1.ASN1Object
                    ),
                    (l.asn1.x509.SubjectPublicKeyInfo = function (t) {
                        l.asn1.x509.SubjectPublicKeyInfo.superclass.constructor.call(
                            this
                        ),
                            (this.setRSAKey = function (t) {
                                if (!tt.prototype.isPrototypeOf(t))
                                    throw "argument is not RSAKey instance";
                                this.rsaKey = t;
                                var e = new l.asn1.DERInteger({ bigint: t.n }),
                                    n = new l.asn1.DERInteger({ int: t.e }),
                                    r = new l.asn1.DERSequence({
                                        array: [e, n],
                                    }).getEncodedHex();
                                (this.asn1AlgId =
                                    new l.asn1.x509.AlgorithmIdentifier({
                                        name: "rsaEncryption",
                                    })),
                                    (this.asn1SubjPKey =
                                        new l.asn1.DERBitString({
                                            hex: "00" + r,
                                        }));
                            }),
                            (this.setRSAPEM = function (t) {
                                if (!t.match(/-----BEGIN PUBLIC KEY-----/))
                                    throw "key not supported";
                                var e = t
                                        .replace(/^-----[^-]+-----/, "")
                                        .replace(/-----[^-]+-----\s*$/, "")
                                        .replace(/\s+/g, ""),
                                    n = p.enc.Base64.parse(e),
                                    r = p.enc.Hex.stringify(n),
                                    i = tt
                                        .getHexValueArrayOfChildrenFromHex(r)[1]
                                        .substr(2),
                                    s = tt.getHexValueArrayOfChildrenFromHex(i),
                                    a = new tt();
                                a.setPublic(s[0], s[1]), this.setRSAKey(a);
                            }),
                            (this.getASN1Object = function () {
                                if (
                                    null == this.asn1AlgId ||
                                    null == this.asn1SubjPKey
                                )
                                    throw "algId and/or subjPubKey not set";
                                return new l.asn1.DERSequence({
                                    array: [this.asn1AlgId, this.asn1SubjPKey],
                                });
                            }),
                            (this.getEncodedHex = function () {
                                var t = this.getASN1Object();
                                return (
                                    (this.hTLV = t.getEncodedHex()), this.hTLV
                                );
                            }),
                            (this._setRSAKey = function (t) {
                                var e = l.asn1.ASN1Util.newObject({
                                    seq: [
                                        { int: { bigint: t.n } },
                                        { int: { int: t.e } },
                                    ],
                                }).getEncodedHex();
                                (this.asn1AlgId =
                                    new l.asn1.x509.AlgorithmIdentifier({
                                        name: "rsaEncryption",
                                    })),
                                    (this.asn1SubjPKey =
                                        new l.asn1.DERBitString({
                                            hex: "00" + e,
                                        }));
                            }),
                            (this._setEC = function (t) {
                                var e = new l.asn1.DERObjectIdentifier({
                                    name: t.curveName,
                                });
                                (this.asn1AlgId =
                                    new l.asn1.x509.AlgorithmIdentifier({
                                        name: "ecPublicKey",
                                        asn1params: e,
                                    })),
                                    (this.asn1SubjPKey =
                                        new l.asn1.DERBitString({
                                            hex: "00" + t.pubKeyHex,
                                        }));
                            }),
                            (this._setDSA = function (t) {
                                var e = new l.asn1.ASN1Util.newObject({
                                    seq: [
                                        { int: { bigint: t.p } },
                                        { int: { bigint: t.q } },
                                        { int: { bigint: t.g } },
                                    ],
                                });
                                this.asn1AlgId =
                                    new l.asn1.x509.AlgorithmIdentifier({
                                        name: "dsa",
                                        asn1params: e,
                                    });
                                var n = new l.asn1.DERInteger({ bigint: t.y });
                                this.asn1SubjPKey = new l.asn1.DERBitString({
                                    hex: "00" + n.getEncodedHex(),
                                });
                            }),
                            void 0 !== t &&
                                (t instanceof tt
                                    ? this._setRSAKey(t)
                                    : void 0 !== l.crypto.ECDSA &&
                                      t instanceof l.crypto.ECDSA
                                    ? this._setEC(t)
                                    : void 0 !== l.crypto.DSA &&
                                      t instanceof l.crypto.DSA
                                    ? this._setDSA(t)
                                    : void 0 !== t.rsakey
                                    ? this.setRSAKey(t.rsakey)
                                    : void 0 !== t.rsapem &&
                                      this.setRSAPEM(t.rsapem));
                    }),
                    f.lang.extend(
                        l.asn1.x509.SubjectPublicKeyInfo,
                        l.asn1.ASN1Object
                    ),
                    (l.asn1.x509.Time = function (t) {
                        l.asn1.x509.Time.superclass.constructor.call(this),
                            (this.setTimeParams = function (t) {
                                this.timeParams = t;
                            }),
                            (this.getEncodedHex = function () {
                                var t = null;
                                return (
                                    (t =
                                        null != this.timeParams
                                            ? "utc" == this.type
                                                ? new l.asn1.DERUTCTime(
                                                      this.timeParams
                                                  )
                                                : new l.asn1.DERGeneralizedTime(
                                                      this.timeParams
                                                  )
                                            : "utc" == this.type
                                            ? new l.asn1.DERUTCTime()
                                            : new l.asn1.DERGeneralizedTime()),
                                    (this.TLV = t.getEncodedHex()),
                                    this.TLV
                                );
                            }),
                            (this.type = "utc"),
                            void 0 !== t &&
                                (void 0 !== t.type
                                    ? (this.type = t.type)
                                    : void 0 !== t.str &&
                                      (t.str.match(/^[0-9]{12}Z$/) &&
                                          (this.type = "utc"),
                                      t.str.match(/^[0-9]{14}Z$/) &&
                                          (this.type = "gen")),
                                (this.timeParams = t));
                    }),
                    f.lang.extend(l.asn1.x509.Time, l.asn1.ASN1Object),
                    (l.asn1.x509.AlgorithmIdentifier = function (t) {
                        if (
                            (l.asn1.x509.AlgorithmIdentifier.superclass.constructor.call(
                                this
                            ),
                            (this.nameAlg = null),
                            (this.asn1Alg = null),
                            (this.asn1Params = null),
                            (this.paramEmpty = !1),
                            (this.getEncodedHex = function () {
                                if (
                                    null === this.nameAlg &&
                                    null === this.asn1Alg
                                )
                                    throw "algorithm not specified";
                                null !== this.nameAlg &&
                                    null === this.asn1Alg &&
                                    (this.asn1Alg = l.asn1.x509.OID.name2obj(
                                        this.nameAlg
                                    ));
                                var t = [this.asn1Alg];
                                null !== this.asn1Params &&
                                    t.push(this.asn1Params);
                                var e = new l.asn1.DERSequence({ array: t });
                                return (
                                    (this.hTLV = e.getEncodedHex()), this.hTLV
                                );
                            }),
                            void 0 !== t &&
                                (void 0 !== t.name && (this.nameAlg = t.name),
                                void 0 !== t.asn1params &&
                                    (this.asn1Params = t.asn1params),
                                void 0 !== t.paramempty &&
                                    (this.paramEmpty = t.paramempty)),
                            null === this.asn1Params &&
                                !1 === this.paramEmpty &&
                                null !== this.nameAlg)
                        ) {
                            var e = this.nameAlg.toLowerCase();
                            "withdsa" !== e.substr(-7, 7) &&
                                "withecdsa" !== e.substr(-9, 9) &&
                                (this.asn1Params = new l.asn1.DERNull());
                        }
                    }),
                    f.lang.extend(
                        l.asn1.x509.AlgorithmIdentifier,
                        l.asn1.ASN1Object
                    ),
                    (l.asn1.x509.GeneralName = function (t) {
                        l.asn1.x509.GeneralName.superclass.constructor.call(
                            this
                        );
                        var e = {
                            rfc822: "81",
                            dns: "82",
                            dn: "a4",
                            uri: "86",
                        };
                        (this.explicit = !1),
                            (this.setByParam = function (t) {
                                var n = null;
                                if (void 0 !== t) {
                                    if (
                                        (void 0 !== t.rfc822 &&
                                            ((this.type = "rfc822"),
                                            (n = new l.asn1.DERIA5String({
                                                str: t[this.type],
                                            }))),
                                        void 0 !== t.dns &&
                                            ((this.type = "dns"),
                                            (n = new l.asn1.DERIA5String({
                                                str: t[this.type],
                                            }))),
                                        void 0 !== t.uri &&
                                            ((this.type = "uri"),
                                            (n = new l.asn1.DERIA5String({
                                                str: t[this.type],
                                            }))),
                                        void 0 !== t.dn &&
                                            ((this.type = "dn"),
                                            (n = new l.asn1.x509.X500Name({
                                                str: t.dn,
                                            }))),
                                        void 0 !== t.ldapdn &&
                                            ((this.type = "dn"),
                                            (n = new l.asn1.x509.X500Name({
                                                ldapstr: t.ldapdn,
                                            }))),
                                        void 0 !== t.certissuer)
                                    ) {
                                        (this.type = "dn"),
                                            (this.explicit = !0);
                                        var r = null;
                                        if (
                                            ((s = t.certissuer).match(
                                                /^[0-9A-Fa-f]+$/
                                            ),
                                            -1 != s.indexOf("-----BEGIN ") &&
                                                (r = ht.pemToHex(s)),
                                            null == r)
                                        )
                                            throw "certissuer param not cert";
                                        (a = new Bt()).hex = r;
                                        var i = a.getIssuerHex();
                                        (n = new l.asn1.ASN1Object()).hTLV = i;
                                    }
                                    if (void 0 !== t.certsubj) {
                                        var s, a;
                                        if (
                                            ((this.type = "dn"),
                                            (this.explicit = !0),
                                            (r = null),
                                            (s = t.certsubj).match(
                                                /^[0-9A-Fa-f]+$/
                                            ),
                                            -1 != s.indexOf("-----BEGIN ") &&
                                                (r = ht.pemToHex(s)),
                                            null == r)
                                        )
                                            throw "certsubj param not cert";
                                        ((a = new Bt()).hex = r),
                                            (i = a.getSubjectHex()),
                                            ((n =
                                                new l.asn1.ASN1Object()).hTLV =
                                                i);
                                    }
                                    if (null == this.type)
                                        throw "unsupported type in params=" + t;
                                    this.asn1Obj = new l.asn1.DERTaggedObject({
                                        explicit: this.explicit,
                                        tag: e[this.type],
                                        obj: n,
                                    });
                                }
                            }),
                            (this.getEncodedHex = function () {
                                return this.asn1Obj.getEncodedHex();
                            }),
                            void 0 !== t && this.setByParam(t);
                    }),
                    f.lang.extend(l.asn1.x509.GeneralName, l.asn1.ASN1Object),
                    (l.asn1.x509.GeneralNames = function (t) {
                        l.asn1.x509.GeneralNames.superclass.constructor.call(
                            this
                        ),
                            (this.setByParamArray = function (t) {
                                for (var e = 0; e < t.length; e++) {
                                    var n = new l.asn1.x509.GeneralName(t[e]);
                                    this.asn1Array.push(n);
                                }
                            }),
                            (this.getEncodedHex = function () {
                                return new l.asn1.DERSequence({
                                    array: this.asn1Array,
                                }).getEncodedHex();
                            }),
                            (this.asn1Array = new Array()),
                            void 0 !== t && this.setByParamArray(t);
                    }),
                    f.lang.extend(l.asn1.x509.GeneralNames, l.asn1.ASN1Object),
                    (l.asn1.x509.DistributionPointName = function (t) {
                        if (
                            (l.asn1.x509.DistributionPointName.superclass.constructor.call(
                                this
                            ),
                            (this.getEncodedHex = function () {
                                if ("full" != this.type)
                                    throw (
                                        "currently type shall be 'full': " +
                                        this.type
                                    );
                                return (
                                    (this.asn1Obj = new l.asn1.DERTaggedObject({
                                        explicit: !1,
                                        tag: this.tag,
                                        obj: this.asn1V,
                                    })),
                                    (this.hTLV = this.asn1Obj.getEncodedHex()),
                                    this.hTLV
                                );
                            }),
                            void 0 !== t)
                        ) {
                            if (
                                !l.asn1.x509.GeneralNames.prototype.isPrototypeOf(
                                    t
                                )
                            )
                                throw "This class supports GeneralNames only as argument";
                            (this.type = "full"),
                                (this.tag = "a0"),
                                (this.asn1V = t);
                        }
                    }),
                    f.lang.extend(
                        l.asn1.x509.DistributionPointName,
                        l.asn1.ASN1Object
                    ),
                    (l.asn1.x509.DistributionPoint = function (t) {
                        l.asn1.x509.DistributionPoint.superclass.constructor.call(
                            this
                        ),
                            (this.getEncodedHex = function () {
                                var t = new l.asn1.DERSequence();
                                if (null != this.asn1DP) {
                                    var e = new l.asn1.DERTaggedObject({
                                        explicit: !0,
                                        tag: "a0",
                                        obj: this.asn1DP,
                                    });
                                    t.appendASN1Object(e);
                                }
                                return (
                                    (this.hTLV = t.getEncodedHex()), this.hTLV
                                );
                            }),
                            void 0 !== t &&
                                void 0 !== t.dpobj &&
                                (this.asn1DP = t.dpobj);
                    }),
                    f.lang.extend(
                        l.asn1.x509.DistributionPoint,
                        l.asn1.ASN1Object
                    ),
                    (l.asn1.x509.OID = new (function (t) {
                        (this.atype2oidList = {
                            CN: "2.5.4.3",
                            L: "2.5.4.7",
                            ST: "2.5.4.8",
                            O: "2.5.4.10",
                            OU: "2.5.4.11",
                            C: "2.5.4.6",
                            STREET: "2.5.4.9",
                            DC: "0.9.2342.19200300.100.1.25",
                            UID: "0.9.2342.19200300.100.1.1",
                            SN: "2.5.4.4",
                            DN: "2.5.4.49",
                            E: "1.2.840.113549.1.9.1",
                            businessCategory: "2.5.4.15",
                            postalCode: "2.5.4.17",
                            jurisdictionOfIncorporationL:
                                "1.3.6.1.4.1.311.60.2.1.1",
                            jurisdictionOfIncorporationSP:
                                "1.3.6.1.4.1.311.60.2.1.2",
                            jurisdictionOfIncorporationC:
                                "1.3.6.1.4.1.311.60.2.1.3",
                        }),
                            (this.name2oidList = {
                                sha1: "1.3.14.3.2.26",
                                sha256: "2.16.840.1.101.3.4.2.1",
                                sha384: "2.16.840.1.101.3.4.2.2",
                                sha512: "2.16.840.1.101.3.4.2.3",
                                sha224: "2.16.840.1.101.3.4.2.4",
                                md5: "1.2.840.113549.2.5",
                                md2: "1.3.14.7.2.2.1",
                                ripemd160: "1.3.36.3.2.1",
                                MD2withRSA: "1.2.840.113549.1.1.2",
                                MD4withRSA: "1.2.840.113549.1.1.3",
                                MD5withRSA: "1.2.840.113549.1.1.4",
                                SHA1withRSA: "1.2.840.113549.1.1.5",
                                SHA224withRSA: "1.2.840.113549.1.1.14",
                                SHA256withRSA: "1.2.840.113549.1.1.11",
                                SHA384withRSA: "1.2.840.113549.1.1.12",
                                SHA512withRSA: "1.2.840.113549.1.1.13",
                                SHA1withECDSA: "1.2.840.10045.4.1",
                                SHA224withECDSA: "1.2.840.10045.4.3.1",
                                SHA256withECDSA: "1.2.840.10045.4.3.2",
                                SHA384withECDSA: "1.2.840.10045.4.3.3",
                                SHA512withECDSA: "1.2.840.10045.4.3.4",
                                dsa: "1.2.840.10040.4.1",
                                SHA1withDSA: "1.2.840.10040.4.3",
                                SHA224withDSA: "2.16.840.1.101.3.4.3.1",
                                SHA256withDSA: "2.16.840.1.101.3.4.3.2",
                                rsaEncryption: "1.2.840.113549.1.1.1",
                                commonName: "2.5.4.3",
                                localityName: "2.5.4.7",
                                stateOrProvinceName: "2.5.4.8",
                                organizationName: "2.5.4.10",
                                organizationalUnitName: "2.5.4.11",
                                countryName: "2.5.4.6",
                                streetAddress: "2.5.4.9",
                                domainComponent: "0.9.2342.19200300.100.1.25",
                                userId: "0.9.2342.19200300.100.1.1",
                                surname: "2.5.4.4",
                                distinguishedName: "2.5.4.49",
                                emailAddress: "1.2.840.113549.1.9.1",
                                businessCategory: "2.5.4.15",
                                postalCode: "2.5.4.17",
                                jurisdictionOfIncorporationL:
                                    "1.3.6.1.4.1.311.60.2.1.1",
                                jurisdictionOfIncorporationSP:
                                    "1.3.6.1.4.1.311.60.2.1.2",
                                jurisdictionOfIncorporationC:
                                    "1.3.6.1.4.1.311.60.2.1.3",
                                subjectKeyIdentifier: "2.5.29.14",
                                keyUsage: "2.5.29.15",
                                subjectAltName: "2.5.29.17",
                                issuerAltName: "2.5.29.18",
                                basicConstraints: "2.5.29.19",
                                nameConstraints: "2.5.29.30",
                                cRLDistributionPoints: "2.5.29.31",
                                certificatePolicies: "2.5.29.32",
                                authorityKeyIdentifier: "2.5.29.35",
                                policyConstraints: "2.5.29.36",
                                extKeyUsage: "2.5.29.37",
                                authorityInfoAccess: "1.3.6.1.5.5.7.1.1",
                                ocsp: "1.3.6.1.5.5.7.48.1",
                                caIssuers: "1.3.6.1.5.5.7.48.2",
                                anyExtendedKeyUsage: "2.5.29.37.0",
                                serverAuth: "1.3.6.1.5.5.7.3.1",
                                clientAuth: "1.3.6.1.5.5.7.3.2",
                                codeSigning: "1.3.6.1.5.5.7.3.3",
                                emailProtection: "1.3.6.1.5.5.7.3.4",
                                timeStamping: "1.3.6.1.5.5.7.3.8",
                                ocspSigning: "1.3.6.1.5.5.7.3.9",
                                ecPublicKey: "1.2.840.10045.2.1",
                                secp256r1: "1.2.840.10045.3.1.7",
                                secp256k1: "1.3.132.0.10",
                                secp384r1: "1.3.132.0.34",
                                pkcs5PBES2: "1.2.840.113549.1.5.13",
                                pkcs5PBKDF2: "1.2.840.113549.1.5.12",
                                "des-EDE3-CBC": "1.2.840.113549.3.7",
                                data: "1.2.840.113549.1.7.1",
                                "signed-data": "1.2.840.113549.1.7.2",
                                "enveloped-data": "1.2.840.113549.1.7.3",
                                "digested-data": "1.2.840.113549.1.7.5",
                                "encrypted-data": "1.2.840.113549.1.7.6",
                                "authenticated-data":
                                    "1.2.840.113549.1.9.16.1.2",
                                tstinfo: "1.2.840.113549.1.9.16.1.4",
                                extensionRequest: "1.2.840.113549.1.9.14",
                            }),
                            (this.objCache = {}),
                            (this.name2obj = function (t) {
                                if (void 0 !== this.objCache[t])
                                    return this.objCache[t];
                                if (void 0 === this.name2oidList[t])
                                    throw (
                                        "Name of ObjectIdentifier not defined: " +
                                        t
                                    );
                                var e = this.name2oidList[t],
                                    n = new l.asn1.DERObjectIdentifier({
                                        oid: e,
                                    });
                                return (this.objCache[t] = n), n;
                            }),
                            (this.atype2obj = function (t) {
                                if (void 0 !== this.objCache[t])
                                    return this.objCache[t];
                                if (void 0 === this.atype2oidList[t])
                                    throw "AttributeType name undefined: " + t;
                                var e = this.atype2oidList[t],
                                    n = new l.asn1.DERObjectIdentifier({
                                        oid: e,
                                    });
                                return (this.objCache[t] = n), n;
                            });
                    })()),
                    (l.asn1.x509.OID.oid2name = function (t) {
                        var e = l.asn1.x509.OID.name2oidList;
                        for (var n in e) if (e[n] == t) return n;
                        return "";
                    }),
                    (l.asn1.x509.OID.oid2atype = function (t) {
                        var e = l.asn1.x509.OID.atype2oidList;
                        for (var n in e) if (e[n] == t) return n;
                        return t;
                    }),
                    (l.asn1.x509.OID.name2oid = function (t) {
                        var e = l.asn1.x509.OID.name2oidList;
                        return void 0 === e[t] ? "" : e[t];
                    }),
                    (l.asn1.x509.X509Util = new (function () {
                        this.getPKCS8PubKeyPEMfromRSAKey = function (t) {
                            var e =
                                    l.asn1.ASN1Util.bigIntToMinTwosComplementsHex(
                                        t.n
                                    ),
                                n = l.asn1.ASN1Util.integerToByteHex(t.e),
                                r = new l.asn1.DERInteger({ hex: e }),
                                i = new l.asn1.DERInteger({ hex: n }),
                                s = new l.asn1.DERSequence({
                                    array: [r, i],
                                }).getEncodedHex(),
                                a = new l.asn1.x509.AlgorithmIdentifier({
                                    name: "rsaEncryption",
                                }),
                                o = new l.asn1.DERBitString({ hex: "00" + s }),
                                h = new l.asn1.DERSequence({
                                    array: [a, o],
                                }).getEncodedHex();
                            return l.asn1.ASN1Util.getPEMStringFromHex(
                                h,
                                "PUBLIC KEY"
                            );
                        };
                    })()),
                    (l.asn1.x509.X509Util.newCertPEM = function (t) {
                        var e = l.asn1.x509,
                            n = new e.TBSCertificate();
                        if (void 0 === t.serial)
                            throw "serial number undefined.";
                        if (
                            (n.setSerialNumberByParam(t.serial),
                            "string" != typeof t.sigalg.name)
                        )
                            throw "unproper signature algorithm name";
                        if (
                            (n.setSignatureAlgByParam(t.sigalg),
                            void 0 === t.issuer)
                        )
                            throw "issuer name undefined.";
                        if (
                            (n.setIssuerByParam(t.issuer),
                            void 0 === t.notbefore)
                        )
                            throw "notbefore undefined.";
                        if (
                            (n.setNotBeforeByParam(t.notbefore),
                            void 0 === t.notafter)
                        )
                            throw "notafter undefined.";
                        if (
                            (n.setNotAfterByParam(t.notafter),
                            void 0 === t.subject)
                        )
                            throw "subject name undefined.";
                        if (
                            (n.setSubjectByParam(t.subject),
                            void 0 === t.sbjpubkey)
                        )
                            throw "subject public key undefined.";
                        if (
                            (n.setSubjectPublicKeyByGetKey(t.sbjpubkey),
                            void 0 !== t.ext && void 0 !== t.ext.length)
                        )
                            for (var r = 0; r < t.ext.length; r++)
                                for (key in t.ext[r])
                                    n.appendExtensionByName(key, t.ext[r][key]);
                        if (void 0 === t.cakey && void 0 === t.sighex)
                            throw "param cakey and sighex undefined.";
                        var i = null,
                            s = null;
                        return (
                            t.cakey &&
                                ((i =
                                    !0 === t.cakey.isPrivate
                                        ? t.cakey
                                        : xt.getKey.apply(null, t.cakey)),
                                (s = new e.Certificate({
                                    tbscertobj: n,
                                    prvkeyobj: i,
                                })).sign()),
                            t.sighex &&
                                (s = new e.Certificate({
                                    tbscertobj: n,
                                })).setSignatureHex(t.sighex),
                            s.getPEMString()
                        );
                    }),
                    (void 0 !== l && l) || (l = {}),
                    (void 0 !== l.asn1 && l.asn1) || (l.asn1 = {}),
                    (void 0 !== l.asn1.cms && l.asn1.cms) || (l.asn1.cms = {}),
                    (l.asn1.cms.Attribute = function (t) {
                        l.asn1.cms.Attribute.superclass.constructor.call(this),
                            (this.getEncodedHex = function () {
                                var t, e, n;
                                (t = new l.asn1.DERObjectIdentifier({
                                    oid: this.attrTypeOid,
                                })),
                                    (e = new l.asn1.DERSet({
                                        array: this.valueList,
                                    }));
                                try {
                                    e.getEncodedHex();
                                } catch (t) {
                                    throw (
                                        "fail valueSet.getEncodedHex in Attribute(1)/" +
                                        t
                                    );
                                }
                                n = new l.asn1.DERSequence({ array: [t, e] });
                                try {
                                    this.hTLV = n.getEncodedHex();
                                } catch (t) {
                                    throw (
                                        "failed seq.getEncodedHex in Attribute(2)/" +
                                        t
                                    );
                                }
                                return this.hTLV;
                            });
                    }),
                    f.lang.extend(l.asn1.cms.Attribute, l.asn1.ASN1Object),
                    (l.asn1.cms.ContentType = function (t) {
                        l.asn1.cms.ContentType.superclass.constructor.call(
                            this
                        ),
                            (this.attrTypeOid = "1.2.840.113549.1.9.3");
                        var e = null;
                        void 0 !== t &&
                            ((e = new l.asn1.DERObjectIdentifier(t)),
                            (this.valueList = [e]));
                    }),
                    f.lang.extend(l.asn1.cms.ContentType, l.asn1.cms.Attribute),
                    (l.asn1.cms.MessageDigest = function (t) {
                        if (
                            (l.asn1.cms.MessageDigest.superclass.constructor.call(
                                this
                            ),
                            (this.attrTypeOid = "1.2.840.113549.1.9.4"),
                            void 0 !== t)
                        )
                            if (
                                t.eciObj instanceof
                                    l.asn1.cms.EncapsulatedContentInfo &&
                                "string" == typeof t.hashAlg
                            ) {
                                var e = t.eciObj.eContentValueHex,
                                    n = t.hashAlg,
                                    r = l.crypto.Util.hashHex(e, n);
                                (i = new l.asn1.DEROctetString({
                                    hex: r,
                                })).getEncodedHex(),
                                    (this.valueList = [i]);
                            } else {
                                var i;
                                (i = new l.asn1.DEROctetString(
                                    t
                                )).getEncodedHex(),
                                    (this.valueList = [i]);
                            }
                    }),
                    f.lang.extend(
                        l.asn1.cms.MessageDigest,
                        l.asn1.cms.Attribute
                    ),
                    (l.asn1.cms.SigningTime = function (t) {
                        if (
                            (l.asn1.cms.SigningTime.superclass.constructor.call(
                                this
                            ),
                            (this.attrTypeOid = "1.2.840.113549.1.9.5"),
                            void 0 !== t)
                        ) {
                            var e = new l.asn1.x509.Time(t);
                            try {
                                e.getEncodedHex();
                            } catch (t) {
                                throw "SigningTime.getEncodedHex() failed/" + t;
                            }
                            this.valueList = [e];
                        }
                    }),
                    f.lang.extend(l.asn1.cms.SigningTime, l.asn1.cms.Attribute),
                    (l.asn1.cms.SigningCertificate = function (t) {
                        l.asn1.cms.SigningCertificate.superclass.constructor.call(
                            this
                        ),
                            (this.attrTypeOid = "1.2.840.113549.1.9.16.2.12");
                        var e = l.asn1,
                            n = l.asn1.cms,
                            r = l.crypto;
                        (this.setCerts = function (t) {
                            for (var i = [], s = 0; s < t.length; s++) {
                                var a = ht.pemToHex(t[s]),
                                    o = r.Util.hashHex(a, "sha1"),
                                    h = new e.DEROctetString({ hex: o });
                                h.getEncodedHex();
                                var u = new n.IssuerAndSerialNumber({
                                    cert: t[s],
                                });
                                u.getEncodedHex();
                                var c = new e.DERSequence({ array: [h, u] });
                                c.getEncodedHex(), i.push(c);
                            }
                            var l = new e.DERSequence({ array: i });
                            l.getEncodedHex(), (this.valueList = [l]);
                        }),
                            void 0 !== t &&
                                "object" == typeof t.array &&
                                this.setCerts(t.array);
                    }),
                    f.lang.extend(
                        l.asn1.cms.SigningCertificate,
                        l.asn1.cms.Attribute
                    ),
                    (l.asn1.cms.SigningCertificateV2 = function (t) {
                        l.asn1.cms.SigningCertificateV2.superclass.constructor.call(
                            this
                        ),
                            (this.attrTypeOid = "1.2.840.113549.1.9.16.2.47");
                        var e = l.asn1,
                            n = l.asn1.x509,
                            r = l.asn1.cms,
                            i = l.crypto;
                        if (
                            ((this.setCerts = function (t, s) {
                                for (var a = [], o = 0; o < t.length; o++) {
                                    var h = ht.pemToHex(t[o]),
                                        u = [];
                                    "sha256" != s &&
                                        u.push(
                                            new n.AlgorithmIdentifier({
                                                name: s,
                                            })
                                        );
                                    var c = i.Util.hashHex(h, s),
                                        l = new e.DEROctetString({ hex: c });
                                    l.getEncodedHex(), u.push(l);
                                    var f = new r.IssuerAndSerialNumber({
                                        cert: t[o],
                                    });
                                    f.getEncodedHex(), u.push(f);
                                    var d = new e.DERSequence({ array: u });
                                    d.getEncodedHex(), a.push(d);
                                }
                                var g = new e.DERSequence({ array: a });
                                g.getEncodedHex(), (this.valueList = [g]);
                            }),
                            void 0 !== t && "object" == typeof t.array)
                        ) {
                            var s = "sha256";
                            "string" == typeof t.hashAlg && (s = t.hashAlg),
                                this.setCerts(t.array, s);
                        }
                    }),
                    f.lang.extend(
                        l.asn1.cms.SigningCertificateV2,
                        l.asn1.cms.Attribute
                    ),
                    (l.asn1.cms.IssuerAndSerialNumber = function (t) {
                        l.asn1.cms.IssuerAndSerialNumber.superclass.constructor.call(
                            this
                        );
                        var e = l.asn1,
                            n = e.x509;
                        (this.setByCertPEM = function (t) {
                            var r = ht.pemToHex(t),
                                i = new Bt();
                            i.hex = r;
                            var s = i.getIssuerHex();
                            (this.dIssuer = new n.X500Name()),
                                (this.dIssuer.hTLV = s);
                            var a = i.getSerialNumberHex();
                            this.dSerial = new e.DERInteger({ hex: a });
                        }),
                            (this.getEncodedHex = function () {
                                var t = new l.asn1.DERSequence({
                                    array: [this.dIssuer, this.dSerial],
                                });
                                return (
                                    (this.hTLV = t.getEncodedHex()), this.hTLV
                                );
                            }),
                            void 0 !== t &&
                                ("string" == typeof t &&
                                    -1 != t.indexOf("-----BEGIN ") &&
                                    this.setByCertPEM(t),
                                t.issuer &&
                                    t.serial &&
                                    (t.issuer instanceof l.asn1.x509.X500Name
                                        ? (this.dIssuer = t.issuer)
                                        : (this.dIssuer =
                                              new l.asn1.x509.X500Name(
                                                  t.issuer
                                              )),
                                    t.serial instanceof l.asn1.DERInteger
                                        ? (this.dSerial = t.serial)
                                        : (this.dSerial = new l.asn1.DERInteger(
                                              t.serial
                                          ))),
                                "string" == typeof t.cert &&
                                    this.setByCertPEM(t.cert));
                    }),
                    f.lang.extend(
                        l.asn1.cms.IssuerAndSerialNumber,
                        l.asn1.ASN1Object
                    ),
                    (l.asn1.cms.AttributeList = function (t) {
                        l.asn1.cms.AttributeList.superclass.constructor.call(
                            this
                        ),
                            (this.list = new Array()),
                            (this.sortFlag = !0),
                            (this.add = function (t) {
                                t instanceof l.asn1.cms.Attribute &&
                                    this.list.push(t);
                            }),
                            (this.length = function () {
                                return this.list.length;
                            }),
                            (this.clear = function () {
                                (this.list = new Array()),
                                    (this.hTLV = null),
                                    (this.hV = null);
                            }),
                            (this.getEncodedHex = function () {
                                if ("string" == typeof this.hTLV)
                                    return this.hTLV;
                                var t = new l.asn1.DERSet({
                                    array: this.list,
                                    sortflag: this.sortFlag,
                                });
                                return (
                                    (this.hTLV = t.getEncodedHex()), this.hTLV
                                );
                            }),
                            void 0 !== t &&
                                void 0 !== t.sortflag &&
                                0 == t.sortflag &&
                                (this.sortFlag = !1);
                    }),
                    f.lang.extend(l.asn1.cms.AttributeList, l.asn1.ASN1Object),
                    (l.asn1.cms.SignerInfo = function (t) {
                        l.asn1.cms.SignerInfo.superclass.constructor.call(this);
                        var e = l.asn1,
                            n = l.asn1.cms,
                            r = l.asn1.x509;
                        (this.dCMSVersion = new e.DERInteger({ int: 1 })),
                            (this.dSignerIdentifier = null),
                            (this.dDigestAlgorithm = null),
                            (this.dSignedAttrs = new n.AttributeList()),
                            (this.dSigAlg = null),
                            (this.dSig = null),
                            (this.dUnsignedAttrs = new n.AttributeList()),
                            (this.setSignerIdentifier = function (t) {
                                "string" == typeof t &&
                                    -1 != t.indexOf("CERTIFICATE") &&
                                    -1 != t.indexOf("BEGIN") &&
                                    -1 != t.indexOf("END") &&
                                    (this.dSignerIdentifier =
                                        new n.IssuerAndSerialNumber({
                                            cert: t,
                                        }));
                            }),
                            (this.setForContentAndHash = function (t) {
                                void 0 !== t &&
                                    (t.eciObj instanceof
                                        l.asn1.cms.EncapsulatedContentInfo &&
                                        (this.dSignedAttrs.add(
                                            new n.ContentType({
                                                oid: "1.2.840.113549.1.7.1",
                                            })
                                        ),
                                        this.dSignedAttrs.add(
                                            new n.MessageDigest({
                                                eciObj: t.eciObj,
                                                hashAlg: t.hashAlg,
                                            })
                                        )),
                                    void 0 !== t.sdObj &&
                                        t.sdObj instanceof
                                            l.asn1.cms.SignedData &&
                                        -1 ==
                                            t.sdObj.digestAlgNameList
                                                .join(":")
                                                .indexOf(t.hashAlg) &&
                                        t.sdObj.digestAlgNameList.push(
                                            t.hashAlg
                                        ),
                                    "string" == typeof t.hashAlg &&
                                        (this.dDigestAlgorithm =
                                            new r.AlgorithmIdentifier({
                                                name: t.hashAlg,
                                            })));
                            }),
                            (this.sign = function (t, n) {
                                this.dSigAlg = new r.AlgorithmIdentifier({
                                    name: n,
                                });
                                var i = this.dSignedAttrs.getEncodedHex(),
                                    s = xt.getKey(t),
                                    a = new l.crypto.Signature({ alg: n });
                                a.init(s), a.updateHex(i);
                                var o = a.sign();
                                this.dSig = new e.DEROctetString({ hex: o });
                            }),
                            (this.addUnsigned = function (t) {
                                (this.hTLV = null),
                                    (this.dUnsignedAttrs.hTLV = null),
                                    this.dUnsignedAttrs.add(t);
                            }),
                            (this.getEncodedHex = function () {
                                if (
                                    this.dSignedAttrs instanceof
                                        l.asn1.cms.AttributeList &&
                                    0 == this.dSignedAttrs.length()
                                )
                                    throw "SignedAttrs length = 0 (empty)";
                                var t = new e.DERTaggedObject({
                                        obj: this.dSignedAttrs,
                                        tag: "a0",
                                        explicit: !1,
                                    }),
                                    n = null;
                                this.dUnsignedAttrs.length() > 0 &&
                                    (n = new e.DERTaggedObject({
                                        obj: this.dUnsignedAttrs,
                                        tag: "a1",
                                        explicit: !1,
                                    }));
                                var r = [
                                    this.dCMSVersion,
                                    this.dSignerIdentifier,
                                    this.dDigestAlgorithm,
                                    t,
                                    this.dSigAlg,
                                    this.dSig,
                                ];
                                null != n && r.push(n);
                                var i = new e.DERSequence({ array: r });
                                return (
                                    (this.hTLV = i.getEncodedHex()), this.hTLV
                                );
                            });
                    }),
                    f.lang.extend(l.asn1.cms.SignerInfo, l.asn1.ASN1Object),
                    (l.asn1.cms.EncapsulatedContentInfo = function (t) {
                        l.asn1.cms.EncapsulatedContentInfo.superclass.constructor.call(
                            this
                        );
                        var e = l.asn1;
                        l.asn1.cms,
                            l.asn1.x509,
                            (this.dEContentType = new e.DERObjectIdentifier({
                                name: "data",
                            })),
                            (this.dEContent = null),
                            (this.isDetached = !1),
                            (this.eContentValueHex = null),
                            (this.setContentType = function (t) {
                                t.match(/^[0-2][.][0-9.]+$/)
                                    ? (this.dEContentType =
                                          new e.DERObjectIdentifier({ oid: t }))
                                    : (this.dEContentType =
                                          new e.DERObjectIdentifier({
                                              name: t,
                                          }));
                            }),
                            (this.setContentValue = function (t) {
                                void 0 !== t &&
                                    ("string" == typeof t.hex
                                        ? (this.eContentValueHex = t.hex)
                                        : "string" == typeof t.str &&
                                          (this.eContentValueHex = pt(t.str)));
                            }),
                            (this.setContentValueHex = function (t) {
                                this.eContentValueHex = t;
                            }),
                            (this.setContentValueStr = function (t) {
                                this.eContentValueHex = pt(t);
                            }),
                            (this.getEncodedHex = function () {
                                if ("string" != typeof this.eContentValueHex)
                                    throw "eContentValue not yet set";
                                var t = new e.DEROctetString({
                                    hex: this.eContentValueHex,
                                });
                                this.dEContent = new e.DERTaggedObject({
                                    obj: t,
                                    tag: "a0",
                                    explicit: !0,
                                });
                                var n = [this.dEContentType];
                                this.isDetached || n.push(this.dEContent);
                                var r = new e.DERSequence({ array: n });
                                return (
                                    (this.hTLV = r.getEncodedHex()), this.hTLV
                                );
                            });
                    }),
                    f.lang.extend(
                        l.asn1.cms.EncapsulatedContentInfo,
                        l.asn1.ASN1Object
                    ),
                    (l.asn1.cms.ContentInfo = function (t) {
                        l.asn1.cms.ContentInfo.superclass.constructor.call(
                            this
                        );
                        var e = l.asn1,
                            n = (l.asn1.cms, l.asn1.x509);
                        (this.dContentType = null),
                            (this.dContent = null),
                            (this.setContentType = function (t) {
                                "string" == typeof t &&
                                    (this.dContentType = n.OID.name2obj(t));
                            }),
                            (this.getEncodedHex = function () {
                                var t = new e.DERTaggedObject({
                                        obj: this.dContent,
                                        tag: "a0",
                                        explicit: !0,
                                    }),
                                    n = new e.DERSequence({
                                        array: [this.dContentType, t],
                                    });
                                return (
                                    (this.hTLV = n.getEncodedHex()), this.hTLV
                                );
                            }),
                            void 0 !== t &&
                                (t.type && this.setContentType(t.type),
                                t.obj &&
                                    t.obj instanceof e.ASN1Object &&
                                    (this.dContent = t.obj));
                    }),
                    f.lang.extend(l.asn1.cms.ContentInfo, l.asn1.ASN1Object),
                    (l.asn1.cms.SignedData = function (t) {
                        l.asn1.cms.SignedData.superclass.constructor.call(this);
                        var e = l.asn1,
                            n = l.asn1.cms,
                            r = l.asn1.x509;
                        (this.dCMSVersion = new e.DERInteger({ int: 1 })),
                            (this.dDigestAlgs = null),
                            (this.digestAlgNameList = []),
                            (this.dEncapContentInfo =
                                new n.EncapsulatedContentInfo()),
                            (this.dCerts = null),
                            (this.certificateList = []),
                            (this.crlList = []),
                            (this.signerInfoList = [new n.SignerInfo()]),
                            (this.addCertificatesByPEM = function (t) {
                                var n = ht.pemToHex(t),
                                    r = new e.ASN1Object();
                                (r.hTLV = n), this.certificateList.push(r);
                            }),
                            (this.getEncodedHex = function () {
                                if ("string" == typeof this.hTLV)
                                    return this.hTLV;
                                if (null == this.dDigestAlgs) {
                                    for (
                                        var t = [], n = 0;
                                        n < this.digestAlgNameList.length;
                                        n++
                                    ) {
                                        var i = this.digestAlgNameList[n],
                                            s = new r.AlgorithmIdentifier({
                                                name: i,
                                            });
                                        t.push(s);
                                    }
                                    this.dDigestAlgs = new e.DERSet({
                                        array: t,
                                    });
                                }
                                var a = [
                                    this.dCMSVersion,
                                    this.dDigestAlgs,
                                    this.dEncapContentInfo,
                                ];
                                if (
                                    null == this.dCerts &&
                                    this.certificateList.length > 0
                                ) {
                                    var o = new e.DERSet({
                                        array: this.certificateList,
                                    });
                                    this.dCerts = new e.DERTaggedObject({
                                        obj: o,
                                        tag: "a0",
                                        explicit: !1,
                                    });
                                }
                                null != this.dCerts && a.push(this.dCerts);
                                var h = new e.DERSet({
                                    array: this.signerInfoList,
                                });
                                a.push(h);
                                var u = new e.DERSequence({ array: a });
                                return (
                                    (this.hTLV = u.getEncodedHex()), this.hTLV
                                );
                            }),
                            (this.getContentInfo = function () {
                                return (
                                    this.getEncodedHex(),
                                    new n.ContentInfo({
                                        type: "signed-data",
                                        obj: this,
                                    })
                                );
                            }),
                            (this.getContentInfoEncodedHex = function () {
                                return this.getContentInfo().getEncodedHex();
                            }),
                            (this.getPEM = function () {
                                var t = this.getContentInfoEncodedHex();
                                return e.ASN1Util.getPEMStringFromHex(t, "CMS");
                            });
                    }),
                    f.lang.extend(l.asn1.cms.SignedData, l.asn1.ASN1Object),
                    (l.asn1.cms.CMSUtil = new (function () {})()),
                    (l.asn1.cms.CMSUtil.newSignedData = function (t) {
                        var e = l.asn1.cms,
                            n = l.asn1.cades,
                            r = new e.SignedData();
                        if (
                            (r.dEncapContentInfo.setContentValue(t.content),
                            "object" == typeof t.certs)
                        )
                            for (var i = 0; i < t.certs.length; i++)
                                r.addCertificatesByPEM(t.certs[i]);
                        for (
                            r.signerInfoList = [], i = 0;
                            i < t.signerInfos.length;
                            i++
                        ) {
                            var s = t.signerInfos[i],
                                a = new e.SignerInfo();
                            for (attrName in (a.setSignerIdentifier(
                                s.signerCert
                            ),
                            a.setForContentAndHash({
                                sdObj: r,
                                eciObj: r.dEncapContentInfo,
                                hashAlg: s.hashAlg,
                            }),
                            s.sAttr)) {
                                var o = s.sAttr[attrName];
                                if ("SigningTime" == attrName) {
                                    var h = new e.SigningTime(o);
                                    a.dSignedAttrs.add(h);
                                }
                                "SigningCertificate" == attrName &&
                                    ((h = new e.SigningCertificate(o)),
                                    a.dSignedAttrs.add(h)),
                                    "SigningCertificateV2" == attrName &&
                                        ((h = new e.SigningCertificateV2(o)),
                                        a.dSignedAttrs.add(h)),
                                    "SignaturePolicyIdentifier" == attrName &&
                                        ((h = new n.SignaturePolicyIdentifier(
                                            o
                                        )),
                                        a.dSignedAttrs.add(h));
                            }
                            a.sign(s.signerPrvKey, s.sigAlg),
                                r.signerInfoList.push(a);
                        }
                        return r;
                    }),
                    (void 0 !== l && l) || (l = {}),
                    (void 0 !== l.asn1 && l.asn1) || (l.asn1 = {}),
                    (void 0 !== l.asn1.tsp && l.asn1.tsp) || (l.asn1.tsp = {}),
                    (l.asn1.tsp.Accuracy = function (t) {
                        l.asn1.tsp.Accuracy.superclass.constructor.call(this);
                        var e = l.asn1;
                        (this.seconds = null),
                            (this.millis = null),
                            (this.micros = null),
                            (this.getEncodedHex = function () {
                                var t = null,
                                    n = null,
                                    r = null,
                                    i = [];
                                if (
                                    (null != this.seconds &&
                                        ((t = new e.DERInteger({
                                            int: this.seconds,
                                        })),
                                        i.push(t)),
                                    null != this.millis)
                                ) {
                                    var s = new e.DERInteger({
                                        int: this.millis,
                                    });
                                    (n = new e.DERTaggedObject({
                                        obj: s,
                                        tag: "80",
                                        explicit: !1,
                                    })),
                                        i.push(n);
                                }
                                if (null != this.micros) {
                                    var a = new e.DERInteger({
                                        int: this.micros,
                                    });
                                    (r = new e.DERTaggedObject({
                                        obj: a,
                                        tag: "81",
                                        explicit: !1,
                                    })),
                                        i.push(r);
                                }
                                var o = new e.DERSequence({ array: i });
                                return (
                                    (this.hTLV = o.getEncodedHex()), this.hTLV
                                );
                            }),
                            void 0 !== t &&
                                ("number" == typeof t.seconds &&
                                    (this.seconds = t.seconds),
                                "number" == typeof t.millis &&
                                    (this.millis = t.millis),
                                "number" == typeof t.micros &&
                                    (this.micros = t.micros));
                    }),
                    f.lang.extend(l.asn1.tsp.Accuracy, l.asn1.ASN1Object),
                    (l.asn1.tsp.MessageImprint = function (t) {
                        l.asn1.tsp.MessageImprint.superclass.constructor.call(
                            this
                        );
                        var e = l.asn1,
                            n = l.asn1.x509;
                        (this.dHashAlg = null),
                            (this.dHashValue = null),
                            (this.getEncodedHex = function () {
                                return "string" == typeof this.hTLV
                                    ? this.hTLV
                                    : new e.DERSequence({
                                          array: [
                                              this.dHashAlg,
                                              this.dHashValue,
                                          ],
                                      }).getEncodedHex();
                            }),
                            void 0 !== t &&
                                ("string" == typeof t.hashAlg &&
                                    (this.dHashAlg = new n.AlgorithmIdentifier({
                                        name: t.hashAlg,
                                    })),
                                "string" == typeof t.hashValue &&
                                    (this.dHashValue = new e.DEROctetString({
                                        hex: t.hashValue,
                                    })));
                    }),
                    f.lang.extend(l.asn1.tsp.MessageImprint, l.asn1.ASN1Object),
                    (l.asn1.tsp.TimeStampReq = function (t) {
                        l.asn1.tsp.TimeStampReq.superclass.constructor.call(
                            this
                        );
                        var e = l.asn1,
                            n = l.asn1.tsp;
                        (this.dVersion = new e.DERInteger({ int: 1 })),
                            (this.dMessageImprint = null),
                            (this.dPolicy = null),
                            (this.dNonce = null),
                            (this.certReq = !0),
                            (this.setMessageImprint = function (t) {
                                t instanceof l.asn1.tsp.MessageImprint
                                    ? (this.dMessageImprint = t)
                                    : "object" == typeof t &&
                                      (this.dMessageImprint =
                                          new n.MessageImprint(t));
                            }),
                            (this.getEncodedHex = function () {
                                if (null == this.dMessageImprint)
                                    throw "messageImprint shall be specified";
                                var t = [this.dVersion, this.dMessageImprint];
                                null != this.dPolicy && t.push(this.dPolicy),
                                    null != this.dNonce && t.push(this.dNonce),
                                    this.certReq && t.push(new e.DERBoolean());
                                var n = new e.DERSequence({ array: t });
                                return (
                                    (this.hTLV = n.getEncodedHex()), this.hTLV
                                );
                            }),
                            void 0 !== t &&
                                ("object" == typeof t.mi &&
                                    this.setMessageImprint(t.mi),
                                "object" == typeof t.policy &&
                                    (this.dPolicy = new e.DERObjectIdentifier(
                                        t.policy
                                    )),
                                "object" == typeof t.nonce &&
                                    (this.dNonce = new e.DERInteger(t.nonce)),
                                "boolean" == typeof t.certreq &&
                                    (this.certReq = t.certreq));
                    }),
                    f.lang.extend(l.asn1.tsp.TimeStampReq, l.asn1.ASN1Object),
                    (l.asn1.tsp.TSTInfo = function (t) {
                        l.asn1.tsp.TSTInfo.superclass.constructor.call(this);
                        var e = l.asn1,
                            n = l.asn1.x509,
                            r = l.asn1.tsp;
                        if (
                            ((this.dVersion = new e.DERInteger({ int: 1 })),
                            (this.dPolicy = null),
                            (this.dMessageImprint = null),
                            (this.dSerialNumber = null),
                            (this.dGenTime = null),
                            (this.dAccuracy = null),
                            (this.dOrdering = null),
                            (this.dNonce = null),
                            (this.dTsa = null),
                            (this.getEncodedHex = function () {
                                var t = [this.dVersion];
                                if (null == this.dPolicy)
                                    throw "policy shall be specified.";
                                if (
                                    (t.push(this.dPolicy),
                                    null == this.dMessageImprint)
                                )
                                    throw "messageImprint shall be specified.";
                                if (
                                    (t.push(this.dMessageImprint),
                                    null == this.dSerialNumber)
                                )
                                    throw "serialNumber shall be specified.";
                                if (
                                    (t.push(this.dSerialNumber),
                                    null == this.dGenTime)
                                )
                                    throw "genTime shall be specified.";
                                t.push(this.dGenTime),
                                    null != this.dAccuracy &&
                                        t.push(this.dAccuracy),
                                    null != this.dOrdering &&
                                        t.push(this.dOrdering),
                                    null != this.dNonce && t.push(this.dNonce),
                                    null != this.dTsa && t.push(this.dTsa);
                                var n = new e.DERSequence({ array: t });
                                return (
                                    (this.hTLV = n.getEncodedHex()), this.hTLV
                                );
                            }),
                            void 0 !== t)
                        ) {
                            if ("string" == typeof t.policy) {
                                if (!t.policy.match(/^[0-9.]+$/))
                                    throw "policy shall be oid like 0.1.4.134";
                                this.dPolicy = new e.DERObjectIdentifier({
                                    oid: t.policy,
                                });
                            }
                            void 0 !== t.messageImprint &&
                                (this.dMessageImprint = new r.MessageImprint(
                                    t.messageImprint
                                )),
                                void 0 !== t.serialNumber &&
                                    (this.dSerialNumber = new e.DERInteger(
                                        t.serialNumber
                                    )),
                                void 0 !== t.genTime &&
                                    (this.dGenTime = new e.DERGeneralizedTime(
                                        t.genTime
                                    )),
                                "undefined" != typeof t.accuracy &&
                                    (this.dAccuracy = new r.Accuracy(
                                        t.accuracy
                                    )),
                                void 0 !== t.ordering &&
                                    1 == t.ordering &&
                                    (this.dOrdering = new e.DERBoolean()),
                                void 0 !== t.nonce &&
                                    (this.dNonce = new e.DERInteger(t.nonce)),
                                void 0 !== t.tsa &&
                                    (this.dTsa = new n.X500Name(t.tsa));
                        }
                    }),
                    f.lang.extend(l.asn1.tsp.TSTInfo, l.asn1.ASN1Object),
                    (l.asn1.tsp.TimeStampResp = function (t) {
                        l.asn1.tsp.TimeStampResp.superclass.constructor.call(
                            this
                        );
                        var e = l.asn1,
                            n = l.asn1.tsp;
                        (this.dStatus = null),
                            (this.dTST = null),
                            (this.getEncodedHex = function () {
                                if (null == this.dStatus)
                                    throw "status shall be specified";
                                var t = [this.dStatus];
                                null != this.dTST && t.push(this.dTST);
                                var n = new e.DERSequence({ array: t });
                                return (
                                    (this.hTLV = n.getEncodedHex()), this.hTLV
                                );
                            }),
                            void 0 !== t &&
                                ("object" == typeof t.status &&
                                    (this.dStatus = new n.PKIStatusInfo(
                                        t.status
                                    )),
                                void 0 !== t.tst &&
                                    t.tst instanceof l.asn1.ASN1Object &&
                                    (this.dTST = t.tst.getContentInfo()));
                    }),
                    f.lang.extend(l.asn1.tsp.TimeStampResp, l.asn1.ASN1Object),
                    (l.asn1.tsp.PKIStatusInfo = function (t) {
                        l.asn1.tsp.PKIStatusInfo.superclass.constructor.call(
                            this
                        );
                        var e = l.asn1,
                            n = l.asn1.tsp;
                        (this.dStatus = null),
                            (this.dStatusString = null),
                            (this.dFailureInfo = null),
                            (this.getEncodedHex = function () {
                                if (null == this.dStatus)
                                    throw "status shall be specified";
                                var t = [this.dStatus];
                                null != this.dStatusString &&
                                    t.push(this.dStatusString),
                                    null != this.dFailureInfo &&
                                        t.push(this.dFailureInfo);
                                var n = new e.DERSequence({ array: t });
                                return (
                                    (this.hTLV = n.getEncodedHex()), this.hTLV
                                );
                            }),
                            void 0 !== t &&
                                ("object" == typeof t.status &&
                                    (this.dStatus = new n.PKIStatus(t.status)),
                                "object" == typeof t.statstr &&
                                    (this.dStatusString = new n.PKIFreeText({
                                        array: t.statstr,
                                    })),
                                "object" == typeof t.failinfo &&
                                    (this.dFailureInfo = new n.PKIFailureInfo(
                                        t.failinfo
                                    )));
                    }),
                    f.lang.extend(l.asn1.tsp.PKIStatusInfo, l.asn1.ASN1Object),
                    (l.asn1.tsp.PKIStatus = function (t) {
                        l.asn1.tsp.PKIStatus.superclass.constructor.call(this);
                        var e = l.asn1,
                            n = l.asn1.tsp;
                        if (
                            ((this.getEncodedHex = function () {
                                return (
                                    (this.hTLV = this.dStatus.getEncodedHex()),
                                    this.hTLV
                                );
                            }),
                            void 0 !== t)
                        )
                            if (void 0 !== t.name) {
                                var r = n.PKIStatus.valueList;
                                if (void 0 === r[t.name])
                                    throw "name undefined: " + t.name;
                                this.dStatus = new e.DERInteger({
                                    int: r[t.name],
                                });
                            } else this.dStatus = new e.DERInteger(t);
                    }),
                    f.lang.extend(l.asn1.tsp.PKIStatus, l.asn1.ASN1Object),
                    (l.asn1.tsp.PKIStatus.valueList = {
                        granted: 0,
                        grantedWithMods: 1,
                        rejection: 2,
                        waiting: 3,
                        revocationWarning: 4,
                        revocationNotification: 5,
                    }),
                    (l.asn1.tsp.PKIFreeText = function (t) {
                        l.asn1.tsp.PKIFreeText.superclass.constructor.call(
                            this
                        );
                        var e = l.asn1;
                        (this.textList = []),
                            (this.getEncodedHex = function () {
                                for (
                                    var t = [], n = 0;
                                    n < this.textList.length;
                                    n++
                                )
                                    t.push(
                                        new e.DERUTF8String({
                                            str: this.textList[n],
                                        })
                                    );
                                var r = new e.DERSequence({ array: t });
                                return (
                                    (this.hTLV = r.getEncodedHex()), this.hTLV
                                );
                            }),
                            void 0 !== t &&
                                "object" == typeof t.array &&
                                (this.textList = t.array);
                    }),
                    f.lang.extend(l.asn1.tsp.PKIFreeText, l.asn1.ASN1Object),
                    (l.asn1.tsp.PKIFailureInfo = function (t) {
                        l.asn1.tsp.PKIFailureInfo.superclass.constructor.call(
                            this
                        );
                        var e = l.asn1,
                            n = l.asn1.tsp;
                        if (
                            ((this.value = null),
                            (this.getEncodedHex = function () {
                                if (null == this.value)
                                    throw "value shall be specified";
                                var t = new Number(this.value).toString(2),
                                    n = new e.DERBitString();
                                return (
                                    n.setByBinaryString(t),
                                    (this.hTLV = n.getEncodedHex()),
                                    this.hTLV
                                );
                            }),
                            void 0 !== t)
                        )
                            if ("string" == typeof t.name) {
                                var r = n.PKIFailureInfo.valueList;
                                if (void 0 === r[t.name])
                                    throw "name undefined: " + t.name;
                                this.value = r[t.name];
                            } else
                                "number" == typeof t.int &&
                                    (this.value = t.int);
                    }),
                    f.lang.extend(l.asn1.tsp.PKIFailureInfo, l.asn1.ASN1Object),
                    (l.asn1.tsp.PKIFailureInfo.valueList = {
                        badAlg: 0,
                        badRequest: 2,
                        badDataFormat: 5,
                        timeNotAvailable: 14,
                        unacceptedPolicy: 15,
                        unacceptedExtension: 16,
                        addInfoNotAvailable: 17,
                        systemFailure: 25,
                    }),
                    (l.asn1.tsp.AbstractTSAAdapter = function (t) {
                        this.getTSTHex = function (t, e) {
                            throw "not implemented yet";
                        };
                    }),
                    (l.asn1.tsp.SimpleTSAAdapter = function (t) {
                        l.asn1.tsp.SimpleTSAAdapter.superclass.constructor.call(
                            this
                        ),
                            (this.params = null),
                            (this.serial = 0),
                            (this.getTSTHex = function (t, e) {
                                var n = l.crypto.Util.hashHex(t, e);
                                (this.params.tstInfo.messageImprint = {
                                    hashAlg: e,
                                    hashValue: n,
                                }),
                                    (this.params.tstInfo.serialNumber = {
                                        int: this.serial++,
                                    });
                                var r = Math.floor(1e9 * Math.random());
                                return (
                                    (this.params.tstInfo.nonce = { int: r }),
                                    l.asn1.tsp.TSPUtil.newTimeStampToken(
                                        this.params
                                    ).getContentInfoEncodedHex()
                                );
                            }),
                            void 0 !== t && (this.params = t);
                    }),
                    f.lang.extend(
                        l.asn1.tsp.SimpleTSAAdapter,
                        l.asn1.tsp.AbstractTSAAdapter
                    ),
                    (l.asn1.tsp.FixedTSAAdapter = function (t) {
                        l.asn1.tsp.FixedTSAAdapter.superclass.constructor.call(
                            this
                        ),
                            (this.params = null),
                            (this.getTSTHex = function (t, e) {
                                var n = l.crypto.Util.hashHex(t, e);
                                return (
                                    (this.params.tstInfo.messageImprint = {
                                        hashAlg: e,
                                        hashValue: n,
                                    }),
                                    l.asn1.tsp.TSPUtil.newTimeStampToken(
                                        this.params
                                    ).getContentInfoEncodedHex()
                                );
                            }),
                            void 0 !== t && (this.params = t);
                    }),
                    f.lang.extend(
                        l.asn1.tsp.FixedTSAAdapter,
                        l.asn1.tsp.AbstractTSAAdapter
                    ),
                    (l.asn1.tsp.TSPUtil = new (function () {})()),
                    (l.asn1.tsp.TSPUtil.newTimeStampToken = function (t) {
                        var e = l.asn1.cms,
                            n = l.asn1.tsp,
                            r = new e.SignedData(),
                            i = new n.TSTInfo(t.tstInfo).getEncodedHex();
                        if (
                            (r.dEncapContentInfo.setContentValue({ hex: i }),
                            r.dEncapContentInfo.setContentType("tstinfo"),
                            "object" == typeof t.certs)
                        )
                            for (var s = 0; s < t.certs.length; s++)
                                r.addCertificatesByPEM(t.certs[s]);
                        var a = r.signerInfoList[0];
                        a.setSignerIdentifier(t.signerCert),
                            a.setForContentAndHash({
                                sdObj: r,
                                eciObj: r.dEncapContentInfo,
                                hashAlg: t.hashAlg,
                            });
                        var o = new e.SigningCertificate({
                            array: [t.signerCert],
                        });
                        return (
                            a.dSignedAttrs.add(o),
                            a.sign(t.signerPrvKey, t.sigAlg),
                            r
                        );
                    }),
                    (l.asn1.tsp.TSPUtil.parseTimeStampReq = function (t) {
                        var e = { certreq: !1 },
                            n = ht.getPosArrayOfChildren_AtObj(t, 0);
                        if (n.length < 2)
                            throw "TimeStampReq must have at least 2 items";
                        var r = ht.getHexOfTLV_AtObj(t, n[1]);
                        e.mi = l.asn1.tsp.TSPUtil.parseMessageImprint(r);
                        for (var i = 2; i < n.length; i++) {
                            var s = n[i],
                                a = t.substr(s, 2);
                            if ("06" == a) {
                                var o = ht.getHexOfV_AtObj(t, s);
                                e.policy = ht.hextooidstr(o);
                            }
                            "02" == a && (e.nonce = ht.getHexOfV_AtObj(t, s)),
                                "01" == a && (e.certreq = !0);
                        }
                        return e;
                    }),
                    (l.asn1.tsp.TSPUtil.parseMessageImprint = function (t) {
                        var e = {};
                        if ("30" != t.substr(0, 2))
                            throw "head of messageImprint hex shall be '30'";
                        ht.getPosArrayOfChildren_AtObj(t, 0);
                        var n = ht.getDecendantIndexByNthList(t, 0, [0, 0]),
                            r = ht.getHexOfV_AtObj(t, n),
                            i = ht.hextooidstr(r),
                            s = l.asn1.x509.OID.oid2name(i);
                        if ("" == s) throw "hashAlg name undefined: " + i;
                        var a = s,
                            o = ht.getDecendantIndexByNthList(t, 0, [1]);
                        return (
                            (e.hashAlg = a),
                            (e.hashValue = ht.getHexOfV_AtObj(t, o)),
                            e
                        );
                    }),
                    (void 0 !== l && l) || (l = {}),
                    (void 0 !== l.asn1 && l.asn1) || (l.asn1 = {}),
                    (void 0 !== l.asn1.cades && l.asn1.cades) ||
                        (l.asn1.cades = {}),
                    (l.asn1.cades.SignaturePolicyIdentifier = function (t) {
                        l.asn1.cades.SignaturePolicyIdentifier.superclass.constructor.call(
                            this
                        ),
                            (this.attrTypeOid = "1.2.840.113549.1.9.16.2.15");
                        var e = l.asn1,
                            n = l.asn1.cades;
                        if (
                            void 0 !== t &&
                            "string" == typeof t.oid &&
                            "object" == typeof t.hash
                        ) {
                            var r = new e.DERObjectIdentifier({ oid: t.oid }),
                                i = new n.OtherHashAlgAndValue(t.hash),
                                s = new e.DERSequence({ array: [r, i] });
                            this.valueList = [s];
                        }
                    }),
                    f.lang.extend(
                        l.asn1.cades.SignaturePolicyIdentifier,
                        l.asn1.cms.Attribute
                    ),
                    (l.asn1.cades.OtherHashAlgAndValue = function (t) {
                        l.asn1.cades.OtherHashAlgAndValue.superclass.constructor.call(
                            this
                        );
                        var e = l.asn1,
                            n = l.asn1.x509;
                        (this.dAlg = null),
                            (this.dHash = null),
                            (this.getEncodedHex = function () {
                                var t = new e.DERSequence({
                                    array: [this.dAlg, this.dHash],
                                });
                                return (
                                    (this.hTLV = t.getEncodedHex()), this.hTLV
                                );
                            }),
                            void 0 !== t &&
                                "string" == typeof t.alg &&
                                "string" == typeof t.hash &&
                                ((this.dAlg = new n.AlgorithmIdentifier({
                                    name: t.alg,
                                })),
                                (this.dHash = new e.DEROctetString({
                                    hex: t.hash,
                                })));
                    }),
                    f.lang.extend(
                        l.asn1.cades.OtherHashAlgAndValue,
                        l.asn1.ASN1Object
                    ),
                    (l.asn1.cades.SignatureTimeStamp = function (t) {
                        l.asn1.cades.SignatureTimeStamp.superclass.constructor.call(
                            this
                        ),
                            (this.attrTypeOid = "1.2.840.113549.1.9.16.2.14"),
                            (this.tstHex = null);
                        var e = l.asn1;
                        if (void 0 !== t) {
                            if (void 0 !== t.res)
                                if (
                                    "string" == typeof t.res &&
                                    t.res.match(/^[0-9A-Fa-f]+$/)
                                );
                                else if (!(t.res instanceof l.asn1.ASN1Object))
                                    throw "res param shall be ASN1Object or hex string";
                            if (void 0 !== t.tst)
                                if (
                                    "string" == typeof t.tst &&
                                    t.tst.match(/^[0-9A-Fa-f]+$/)
                                ) {
                                    var n = new e.ASN1Object();
                                    (this.tstHex = t.tst),
                                        (n.hTLV = this.tstHex),
                                        n.getEncodedHex(),
                                        (this.valueList = [n]);
                                } else if (
                                    !(t.tst instanceof l.asn1.ASN1Object)
                                )
                                    throw "tst param shall be ASN1Object or hex string";
                        }
                    }),
                    f.lang.extend(
                        l.asn1.cades.SignatureTimeStamp,
                        l.asn1.cms.Attribute
                    ),
                    (l.asn1.cades.CompleteCertificateRefs = function (t) {
                        l.asn1.cades.CompleteCertificateRefs.superclass.constructor.call(
                            this
                        ),
                            (this.attrTypeOid = "1.2.840.113549.1.9.16.2.21"),
                            l.asn1;
                        var e = l.asn1.cades;
                        (this.setByArray = function (t) {
                            this.valueList = [];
                            for (var n = 0; n < t.length; n++) {
                                var r = new e.OtherCertID(t[n]);
                                this.valueList.push(r);
                            }
                        }),
                            void 0 !== t &&
                                "object" == typeof t &&
                                "number" == typeof t.length &&
                                this.setByArray(t);
                    }),
                    f.lang.extend(
                        l.asn1.cades.CompleteCertificateRefs,
                        l.asn1.cms.Attribute
                    ),
                    (l.asn1.cades.OtherCertID = function (t) {
                        l.asn1.cades.OtherCertID.superclass.constructor.call(
                            this
                        );
                        var e = l.asn1,
                            n = l.asn1.cms,
                            r = l.asn1.cades;
                        (this.hasIssuerSerial = !0),
                            (this.dOtherCertHash = null),
                            (this.dIssuerSerial = null),
                            (this.setByCertPEM = function (t) {
                                (this.dOtherCertHash = new r.OtherHash(t)),
                                    this.hasIssuerSerial &&
                                        (this.dIssuerSerial =
                                            new n.IssuerAndSerialNumber(t));
                            }),
                            (this.getEncodedHex = function () {
                                if (null != this.hTLV) return this.hTLV;
                                if (null == this.dOtherCertHash)
                                    throw "otherCertHash not set";
                                var t = [this.dOtherCertHash];
                                null != this.dIssuerSerial &&
                                    t.push(this.dIssuerSerial);
                                var n = new e.DERSequence({ array: t });
                                return (
                                    (this.hTLV = n.getEncodedHex()), this.hTLV
                                );
                            }),
                            void 0 !== t &&
                                ("string" == typeof t &&
                                    -1 != t.indexOf("-----BEGIN ") &&
                                    this.setByCertPEM(t),
                                "object" == typeof t &&
                                    (!1 === t.hasis &&
                                        (this.hasIssuerSerial = !1),
                                    "string" == typeof t.cert &&
                                        this.setByCertPEM(t.cert)));
                    }),
                    f.lang.extend(l.asn1.cades.OtherCertID, l.asn1.ASN1Object),
                    (l.asn1.cades.OtherHash = function (t) {
                        l.asn1.cades.OtherHash.superclass.constructor.call(
                            this
                        );
                        var e = l.asn1,
                            n = l.asn1.cades;
                        if (
                            ((this.alg = "sha256"),
                            (this.dOtherHash = null),
                            (this.setByCertPEM = function (t) {
                                if (-1 == t.indexOf("-----BEGIN "))
                                    throw "certPEM not to seem PEM format";
                                var e = ht.pemToHex(t),
                                    r = l.crypto.Util.hashHex(e, this.alg);
                                this.dOtherHash = new n.OtherHashAlgAndValue({
                                    alg: this.alg,
                                    hash: r,
                                });
                            }),
                            (this.getEncodedHex = function () {
                                if (null == this.dOtherHash)
                                    throw "OtherHash not set";
                                return this.dOtherHash.getEncodedHex();
                            }),
                            void 0 !== t)
                        )
                            if ("string" == typeof t)
                                if (-1 != t.indexOf("-----BEGIN "))
                                    this.setByCertPEM(t);
                                else {
                                    if (!t.match(/^[0-9A-Fa-f]+$/))
                                        throw "unsupported string value for params";
                                    this.dOtherHash = new e.DEROctetString({
                                        hex: t,
                                    });
                                }
                            else
                                "object" == typeof t &&
                                    ("string" == typeof t.cert
                                        ? ("string" == typeof t.alg &&
                                              (this.alg = t.alg),
                                          this.setByCertPEM(t.cert))
                                        : (this.dOtherHash =
                                              new n.OtherHashAlgAndValue(t)));
                    }),
                    f.lang.extend(l.asn1.cades.OtherHash, l.asn1.ASN1Object),
                    (l.asn1.cades.CAdESUtil = new (function () {})()),
                    (l.asn1.cades.CAdESUtil.addSigTS = function (t, e, n) {}),
                    (l.asn1.cades.CAdESUtil.parseSignedDataForAddingUnsigned =
                        function (t) {
                            var e = l.asn1,
                                n = l.asn1.cms,
                                r = l.asn1.cades.CAdESUtil,
                                i = {};
                            if (
                                "06092a864886f70d010702" !=
                                ht.getDecendantHexTLVByNthList(t, 0, [0])
                            )
                                throw "hex is not CMS SignedData";
                            var s = ht.getDecendantIndexByNthList(t, 0, [1, 0]),
                                a = ht.getPosArrayOfChildren_AtObj(t, s);
                            if (a.length < 4)
                                throw "num of SignedData elem shall be 4 at least";
                            var o = a.shift();
                            i.version = ht.getHexOfTLV_AtObj(t, o);
                            var h = a.shift();
                            i.algs = ht.getHexOfTLV_AtObj(t, h);
                            var u = a.shift();
                            (i.encapcontent = ht.getHexOfTLV_AtObj(t, u)),
                                (i.certs = null),
                                (i.revs = null),
                                (i.si = []);
                            var c = a.shift();
                            "a0" == t.substr(c, 2) &&
                                ((i.certs = ht.getHexOfTLV_AtObj(t, c)),
                                (c = a.shift())),
                                "a1" == t.substr(c, 2) &&
                                    ((i.revs = ht.getHexOfTLV_AtObj(t, c)),
                                    (c = a.shift()));
                            var f = c;
                            if ("31" != t.substr(f, 2))
                                throw "Can't find signerInfos";
                            for (
                                var d = ht.getPosArrayOfChildren_AtObj(t, f),
                                    g = 0;
                                g < d.length;
                                g++
                            ) {
                                var p = d[g],
                                    y = r.parseSignerInfoForAddingUnsigned(
                                        t,
                                        p,
                                        g
                                    );
                                i.si[g] = y;
                            }
                            var m = null;
                            for (
                                i.obj = new n.SignedData(),
                                    (m = new e.ASN1Object()).hTLV = i.version,
                                    i.obj.dCMSVersion = m,
                                    (m = new e.ASN1Object()).hTLV = i.algs,
                                    i.obj.dDigestAlgs = m,
                                    (m = new e.ASN1Object()).hTLV =
                                        i.encapcontent,
                                    i.obj.dEncapContentInfo = m,
                                    (m = new e.ASN1Object()).hTLV = i.certs,
                                    i.obj.dCerts = m,
                                    i.obj.signerInfoList = [],
                                    g = 0;
                                g < i.si.length;
                                g++
                            )
                                i.obj.signerInfoList.push(i.si[g].obj);
                            return i;
                        }),
                    (l.asn1.cades.CAdESUtil.parseSignerInfoForAddingUnsigned =
                        function (t, e, n) {
                            var r = l.asn1,
                                i = l.asn1.cms,
                                s = {},
                                a = ht.getPosArrayOfChildren_AtObj(t, e);
                            if (6 != a.length)
                                throw "not supported items for SignerInfo (!=6)";
                            var o = a.shift();
                            s.version = ht.getHexOfTLV_AtObj(t, o);
                            var h = a.shift();
                            s.si = ht.getHexOfTLV_AtObj(t, h);
                            var u = a.shift();
                            s.digalg = ht.getHexOfTLV_AtObj(t, u);
                            var c = a.shift();
                            s.sattrs = ht.getHexOfTLV_AtObj(t, c);
                            var f = a.shift();
                            s.sigalg = ht.getHexOfTLV_AtObj(t, f);
                            var d = a.shift();
                            (s.sig = ht.getHexOfTLV_AtObj(t, d)),
                                (s.sigval = ht.getHexOfV_AtObj(t, d));
                            var g = null;
                            return (
                                (s.obj = new i.SignerInfo()),
                                ((g = new r.ASN1Object()).hTLV = s.version),
                                (s.obj.dCMSVersion = g),
                                ((g = new r.ASN1Object()).hTLV = s.si),
                                (s.obj.dSignerIdentifier = g),
                                ((g = new r.ASN1Object()).hTLV = s.digalg),
                                (s.obj.dDigestAlgorithm = g),
                                ((g = new r.ASN1Object()).hTLV = s.sattrs),
                                (s.obj.dSignedAttrs = g),
                                ((g = new r.ASN1Object()).hTLV = s.sigalg),
                                (s.obj.dSigAlg = g),
                                ((g = new r.ASN1Object()).hTLV = s.sig),
                                (s.obj.dSig = g),
                                (s.obj.dUnsignedAttrs = new i.AttributeList()),
                                s
                            );
                        }),
                    (void 0 !== l.asn1.csr && l.asn1.csr) || (l.asn1.csr = {}),
                    (l.asn1.csr.CertificationRequest = function (t) {
                        l.asn1.csr.CertificationRequest.superclass.constructor.call(
                            this
                        ),
                            (this.sign = function (t, e) {
                                null == this.prvKey && (this.prvKey = e),
                                    (this.asn1SignatureAlg =
                                        new l.asn1.x509.AlgorithmIdentifier({
                                            name: t,
                                        })),
                                    (sig = new l.crypto.Signature({ alg: t })),
                                    sig.initSign(this.prvKey),
                                    sig.updateHex(
                                        this.asn1CSRInfo.getEncodedHex()
                                    ),
                                    (this.hexSig = sig.sign()),
                                    (this.asn1Sig = new l.asn1.DERBitString({
                                        hex: "00" + this.hexSig,
                                    }));
                                var n = new l.asn1.DERSequence({
                                    array: [
                                        this.asn1CSRInfo,
                                        this.asn1SignatureAlg,
                                        this.asn1Sig,
                                    ],
                                });
                                (this.hTLV = n.getEncodedHex()),
                                    (this.isModified = !1);
                            }),
                            (this.getPEMString = function () {
                                return l.asn1.ASN1Util.getPEMStringFromHex(
                                    this.getEncodedHex(),
                                    "CERTIFICATE REQUEST"
                                );
                            }),
                            (this.getEncodedHex = function () {
                                if (0 == this.isModified && null != this.hTLV)
                                    return this.hTLV;
                                throw "not signed yet";
                            }),
                            void 0 !== t &&
                                void 0 !== t.csrinfo &&
                                (this.asn1CSRInfo = t.csrinfo);
                    }),
                    f.lang.extend(
                        l.asn1.csr.CertificationRequest,
                        l.asn1.ASN1Object
                    ),
                    (l.asn1.csr.CertificationRequestInfo = function (t) {
                        l.asn1.csr.CertificationRequestInfo.superclass.constructor.call(
                            this
                        ),
                            (this._initialize = function () {
                                (this.asn1Array = new Array()),
                                    (this.asn1Version = new l.asn1.DERInteger({
                                        int: 0,
                                    })),
                                    (this.asn1Subject = null),
                                    (this.asn1SubjPKey = null),
                                    (this.extensionsArray = new Array());
                            }),
                            (this.setSubjectByParam = function (t) {
                                this.asn1Subject = new l.asn1.x509.X500Name(t);
                            }),
                            (this.setSubjectPublicKeyByGetKey = function (t) {
                                var e = xt.getKey(t);
                                this.asn1SubjPKey =
                                    new l.asn1.x509.SubjectPublicKeyInfo(e);
                            }),
                            (this.appendExtensionByName = function (t, e) {
                                l.asn1.x509.Extension.appendByNameToArray(
                                    t,
                                    e,
                                    this.extensionsArray
                                );
                            }),
                            (this.getEncodedHex = function () {
                                if (
                                    ((this.asn1Array = new Array()),
                                    this.asn1Array.push(this.asn1Version),
                                    this.asn1Array.push(this.asn1Subject),
                                    this.asn1Array.push(this.asn1SubjPKey),
                                    this.extensionsArray.length > 0)
                                ) {
                                    var t = new l.asn1.DERSequence({
                                            array: this.extensionsArray,
                                        }),
                                        e = new l.asn1.DERSet({ array: [t] }),
                                        n = new l.asn1.DERSequence({
                                            array: [
                                                new l.asn1.DERObjectIdentifier({
                                                    oid: "1.2.840.113549.1.9.14",
                                                }),
                                                e,
                                            ],
                                        }),
                                        r = new l.asn1.DERTaggedObject({
                                            explicit: !0,
                                            tag: "a0",
                                            obj: n,
                                        });
                                    this.asn1Array.push(r);
                                } else
                                    (r = new l.asn1.DERTaggedObject({
                                        explicit: !1,
                                        tag: "a0",
                                        obj: new l.asn1.DERNull(),
                                    })),
                                        this.asn1Array.push(r);
                                var i = new l.asn1.DERSequence({
                                    array: this.asn1Array,
                                });
                                return (
                                    (this.hTLV = i.getEncodedHex()),
                                    (this.isModified = !1),
                                    this.hTLV
                                );
                            }),
                            this._initialize();
                    }),
                    f.lang.extend(
                        l.asn1.csr.CertificationRequestInfo,
                        l.asn1.ASN1Object
                    ),
                    (l.asn1.csr.CSRUtil = new (function () {})()),
                    (l.asn1.csr.CSRUtil.newCSRPEM = function (t) {
                        var e = l.asn1.csr;
                        if (void 0 === t.subject)
                            throw "parameter subject undefined";
                        if (void 0 === t.sbjpubkey)
                            throw "parameter sbjpubkey undefined";
                        if (void 0 === t.sigalg)
                            throw "parameter sigalg undefined";
                        if (void 0 === t.sbjprvkey)
                            throw "parameter sbjpubkey undefined";
                        var n = new e.CertificationRequestInfo();
                        if (
                            (n.setSubjectByParam(t.subject),
                            n.setSubjectPublicKeyByGetKey(t.sbjpubkey),
                            void 0 !== t.ext && void 0 !== t.ext.length)
                        )
                            for (var r = 0; r < t.ext.length; r++)
                                for (key in t.ext[r])
                                    n.appendExtensionByName(key, t.ext[r][key]);
                        var i = new e.CertificationRequest({ csrinfo: n }),
                            s = xt.getKey(t.sbjprvkey);
                        return i.sign(t.sigalg, s), i.getPEMString();
                    }),
                    (l.asn1.csr.CSRUtil.getInfo = function (t) {
                        var e = { subject: {}, pubkey: {} };
                        if (-1 == t.indexOf("-----BEGIN CERTIFICATE REQUEST"))
                            throw "argument is not PEM file";
                        var n = ht.pemToHex(t, "CERTIFICATE REQUEST");
                        return (
                            (e.subject.hex = ht.getDecendantHexTLVByNthList(
                                n,
                                0,
                                [0, 1]
                            )),
                            (e.subject.name = Bt.hex2dn(e.subject.hex)),
                            (e.pubkey.hex = ht.getDecendantHexTLVByNthList(
                                n,
                                0,
                                [0, 2]
                            )),
                            (e.pubkey.obj = xt.getKey(
                                e.pubkey.hex,
                                null,
                                "pkcs8pub"
                            )),
                            e
                        );
                    }),
                    (void 0 !== l && l) || (l = {}),
                    (void 0 !== l.asn1 && l.asn1) || (l.asn1 = {}),
                    (void 0 !== l.asn1.ocsp && l.asn1.ocsp) ||
                        (l.asn1.ocsp = {}),
                    (l.asn1.ocsp.DEFAULT_HASH = "sha1"),
                    (l.asn1.ocsp.CertID = function (t) {
                        l.asn1.ocsp.CertID.superclass.constructor.call(this);
                        var e = l.asn1,
                            n = l.asn1.x509;
                        if (
                            ((this.dHashAlg = null),
                            (this.dIssuerNameHash = null),
                            (this.dIssuerKeyHash = null),
                            (this.dSerialNumber = null),
                            (this.setByValue = function (t, r, i, s) {
                                void 0 === s && (s = l.asn1.ocsp.DEFAULT_HASH),
                                    (this.dHashAlg = new n.AlgorithmIdentifier({
                                        name: s,
                                    })),
                                    (this.dIssuerNameHash =
                                        new e.DEROctetString({ hex: t })),
                                    (this.dIssuerKeyHash = new e.DEROctetString(
                                        { hex: r }
                                    )),
                                    (this.dSerialNumber = new e.DERInteger({
                                        hex: i,
                                    }));
                            }),
                            (this.setByCert = function (t, e, n) {
                                void 0 === n && (n = l.asn1.ocsp.DEFAULT_HASH);
                                var r = new Bt();
                                r.readCertPEM(e);
                                var i = new Bt();
                                i.readCertPEM(t);
                                var s =
                                        Bt.getPublicKeyInfoPropOfCertPEM(
                                            t
                                        ).keyhex,
                                    a = r.getSerialNumberHex(),
                                    o = l.crypto.Util.hashHex(
                                        i.getSubjectHex(),
                                        n
                                    ),
                                    h = l.crypto.Util.hashHex(s, n);
                                this.setByValue(o, h, a, n),
                                    (this.hoge = r.getSerialNumberHex());
                            }),
                            (this.getEncodedHex = function () {
                                if (
                                    null === this.dHashAlg &&
                                    null === this.dIssuerNameHash &&
                                    null === this.dIssuerKeyHash &&
                                    null === this.dSerialNumber
                                )
                                    throw "not yet set values";
                                var t = [
                                        this.dHashAlg,
                                        this.dIssuerNameHash,
                                        this.dIssuerKeyHash,
                                        this.dSerialNumber,
                                    ],
                                    n = new e.DERSequence({ array: t });
                                return (
                                    (this.hTLV = n.getEncodedHex()), this.hTLV
                                );
                            }),
                            void 0 !== t)
                        ) {
                            var r = t;
                            if (
                                void 0 !== r.issuerCert &&
                                void 0 !== r.subjectCert
                            ) {
                                var i = l.asn1.ocsp.DEFAULT_HASH;
                                void 0 === r.alg && (i = void 0),
                                    this.setByCert(
                                        r.issuerCert,
                                        r.subjectCert,
                                        i
                                    );
                            } else {
                                if (
                                    void 0 === r.namehash ||
                                    void 0 === r.keyhash ||
                                    void 0 === r.serial
                                )
                                    throw "invalid constructor arguments";
                                (i = l.asn1.ocsp.DEFAULT_HASH),
                                    void 0 === r.alg && (i = void 0),
                                    this.setByValue(
                                        r.namehash,
                                        r.keyhash,
                                        r.serial,
                                        i
                                    );
                            }
                        }
                    }),
                    f.lang.extend(l.asn1.ocsp.CertID, l.asn1.ASN1Object),
                    (l.asn1.ocsp.Request = function (t) {
                        if (
                            (l.asn1.ocsp.Request.superclass.constructor.call(
                                this
                            ),
                            (this.dReqCert = null),
                            (this.dExt = null),
                            (this.getEncodedHex = function () {
                                var t = [];
                                if (null === this.dReqCert)
                                    throw "reqCert not set";
                                t.push(this.dReqCert);
                                var e = new l.asn1.DERSequence({ array: t });
                                return (
                                    (this.hTLV = e.getEncodedHex()), this.hTLV
                                );
                            }),
                            void 0 !== t)
                        ) {
                            var e = new l.asn1.ocsp.CertID(t);
                            this.dReqCert = e;
                        }
                    }),
                    f.lang.extend(l.asn1.ocsp.Request, l.asn1.ASN1Object),
                    (l.asn1.ocsp.TBSRequest = function (t) {
                        l.asn1.ocsp.TBSRequest.superclass.constructor.call(
                            this
                        ),
                            (this.version = 0),
                            (this.dRequestorName = null),
                            (this.dRequestList = []),
                            (this.dRequestExt = null),
                            (this.setRequestListByParam = function (t) {
                                for (var e = [], n = 0; n < t.length; n++) {
                                    var r = new l.asn1.ocsp.Request(t[0]);
                                    e.push(r);
                                }
                                this.dRequestList = e;
                            }),
                            (this.getEncodedHex = function () {
                                var t = [];
                                if (0 !== this.version)
                                    throw (
                                        "not supported version: " + this.version
                                    );
                                if (null !== this.dRequestorName)
                                    throw "requestorName not supported";
                                var e = new l.asn1.DERSequence({
                                    array: this.dRequestList,
                                });
                                if ((t.push(e), null !== this.dRequestExt))
                                    throw "requestExtensions not supported";
                                var n = new l.asn1.DERSequence({ array: t });
                                return (
                                    (this.hTLV = n.getEncodedHex()), this.hTLV
                                );
                            }),
                            void 0 !== t &&
                                void 0 !== t.reqList &&
                                this.setRequestListByParam(t.reqList);
                    }),
                    f.lang.extend(l.asn1.ocsp.TBSRequest, l.asn1.ASN1Object),
                    (l.asn1.ocsp.OCSPRequest = function (t) {
                        if (
                            (l.asn1.ocsp.OCSPRequest.superclass.constructor.call(
                                this
                            ),
                            (this.dTbsRequest = null),
                            (this.dOptionalSignature = null),
                            (this.getEncodedHex = function () {
                                var t = [];
                                if (null === this.dTbsRequest)
                                    throw "tbsRequest not set";
                                if (
                                    (t.push(this.dTbsRequest),
                                    null !== this.dOptionalSignature)
                                )
                                    throw "optionalSignature not supported";
                                var e = new l.asn1.DERSequence({ array: t });
                                return (
                                    (this.hTLV = e.getEncodedHex()), this.hTLV
                                );
                            }),
                            void 0 !== t && void 0 !== t.reqList)
                        ) {
                            var e = new l.asn1.ocsp.TBSRequest(t);
                            this.dTbsRequest = e;
                        }
                    }),
                    f.lang.extend(l.asn1.ocsp.OCSPRequest, l.asn1.ASN1Object),
                    (l.asn1.ocsp.OCSPUtil = {}),
                    (l.asn1.ocsp.OCSPUtil.getRequestHex = function (t, e, n) {
                        void 0 === n && (n = l.asn1.ocsp.DEFAULT_HASH);
                        var r = { alg: n, issuerCert: t, subjectCert: e };
                        return new l.asn1.ocsp.OCSPRequest({
                            reqList: [r],
                        }).getEncodedHex();
                    }),
                    (l.asn1.ocsp.OCSPUtil.getOCSPResponseInfo = function (t) {
                        var e = {};
                        try {
                            var n = ht.getVbyList(t, 0, [0], "0a");
                            e.responseStatus = parseInt(n, 16);
                        } catch (t) {}
                        if (0 !== e.responseStatus) return e;
                        try {
                            var r = ht.getDecendantIndexByNthList(
                                t,
                                0,
                                [1, 0, 1, 0, 0, 2, 0, 1]
                            );
                            "80" === t.substr(r, 2)
                                ? (e.certStatus = "good")
                                : "a1" === t.substr(r, 2)
                                ? ((e.certStatus = "revoked"),
                                  (e.revocationTime = yt(
                                      ht.getDecendantHexVByNthList(t, r, [0])
                                  )))
                                : "82" === t.substr(r, 2) &&
                                  (e.certStatus = "unknown");
                        } catch (t) {}
                        try {
                            var i = ht.getDecendantIndexByNthList(
                                t,
                                0,
                                [1, 0, 1, 0, 0, 2, 0, 2]
                            );
                            e.thisUpdate = yt(ht.getHexOfV_AtObj(t, i));
                        } catch (t) {}
                        try {
                            var s = ht.getDecendantIndexByNthList(
                                t,
                                0,
                                [1, 0, 1, 0, 0, 2, 0, 3]
                            );
                            "a0" === t.substr(s, 2) &&
                                (e.nextUpdate = yt(
                                    ht.getDecendantHexVByNthList(t, s, [0])
                                ));
                        } catch (t) {}
                        return e;
                    }),
                    (void 0 !== l && l) || (l = {}),
                    (void 0 !== l.lang && l.lang) || (l.lang = {}),
                    (l.lang.String = function () {}),
                    "function" == typeof e
                        ? ((at = function (t) {
                              return lt(new e(t, "utf8").toString("base64"));
                          }),
                          (ot = function (t) {
                              return new e(ft(t), "base64").toString("utf8");
                          }))
                        : ((at = function (t) {
                              return dt(St(bt(t)));
                          }),
                          (ot = function (t) {
                              return decodeURIComponent(At(gt(t)));
                          })),
                    (l.lang.String.isInteger = function (t) {
                        return !!t.match(/^[0-9]+$/) || !!t.match(/^-[0-9]+$/);
                    }),
                    (l.lang.String.isHex = function (t) {
                        return !(
                            t.length % 2 != 0 ||
                            (!t.match(/^[0-9a-f]+$/) && !t.match(/^[0-9A-F]+$/))
                        );
                    }),
                    (l.lang.String.isBase64 = function (t) {
                        return !(
                            !(t = t.replace(/\s+/g, "")).match(
                                /^[0-9A-Za-z+\/]+={0,3}$/
                            ) || t.length % 4 != 0
                        );
                    }),
                    (l.lang.String.isBase64URL = function (t) {
                        return (
                            !t.match(/[+/ = ] /) &&
                            ((t = ft(t)), l.lang.String.isBase64(t))
                        );
                    }),
                    (l.lang.String.isIntegerArray = function (t) {
                        return !!(t = t.replace(/\s+/g, "")).match(
                            /^\[[0-9,]+\]$/
                        );
                    }),
                    (void 0 !== l && l) || (l = {}),
                    (void 0 !== l.crypto && l.crypto) || (l.crypto = {}),
                    (l.crypto.Util = new (function () {
                        (this.DIGESTINFOHEAD = {
                            sha1: "3021300906052b0e03021a05000414",
                            sha224: "302d300d06096086480165030402040500041c",
                            sha256: "3031300d060960864801650304020105000420",
                            sha384: "3041300d060960864801650304020205000430",
                            sha512: "3051300d060960864801650304020305000440",
                            md2: "3020300c06082a864886f70d020205000410",
                            md5: "3020300c06082a864886f70d020505000410",
                            ripemd160: "3021300906052b2403020105000414",
                        }),
                            (this.DEFAULTPROVIDER = {
                                md5: "cryptojs",
                                sha1: "cryptojs",
                                sha224: "cryptojs",
                                sha256: "cryptojs",
                                sha384: "cryptojs",
                                sha512: "cryptojs",
                                ripemd160: "cryptojs",
                                hmacmd5: "cryptojs",
                                hmacsha1: "cryptojs",
                                hmacsha224: "cryptojs",
                                hmacsha256: "cryptojs",
                                hmacsha384: "cryptojs",
                                hmacsha512: "cryptojs",
                                hmacripemd160: "cryptojs",
                                MD5withRSA: "cryptojs/jsrsa",
                                SHA1withRSA: "cryptojs/jsrsa",
                                SHA224withRSA: "cryptojs/jsrsa",
                                SHA256withRSA: "cryptojs/jsrsa",
                                SHA384withRSA: "cryptojs/jsrsa",
                                SHA512withRSA: "cryptojs/jsrsa",
                                RIPEMD160withRSA: "cryptojs/jsrsa",
                                MD5withECDSA: "cryptojs/jsrsa",
                                SHA1withECDSA: "cryptojs/jsrsa",
                                SHA224withECDSA: "cryptojs/jsrsa",
                                SHA256withECDSA: "cryptojs/jsrsa",
                                SHA384withECDSA: "cryptojs/jsrsa",
                                SHA512withECDSA: "cryptojs/jsrsa",
                                RIPEMD160withECDSA: "cryptojs/jsrsa",
                                SHA1withDSA: "cryptojs/jsrsa",
                                SHA224withDSA: "cryptojs/jsrsa",
                                SHA256withDSA: "cryptojs/jsrsa",
                                MD5withRSAandMGF1: "cryptojs/jsrsa",
                                SHA1withRSAandMGF1: "cryptojs/jsrsa",
                                SHA224withRSAandMGF1: "cryptojs/jsrsa",
                                SHA256withRSAandMGF1: "cryptojs/jsrsa",
                                SHA384withRSAandMGF1: "cryptojs/jsrsa",
                                SHA512withRSAandMGF1: "cryptojs/jsrsa",
                                RIPEMD160withRSAandMGF1: "cryptojs/jsrsa",
                            }),
                            (this.CRYPTOJSMESSAGEDIGESTNAME = {
                                md5: p.algo.MD5,
                                sha1: p.algo.SHA1,
                                sha224: p.algo.SHA224,
                                sha256: p.algo.SHA256,
                                sha384: p.algo.SHA384,
                                sha512: p.algo.SHA512,
                                ripemd160: p.algo.RIPEMD160,
                            }),
                            (this.getDigestInfoHex = function (t, e) {
                                if (void 0 === this.DIGESTINFOHEAD[e])
                                    throw (
                                        "alg not supported in Util.DIGESTINFOHEAD: " +
                                        e
                                    );
                                return this.DIGESTINFOHEAD[e] + t;
                            }),
                            (this.getPaddedDigestInfoHex = function (t, e, n) {
                                var r = this.getDigestInfoHex(t, e),
                                    i = n / 4;
                                if (r.length + 22 > i)
                                    throw (
                                        "key is too short for SigAlg: keylen=" +
                                        n +
                                        "," +
                                        e
                                    );
                                for (
                                    var s = "0001",
                                        a = "00" + r,
                                        o = "",
                                        h = i - s.length - a.length,
                                        u = 0;
                                    u < h;
                                    u += 2
                                )
                                    o += "ff";
                                return s + o + a;
                            }),
                            (this.hashString = function (t, e) {
                                return new l.crypto.MessageDigest({
                                    alg: e,
                                }).digestString(t);
                            }),
                            (this.hashHex = function (t, e) {
                                return new l.crypto.MessageDigest({
                                    alg: e,
                                }).digestHex(t);
                            }),
                            (this.sha1 = function (t) {
                                return new l.crypto.MessageDigest({
                                    alg: "sha1",
                                    prov: "cryptojs",
                                }).digestString(t);
                            }),
                            (this.sha256 = function (t) {
                                return new l.crypto.MessageDigest({
                                    alg: "sha256",
                                    prov: "cryptojs",
                                }).digestString(t);
                            }),
                            (this.sha256Hex = function (t) {
                                return new l.crypto.MessageDigest({
                                    alg: "sha256",
                                    prov: "cryptojs",
                                }).digestHex(t);
                            }),
                            (this.sha512 = function (t) {
                                return new l.crypto.MessageDigest({
                                    alg: "sha512",
                                    prov: "cryptojs",
                                }).digestString(t);
                            }),
                            (this.sha512Hex = function (t) {
                                return new l.crypto.MessageDigest({
                                    alg: "sha512",
                                    prov: "cryptojs",
                                }).digestHex(t);
                            });
                    })()),
                    (l.crypto.Util.md5 = function (t) {
                        return new l.crypto.MessageDigest({
                            alg: "md5",
                            prov: "cryptojs",
                        }).digestString(t);
                    }),
                    (l.crypto.Util.ripemd160 = function (t) {
                        return new l.crypto.MessageDigest({
                            alg: "ripemd160",
                            prov: "cryptojs",
                        }).digestString(t);
                    }),
                    (l.crypto.Util.SECURERANDOMGEN = new $()),
                    (l.crypto.Util.getRandomHexOfNbytes = function (t) {
                        var e = new Array(t);
                        return (
                            l.crypto.Util.SECURERANDOMGEN.nextBytes(e), ut(e)
                        );
                    }),
                    (l.crypto.Util.getRandomBigIntegerOfNbytes = function (t) {
                        return new A(l.crypto.Util.getRandomHexOfNbytes(t), 16);
                    }),
                    (l.crypto.Util.getRandomHexOfNbits = function (t) {
                        var e = t % 8,
                            n = new Array((t - e) / 8 + 1);
                        return (
                            l.crypto.Util.SECURERANDOMGEN.nextBytes(n),
                            (n[0] = (((255 << e) & 255) ^ 255) & n[0]),
                            ut(n)
                        );
                    }),
                    (l.crypto.Util.getRandomBigIntegerOfNbits = function (t) {
                        return new A(l.crypto.Util.getRandomHexOfNbits(t), 16);
                    }),
                    (l.crypto.Util.getRandomBigIntegerZeroToMax = function (t) {
                        for (var e = t.bitLength(); ; ) {
                            var n = l.crypto.Util.getRandomBigIntegerOfNbits(e);
                            if (-1 != t.compareTo(n)) return n;
                        }
                    }),
                    (l.crypto.Util.getRandomBigIntegerMinToMax = function (
                        t,
                        e
                    ) {
                        var n = t.compareTo(e);
                        if (1 == n) throw "biMin is greater than biMax";
                        if (0 == n) return t;
                        var r = e.subtract(t);
                        return l.crypto.Util.getRandomBigIntegerZeroToMax(
                            r
                        ).add(t);
                    }),
                    (l.crypto.MessageDigest = function (t) {
                        (this.setAlgAndProvider = function (t, e) {
                            if (
                                (null !==
                                    (t =
                                        l.crypto.MessageDigest.getCanonicalAlgName(
                                            t
                                        )) &&
                                    void 0 === e &&
                                    (e = l.crypto.Util.DEFAULTPROVIDER[t]),
                                -1 !=
                                    ":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(
                                        t
                                    ) && "cryptojs" == e)
                            ) {
                                try {
                                    this.md =
                                        l.crypto.Util.CRYPTOJSMESSAGEDIGESTNAME[
                                            t
                                        ].create();
                                } catch (e) {
                                    throw (
                                        "setAlgAndProvider hash alg set fail alg=" +
                                        t +
                                        "/" +
                                        e
                                    );
                                }
                                (this.updateString = function (t) {
                                    this.md.update(t);
                                }),
                                    (this.updateHex = function (t) {
                                        var e = p.enc.Hex.parse(t);
                                        this.md.update(e);
                                    }),
                                    (this.digest = function () {
                                        return this.md
                                            .finalize()
                                            .toString(p.enc.Hex);
                                    }),
                                    (this.digestString = function (t) {
                                        return (
                                            this.updateString(t), this.digest()
                                        );
                                    }),
                                    (this.digestHex = function (t) {
                                        return this.updateHex(t), this.digest();
                                    });
                            }
                            if (-1 != ":sha256:".indexOf(t) && "sjcl" == e) {
                                try {
                                    this.md = new sjcl.hash.sha256();
                                } catch (e) {
                                    throw (
                                        "setAlgAndProvider hash alg set fail alg=" +
                                        t +
                                        "/" +
                                        e
                                    );
                                }
                                (this.updateString = function (t) {
                                    this.md.update(t);
                                }),
                                    (this.updateHex = function (t) {
                                        var e = sjcl.codec.hex.toBits(t);
                                        this.md.update(e);
                                    }),
                                    (this.digest = function () {
                                        var t = this.md.finalize();
                                        return sjcl.codec.hex.fromBits(t);
                                    }),
                                    (this.digestString = function (t) {
                                        return (
                                            this.updateString(t), this.digest()
                                        );
                                    }),
                                    (this.digestHex = function (t) {
                                        return this.updateHex(t), this.digest();
                                    });
                            }
                        }),
                            (this.updateString = function (t) {
                                throw (
                                    "updateString(str) not supported for this alg/prov: " +
                                    this.algName +
                                    "/" +
                                    this.provName
                                );
                            }),
                            (this.updateHex = function (t) {
                                throw (
                                    "updateHex(hex) not supported for this alg/prov: " +
                                    this.algName +
                                    "/" +
                                    this.provName
                                );
                            }),
                            (this.digest = function () {
                                throw (
                                    "digest() not supported for this alg/prov: " +
                                    this.algName +
                                    "/" +
                                    this.provName
                                );
                            }),
                            (this.digestString = function (t) {
                                throw (
                                    "digestString(str) not supported for this alg/prov: " +
                                    this.algName +
                                    "/" +
                                    this.provName
                                );
                            }),
                            (this.digestHex = function (t) {
                                throw (
                                    "digestHex(hex) not supported for this alg/prov: " +
                                    this.algName +
                                    "/" +
                                    this.provName
                                );
                            }),
                            void 0 !== t &&
                                void 0 !== t.alg &&
                                ((this.algName = t.alg),
                                void 0 === t.prov &&
                                    (this.provName =
                                        l.crypto.Util.DEFAULTPROVIDER[
                                            this.algName
                                        ]),
                                this.setAlgAndProvider(
                                    this.algName,
                                    this.provName
                                ));
                    }),
                    (l.crypto.MessageDigest.getCanonicalAlgName = function (t) {
                        return (
                            "string" == typeof t &&
                                (t = (t = t.toLowerCase()).replace(/-/, "")),
                            t
                        );
                    }),
                    (l.crypto.MessageDigest.getHashLength = function (t) {
                        var e = l.crypto.MessageDigest,
                            n = e.getCanonicalAlgName(t);
                        if (void 0 === e.HASHLENGTH[n])
                            throw "not supported algorithm: " + t;
                        return e.HASHLENGTH[n];
                    }),
                    (l.crypto.MessageDigest.HASHLENGTH = {
                        md5: 16,
                        sha1: 20,
                        sha224: 28,
                        sha256: 32,
                        sha384: 48,
                        sha512: 64,
                        ripemd160: 20,
                    }),
                    (l.crypto.Mac = function (t) {
                        (this.setAlgAndProvider = function (t, e) {
                            if (
                                (null == (t = t.toLowerCase()) &&
                                    (t = "hmacsha1"),
                                "hmac" != (t = t.toLowerCase()).substr(0, 4))
                            )
                                throw (
                                    "setAlgAndProvider unsupported HMAC alg: " +
                                    t
                                );
                            void 0 === e &&
                                (e = l.crypto.Util.DEFAULTPROVIDER[t]),
                                (this.algProv = t + "/" + e);
                            var n = t.substr(4);
                            if (
                                -1 !=
                                    ":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(
                                        n
                                    ) &&
                                "cryptojs" == e
                            ) {
                                try {
                                    var r =
                                        l.crypto.Util.CRYPTOJSMESSAGEDIGESTNAME[
                                            n
                                        ];
                                    this.mac = p.algo.HMAC.create(r, this.pass);
                                } catch (t) {
                                    throw (
                                        "setAlgAndProvider hash alg set fail hashAlg=" +
                                        n +
                                        "/" +
                                        t
                                    );
                                }
                                (this.updateString = function (t) {
                                    this.mac.update(t);
                                }),
                                    (this.updateHex = function (t) {
                                        var e = p.enc.Hex.parse(t);
                                        this.mac.update(e);
                                    }),
                                    (this.doFinal = function () {
                                        return this.mac
                                            .finalize()
                                            .toString(p.enc.Hex);
                                    }),
                                    (this.doFinalString = function (t) {
                                        return (
                                            this.updateString(t), this.doFinal()
                                        );
                                    }),
                                    (this.doFinalHex = function (t) {
                                        return (
                                            this.updateHex(t), this.doFinal()
                                        );
                                    });
                            }
                        }),
                            (this.updateString = function (t) {
                                throw (
                                    "updateString(str) not supported for this alg/prov: " +
                                    this.algProv
                                );
                            }),
                            (this.updateHex = function (t) {
                                throw (
                                    "updateHex(hex) not supported for this alg/prov: " +
                                    this.algProv
                                );
                            }),
                            (this.doFinal = function () {
                                throw (
                                    "digest() not supported for this alg/prov: " +
                                    this.algProv
                                );
                            }),
                            (this.doFinalString = function (t) {
                                throw (
                                    "digestString(str) not supported for this alg/prov: " +
                                    this.algProv
                                );
                            }),
                            (this.doFinalHex = function (t) {
                                throw (
                                    "digestHex(hex) not supported for this alg/prov: " +
                                    this.algProv
                                );
                            }),
                            (this.setPassword = function (t) {
                                if ("string" == typeof t) {
                                    var e = t;
                                    return (
                                        (t.length % 2 != 1 &&
                                            t.match(/^[0-9A-Fa-f]+$/)) ||
                                            (e = vt(t)),
                                        void (this.pass = p.enc.Hex.parse(e))
                                    );
                                }
                                if ("object" != typeof t)
                                    throw (
                                        "KJUR.crypto.Mac unsupported password type: " +
                                        t
                                    );
                                if (((e = null), void 0 !== t.hex)) {
                                    if (
                                        t.hex.length % 2 != 0 ||
                                        !t.hex.match(/^[0-9A-Fa-f]+$/)
                                    )
                                        throw (
                                            "Mac: wrong hex password: " + t.hex
                                        );
                                    e = t.hex;
                                }
                                if (
                                    (void 0 !== t.utf8 && (e = pt(t.utf8)),
                                    void 0 !== t.rstr && (e = vt(t.rstr)),
                                    void 0 !== t.b64 && (e = S(t.b64)),
                                    void 0 !== t.b64u && (e = gt(t.b64u)),
                                    null == e)
                                )
                                    throw (
                                        "KJUR.crypto.Mac unsupported password type: " +
                                        t
                                    );
                                this.pass = p.enc.Hex.parse(e);
                            }),
                            void 0 !== t &&
                                (void 0 !== t.pass && this.setPassword(t.pass),
                                void 0 !== t.alg &&
                                    ((this.algName = t.alg),
                                    void 0 === t.prov &&
                                        (this.provName =
                                            l.crypto.Util.DEFAULTPROVIDER[
                                                this.algName
                                            ]),
                                    this.setAlgAndProvider(
                                        this.algName,
                                        this.provName
                                    )));
                    }),
                    (l.crypto.Signature = function (t) {
                        var e = null;
                        if (
                            ((this._setAlgNames = function () {
                                var t = this.algName.match(/^(.+)with(.+)$/);
                                t &&
                                    ((this.mdAlgName = t[1].toLowerCase()),
                                    (this.pubkeyAlgName = t[2].toLowerCase()));
                            }),
                            (this._zeroPaddingOfSignature = function (t, e) {
                                for (
                                    var n = "", r = e / 4 - t.length, i = 0;
                                    i < r;
                                    i++
                                )
                                    n += "0";
                                return n + t;
                            }),
                            (this.setAlgAndProvider = function (t, e) {
                                if (
                                    (this._setAlgNames(), "cryptojs/jsrsa" != e)
                                )
                                    throw "provider not supported: " + e;
                                if (
                                    -1 !=
                                    ":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(
                                        this.mdAlgName
                                    )
                                ) {
                                    try {
                                        this.md = new l.crypto.MessageDigest({
                                            alg: this.mdAlgName,
                                        });
                                    } catch (t) {
                                        throw (
                                            "setAlgAndProvider hash alg set fail alg=" +
                                            this.mdAlgName +
                                            "/" +
                                            t
                                        );
                                    }
                                    (this.init = function (t, e) {
                                        var n = null;
                                        try {
                                            n =
                                                void 0 === e
                                                    ? xt.getKey(t)
                                                    : xt.getKey(t, e);
                                        } catch (t) {
                                            throw "init failed:" + t;
                                        }
                                        if (!0 === n.isPrivate)
                                            (this.prvKey = n),
                                                (this.state = "SIGN");
                                        else {
                                            if (!0 !== n.isPublic)
                                                throw "init failed.:" + n;
                                            (this.pubKey = n),
                                                (this.state = "VERIFY");
                                        }
                                    }),
                                        (this.initSign = function (t) {
                                            "string" == typeof t.ecprvhex &&
                                            "string" == typeof t.eccurvename
                                                ? ((this.ecprvhex = t.ecprvhex),
                                                  (this.eccurvename =
                                                      t.eccurvename))
                                                : (this.prvKey = t),
                                                (this.state = "SIGN");
                                        }),
                                        (this.initVerifyByPublicKey = function (
                                            t
                                        ) {
                                            "string" == typeof t.ecpubhex &&
                                            "string" == typeof t.eccurvename
                                                ? ((this.ecpubhex = t.ecpubhex),
                                                  (this.eccurvename =
                                                      t.eccurvename))
                                                : (t instanceof
                                                      l.crypto.ECDSA ||
                                                      t instanceof tt) &&
                                                  (this.pubKey = t),
                                                (this.state = "VERIFY");
                                        }),
                                        (this.initVerifyByCertificatePEM =
                                            function (t) {
                                                var e = new Bt();
                                                e.readCertPEM(t),
                                                    (this.pubKey =
                                                        e.subjectPublicKeyRSA),
                                                    (this.state = "VERIFY");
                                            }),
                                        (this.updateString = function (t) {
                                            this.md.updateString(t);
                                        }),
                                        (this.updateHex = function (t) {
                                            this.md.updateHex(t);
                                        }),
                                        (this.sign = function () {
                                            if (
                                                ((this.sHashHex =
                                                    this.md.digest()),
                                                void 0 !== this.ecprvhex &&
                                                    void 0 !== this.eccurvename)
                                            ) {
                                                var t = new l.crypto.ECDSA({
                                                    curve: this.eccurvename,
                                                });
                                                this.hSign = t.signHex(
                                                    this.sHashHex,
                                                    this.ecprvhex
                                                );
                                            } else if (
                                                this.prvKey instanceof tt &&
                                                "rsaandmgf1" ==
                                                    this.pubkeyAlgName
                                            )
                                                this.hSign =
                                                    this.prvKey.signWithMessageHashPSS(
                                                        this.sHashHex,
                                                        this.mdAlgName,
                                                        this.pssSaltLen
                                                    );
                                            else if (
                                                this.prvKey instanceof tt &&
                                                "rsa" == this.pubkeyAlgName
                                            )
                                                this.hSign =
                                                    this.prvKey.signWithMessageHash(
                                                        this.sHashHex,
                                                        this.mdAlgName
                                                    );
                                            else if (
                                                this.prvKey instanceof
                                                l.crypto.ECDSA
                                            )
                                                this.hSign =
                                                    this.prvKey.signWithMessageHash(
                                                        this.sHashHex
                                                    );
                                            else {
                                                if (
                                                    !(
                                                        this.prvKey instanceof
                                                        l.crypto.DSA
                                                    )
                                                )
                                                    throw (
                                                        "Signature: unsupported public key alg: " +
                                                        this.pubkeyAlgName
                                                    );
                                                this.hSign =
                                                    this.prvKey.signWithMessageHash(
                                                        this.sHashHex
                                                    );
                                            }
                                            return this.hSign;
                                        }),
                                        (this.signString = function (t) {
                                            return (
                                                this.updateString(t),
                                                this.sign()
                                            );
                                        }),
                                        (this.signHex = function (t) {
                                            return (
                                                this.updateHex(t), this.sign()
                                            );
                                        }),
                                        (this.verify = function (t) {
                                            if (
                                                ((this.sHashHex =
                                                    this.md.digest()),
                                                void 0 !== this.ecpubhex &&
                                                    void 0 !== this.eccurvename)
                                            )
                                                return new l.crypto.ECDSA({
                                                    curve: this.eccurvename,
                                                }).verifyHex(
                                                    this.sHashHex,
                                                    t,
                                                    this.ecpubhex
                                                );
                                            if (
                                                this.pubKey instanceof tt &&
                                                "rsaandmgf1" ==
                                                    this.pubkeyAlgName
                                            )
                                                return this.pubKey.verifyWithMessageHashPSS(
                                                    this.sHashHex,
                                                    t,
                                                    this.mdAlgName,
                                                    this.pssSaltLen
                                                );
                                            if (
                                                this.pubKey instanceof tt &&
                                                "rsa" == this.pubkeyAlgName
                                            )
                                                return this.pubKey.verifyWithMessageHash(
                                                    this.sHashHex,
                                                    t
                                                );
                                            if (
                                                this.pubKey instanceof
                                                l.crypto.ECDSA
                                            )
                                                return this.pubKey.verifyWithMessageHash(
                                                    this.sHashHex,
                                                    t
                                                );
                                            if (
                                                this.pubKey instanceof
                                                l.crypto.DSA
                                            )
                                                return this.pubKey.verifyWithMessageHash(
                                                    this.sHashHex,
                                                    t
                                                );
                                            throw (
                                                "Signature: unsupported public key alg: " +
                                                this.pubkeyAlgName
                                            );
                                        });
                                }
                            }),
                            (this.init = function (t, e) {
                                throw (
                                    "init(key, pass) not supported for this alg:prov=" +
                                    this.algProvName
                                );
                            }),
                            (this.initVerifyByPublicKey = function (t) {
                                throw (
                                    "initVerifyByPublicKey(rsaPubKeyy) not supported for this alg:prov=" +
                                    this.algProvName
                                );
                            }),
                            (this.initVerifyByCertificatePEM = function (t) {
                                throw (
                                    "initVerifyByCertificatePEM(certPEM) not supported for this alg:prov=" +
                                    this.algProvName
                                );
                            }),
                            (this.initSign = function (t) {
                                throw (
                                    "initSign(prvKey) not supported for this alg:prov=" +
                                    this.algProvName
                                );
                            }),
                            (this.updateString = function (t) {
                                throw (
                                    "updateString(str) not supported for this alg:prov=" +
                                    this.algProvName
                                );
                            }),
                            (this.updateHex = function (t) {
                                throw (
                                    "updateHex(hex) not supported for this alg:prov=" +
                                    this.algProvName
                                );
                            }),
                            (this.sign = function () {
                                throw (
                                    "sign() not supported for this alg:prov=" +
                                    this.algProvName
                                );
                            }),
                            (this.signString = function (t) {
                                throw (
                                    "digestString(str) not supported for this alg:prov=" +
                                    this.algProvName
                                );
                            }),
                            (this.signHex = function (t) {
                                throw (
                                    "digestHex(hex) not supported for this alg:prov=" +
                                    this.algProvName
                                );
                            }),
                            (this.verify = function (t) {
                                throw (
                                    "verify(hSigVal) not supported for this alg:prov=" +
                                    this.algProvName
                                );
                            }),
                            (this.initParams = t),
                            void 0 !== t &&
                                (void 0 !== t.alg &&
                                    ((this.algName = t.alg),
                                    void 0 === t.prov
                                        ? (this.provName =
                                              l.crypto.Util.DEFAULTPROVIDER[
                                                  this.algName
                                              ])
                                        : (this.provName = t.prov),
                                    (this.algProvName =
                                        this.algName + ":" + this.provName),
                                    this.setAlgAndProvider(
                                        this.algName,
                                        this.provName
                                    ),
                                    this._setAlgNames()),
                                void 0 !== t.psssaltlen &&
                                    (this.pssSaltLen = t.psssaltlen),
                                void 0 !== t.prvkeypem))
                        ) {
                            if (void 0 !== t.prvkeypas)
                                throw "both prvkeypem and prvkeypas parameters not supported";
                            try {
                                (e = new tt()).readPrivateKeyFromPEMString(
                                    t.prvkeypem
                                ),
                                    this.initSign(e);
                            } catch (t) {
                                throw (
                                    "fatal error to load pem private key: " + t
                                );
                            }
                        }
                    }),
                    (l.crypto.Cipher = function (t) {}),
                    (l.crypto.Cipher.encrypt = function (t, e, n) {
                        if (e instanceof tt && e.isPublic) {
                            var r = l.crypto.Cipher.getAlgByKeyAndName(e, n);
                            if ("RSA" === r) return e.encrypt(t);
                            if ("RSAOAEP" === r)
                                return e.encryptOAEP(t, "sha1");
                            var i = r.match(/^RSAOAEP(\d+)$/);
                            if (null !== i)
                                return e.encryptOAEP(t, "sha" + i[1]);
                            throw (
                                "Cipher.encrypt: unsupported algorithm for RSAKey: " +
                                n
                            );
                        }
                        throw "Cipher.encrypt: unsupported key or algorithm";
                    }),
                    (l.crypto.Cipher.decrypt = function (t, e, n) {
                        if (e instanceof tt && e.isPrivate) {
                            var r = l.crypto.Cipher.getAlgByKeyAndName(e, n);
                            if ("RSA" === r) return e.decrypt(t);
                            if ("RSAOAEP" === r)
                                return e.decryptOAEP(t, "sha1");
                            var i = r.match(/^RSAOAEP(\d+)$/);
                            if (null !== i)
                                return e.decryptOAEP(t, "sha" + i[1]);
                            throw (
                                "Cipher.decrypt: unsupported algorithm for RSAKey: " +
                                n
                            );
                        }
                        throw "Cipher.decrypt: unsupported key or algorithm";
                    }),
                    (l.crypto.Cipher.getAlgByKeyAndName = function (t, e) {
                        if (t instanceof tt) {
                            if (
                                -1 !=
                                ":RSA:RSAOAEP:RSAOAEP224:RSAOAEP256:RSAOAEP384:RSAOAEP512:".indexOf(
                                    e
                                )
                            )
                                return e;
                            if (null == e) return "RSA";
                            throw (
                                "getAlgByKeyAndName: not supported algorithm name for RSAKey: " +
                                e
                            );
                        }
                        throw (
                            "getAlgByKeyAndName: not supported algorithm name: " +
                            e
                        );
                    }),
                    (l.crypto.OID = new (function () {
                        this.oidhex2name = {
                            "2a864886f70d010101": "rsaEncryption",
                            "2a8648ce3d0201": "ecPublicKey",
                            "2a8648ce380401": "dsa",
                            "2a8648ce3d030107": "secp256r1",
                            "2b8104001f": "secp192k1",
                            "2b81040021": "secp224r1",
                            "2b8104000a": "secp256k1",
                            "2b81040023": "secp521r1",
                            "2b81040022": "secp384r1",
                            "2a8648ce380403": "SHA1withDSA",
                            "608648016503040301": "SHA224withDSA",
                            "608648016503040302": "SHA256withDSA",
                        };
                    })()),
                    (void 0 !== l && l) || (l = {}),
                    (void 0 !== l.crypto && l.crypto) || (l.crypto = {}),
                    (l.crypto.ECDSA = function (t) {
                        var e = new $();
                        (this.type = "EC"),
                            (this.isPrivate = !1),
                            (this.isPublic = !1),
                            (this.getBigRandom = function (t) {
                                return new A(t.bitLength(), e)
                                    .mod(t.subtract(A.ONE))
                                    .add(A.ONE);
                            }),
                            (this.setNamedCurve = function (t) {
                                (this.ecparams =
                                    l.crypto.ECParameterDB.getByName(t)),
                                    (this.prvKeyHex = null),
                                    (this.pubKeyHex = null),
                                    (this.curveName = t);
                            }),
                            (this.setPrivateKeyHex = function (t) {
                                (this.isPrivate = !0), (this.prvKeyHex = t);
                            }),
                            (this.setPublicKeyHex = function (t) {
                                (this.isPublic = !0), (this.pubKeyHex = t);
                            }),
                            (this.getPublicKeyXYHex = function () {
                                var t = this.pubKeyHex;
                                if ("04" !== t.substr(0, 2))
                                    throw "this method supports uncompressed format(04) only";
                                var e = this.ecparams.keylen / 4;
                                if (t.length !== 2 + 2 * e)
                                    throw "malformed public key hex length";
                                var n = {};
                                return (
                                    (n.x = t.substr(2, e)),
                                    (n.y = t.substr(2 + e)),
                                    n
                                );
                            }),
                            (this.getShortNISTPCurveName = function () {
                                var t = this.curveName;
                                return "secp256r1" === t ||
                                    "NIST P-256" === t ||
                                    "P-256" === t ||
                                    "prime256v1" === t
                                    ? "P-256"
                                    : "secp384r1" === t ||
                                      "NIST P-384" === t ||
                                      "P-384" === t
                                    ? "P-384"
                                    : null;
                            }),
                            (this.generateKeyPairHex = function () {
                                var t = this.ecparams.n,
                                    e = this.getBigRandom(t),
                                    n = this.ecparams.G.multiply(e),
                                    r = n.getX().toBigInteger(),
                                    i = n.getY().toBigInteger(),
                                    s = this.ecparams.keylen / 4,
                                    a = ("0000000000" + e.toString(16)).slice(
                                        -s
                                    ),
                                    o =
                                        "04" +
                                        ("0000000000" + r.toString(16)).slice(
                                            -s
                                        ) +
                                        ("0000000000" + i.toString(16)).slice(
                                            -s
                                        );
                                return (
                                    this.setPrivateKeyHex(a),
                                    this.setPublicKeyHex(o),
                                    { ecprvhex: a, ecpubhex: o }
                                );
                            }),
                            (this.signWithMessageHash = function (t) {
                                return this.signHex(t, this.prvKeyHex);
                            }),
                            (this.signHex = function (t, e) {
                                var n = new A(e, 16),
                                    r = this.ecparams.n,
                                    i = new A(t, 16);
                                do {
                                    var s = this.getBigRandom(r),
                                        a = this.ecparams.G.multiply(s)
                                            .getX()
                                            .toBigInteger()
                                            .mod(r);
                                } while (a.compareTo(A.ZERO) <= 0);
                                var o = s
                                    .modInverse(r)
                                    .multiply(i.add(n.multiply(a)))
                                    .mod(r);
                                return l.crypto.ECDSA.biRSSigToASN1Sig(a, o);
                            }),
                            (this.sign = function (t, e) {
                                var n = e,
                                    r = this.ecparams.n,
                                    i = A.fromByteArrayUnsigned(t);
                                do {
                                    var s = this.getBigRandom(r),
                                        a = this.ecparams.G.multiply(s)
                                            .getX()
                                            .toBigInteger()
                                            .mod(r);
                                } while (a.compareTo(A.ZERO) <= 0);
                                var o = s
                                    .modInverse(r)
                                    .multiply(i.add(n.multiply(a)))
                                    .mod(r);
                                return this.serializeSig(a, o);
                            }),
                            (this.verifyWithMessageHash = function (t, e) {
                                return this.verifyHex(t, e, this.pubKeyHex);
                            }),
                            (this.verifyHex = function (t, e, n) {
                                var r,
                                    i,
                                    s,
                                    a = l.crypto.ECDSA.parseSigHex(e);
                                (r = a.r),
                                    (i = a.s),
                                    (s = rt.decodeFromHex(
                                        this.ecparams.curve,
                                        n
                                    ));
                                var o = new A(t, 16);
                                return this.verifyRaw(o, r, i, s);
                            }),
                            (this.verify = function (t, e, n) {
                                var r, i, s;
                                if (Bitcoin.Util.isArray(e)) {
                                    var a = this.parseSig(e);
                                    (r = a.r), (i = a.s);
                                } else {
                                    if ("object" != typeof e || !e.r || !e.s)
                                        throw "Invalid value for signature";
                                    (r = e.r), (i = e.s);
                                }
                                if (n instanceof rt) s = n;
                                else {
                                    if (!Bitcoin.Util.isArray(n))
                                        throw "Invalid format for pubkey value, must be byte array or ECPointFp";
                                    s = rt.decodeFrom(this.ecparams.curve, n);
                                }
                                var o = A.fromByteArrayUnsigned(t);
                                return this.verifyRaw(o, r, i, s);
                            }),
                            (this.verifyRaw = function (t, e, n, r) {
                                var i = this.ecparams.n,
                                    s = this.ecparams.G;
                                if (
                                    e.compareTo(A.ONE) < 0 ||
                                    e.compareTo(i) >= 0
                                )
                                    return !1;
                                if (
                                    n.compareTo(A.ONE) < 0 ||
                                    n.compareTo(i) >= 0
                                )
                                    return !1;
                                var a = n.modInverse(i),
                                    o = t.multiply(a).mod(i),
                                    h = e.multiply(a).mod(i);
                                return s
                                    .multiply(o)
                                    .add(r.multiply(h))
                                    .getX()
                                    .toBigInteger()
                                    .mod(i)
                                    .equals(e);
                            }),
                            (this.serializeSig = function (t, e) {
                                var n = t.toByteArraySigned(),
                                    r = e.toByteArraySigned(),
                                    i = [];
                                return (
                                    i.push(2),
                                    i.push(n.length),
                                    (i = i.concat(n)).push(2),
                                    i.push(r.length),
                                    (i = i.concat(r)).unshift(i.length),
                                    i.unshift(48),
                                    i
                                );
                            }),
                            (this.parseSig = function (t) {
                                var e;
                                if (48 != t[0])
                                    throw new Error(
                                        "Signature not a valid DERSequence"
                                    );
                                if (2 != t[(e = 2)])
                                    throw new Error(
                                        "First element in signature must be a DERInteger"
                                    );
                                var n = t.slice(e + 2, e + 2 + t[e + 1]);
                                if (2 != t[(e += 2 + t[e + 1])])
                                    throw new Error(
                                        "Second element in signature must be a DERInteger"
                                    );
                                var r = t.slice(e + 2, e + 2 + t[e + 1]);
                                return (
                                    (e += 2 + t[e + 1]),
                                    {
                                        r: A.fromByteArrayUnsigned(n),
                                        s: A.fromByteArrayUnsigned(r),
                                    }
                                );
                            }),
                            (this.parseSigCompact = function (t) {
                                if (65 !== t.length)
                                    throw "Signature has the wrong length";
                                var e = t[0] - 27;
                                if (e < 0 || e > 7)
                                    throw "Invalid signature type";
                                var n = this.ecparams.n;
                                return {
                                    r: A.fromByteArrayUnsigned(
                                        t.slice(1, 33)
                                    ).mod(n),
                                    s: A.fromByteArrayUnsigned(
                                        t.slice(33, 65)
                                    ).mod(n),
                                    i: e,
                                };
                            }),
                            (this.readPKCS5PrvKeyHex = function (t) {
                                var e,
                                    n,
                                    r,
                                    i = ht,
                                    s = l.crypto.ECDSA.getName,
                                    a = i.getVbyList;
                                if (!1 === i.isASN1HEX(t))
                                    throw "not ASN.1 hex string";
                                try {
                                    (e = a(t, 0, [2, 0], "06")),
                                        (n = a(t, 0, [1], "04"));
                                    try {
                                        r = a(t, 0, [3, 0], "03").substr(2);
                                    } catch (t) {}
                                } catch (t) {
                                    throw "malformed PKCS#1/5 plain ECC private key";
                                }
                                if (
                                    ((this.curveName = s(e)),
                                    void 0 === this.curveName)
                                )
                                    throw "unsupported curve name";
                                this.setNamedCurve(this.curveName),
                                    this.setPublicKeyHex(r),
                                    this.setPrivateKeyHex(n),
                                    (this.isPublic = !1);
                            }),
                            (this.readPKCS8PrvKeyHex = function (t) {
                                var e,
                                    n,
                                    r,
                                    i = ht,
                                    s = l.crypto.ECDSA.getName,
                                    a = i.getVbyList;
                                if (!1 === i.isASN1HEX(t))
                                    throw "not ASN.1 hex string";
                                try {
                                    a(t, 0, [1, 0], "06"),
                                        (e = a(t, 0, [1, 1], "06")),
                                        (n = a(t, 0, [2, 0, 1], "04"));
                                    try {
                                        r = a(t, 0, [2, 0, 2, 0], "03").substr(
                                            2
                                        );
                                    } catch (t) {}
                                } catch (t) {
                                    throw "malformed PKCS#8 plain ECC private key";
                                }
                                if (
                                    ((this.curveName = s(e)),
                                    void 0 === this.curveName)
                                )
                                    throw "unsupported curve name";
                                this.setNamedCurve(this.curveName),
                                    this.setPublicKeyHex(r),
                                    this.setPrivateKeyHex(n),
                                    (this.isPublic = !1);
                            }),
                            (this.readPKCS8PubKeyHex = function (t) {
                                var e,
                                    n,
                                    r = ht,
                                    i = l.crypto.ECDSA.getName,
                                    s = r.getVbyList;
                                if (!1 === r.isASN1HEX(t))
                                    throw "not ASN.1 hex string";
                                try {
                                    s(t, 0, [0, 0], "06"),
                                        (e = s(t, 0, [0, 1], "06")),
                                        (n = s(t, 0, [1], "03").substr(2));
                                } catch (t) {
                                    throw "malformed PKCS#8 ECC public key";
                                }
                                if (
                                    ((this.curveName = i(e)),
                                    null === this.curveName)
                                )
                                    throw "unsupported curve name";
                                this.setNamedCurve(this.curveName),
                                    this.setPublicKeyHex(n);
                            }),
                            (this.readCertPubKeyHex = function (t, e) {
                                5 !== e && (e = 6);
                                var n,
                                    r,
                                    i = ht,
                                    s = l.crypto.ECDSA.getName,
                                    a = i.getVbyList;
                                if (!1 === i.isASN1HEX(t))
                                    throw "not ASN.1 hex string";
                                try {
                                    (n = a(t, 0, [0, e, 0, 1], "06")),
                                        (r = a(t, 0, [0, e, 1], "03").substr(
                                            2
                                        ));
                                } catch (t) {
                                    throw "malformed X.509 certificate ECC public key";
                                }
                                if (
                                    ((this.curveName = s(n)),
                                    null === this.curveName)
                                )
                                    throw "unsupported curve name";
                                this.setNamedCurve(this.curveName),
                                    this.setPublicKeyHex(r);
                            }),
                            void 0 !== t &&
                                void 0 !== t.curve &&
                                (this.curveName = t.curve),
                            void 0 === this.curveName &&
                                (this.curveName = "secp256r1"),
                            this.setNamedCurve(this.curveName),
                            void 0 !== t &&
                                (void 0 !== t.prv &&
                                    this.setPrivateKeyHex(t.prv),
                                void 0 !== t.pub &&
                                    this.setPublicKeyHex(t.pub));
                    }),
                    (l.crypto.ECDSA.parseSigHex = function (t) {
                        var e = l.crypto.ECDSA.parseSigHexInHexRS(t);
                        return { r: new A(e.r, 16), s: new A(e.s, 16) };
                    }),
                    (l.crypto.ECDSA.parseSigHexInHexRS = function (t) {
                        if ("30" != t.substr(0, 2))
                            throw "signature is not a ASN.1 sequence";
                        var e = ht.getPosArrayOfChildren_AtObj(t, 0);
                        if (2 != e.length)
                            throw "number of signature ASN.1 sequence elements seem wrong";
                        var n = e[0],
                            r = e[1];
                        if ("02" != t.substr(n, 2))
                            throw "1st item of sequene of signature is not ASN.1 integer";
                        if ("02" != t.substr(r, 2))
                            throw "2nd item of sequene of signature is not ASN.1 integer";
                        return {
                            r: ht.getHexOfV_AtObj(t, n),
                            s: ht.getHexOfV_AtObj(t, r),
                        };
                    }),
                    (l.crypto.ECDSA.asn1SigToConcatSig = function (t) {
                        var e = l.crypto.ECDSA.parseSigHexInHexRS(t),
                            n = e.r,
                            r = e.s;
                        if (
                            ("00" == n.substr(0, 2) &&
                                ((n.length / 2) * 8) % 128 == 8 &&
                                (n = n.substr(2)),
                            "00" == r.substr(0, 2) &&
                                ((r.length / 2) * 8) % 128 == 8 &&
                                (r = r.substr(2)),
                            ((n.length / 2) * 8) % 128 != 0)
                        )
                            throw "unknown ECDSA sig r length error";
                        if (((r.length / 2) * 8) % 128 != 0)
                            throw "unknown ECDSA sig s length error";
                        return n + r;
                    }),
                    (l.crypto.ECDSA.concatSigToASN1Sig = function (t) {
                        if (((t.length / 2) * 8) % 128 != 0)
                            throw "unknown ECDSA concatinated r-s sig  length error";
                        var e = t.substr(0, t.length / 2),
                            n = t.substr(t.length / 2);
                        return l.crypto.ECDSA.hexRSSigToASN1Sig(e, n);
                    }),
                    (l.crypto.ECDSA.hexRSSigToASN1Sig = function (t, e) {
                        var n = new A(t, 16),
                            r = new A(e, 16);
                        return l.crypto.ECDSA.biRSSigToASN1Sig(n, r);
                    }),
                    (l.crypto.ECDSA.biRSSigToASN1Sig = function (t, e) {
                        var n = new l.asn1.DERInteger({ bigint: t }),
                            r = new l.asn1.DERInteger({ bigint: e });
                        return new l.asn1.DERSequence({
                            array: [n, r],
                        }).getEncodedHex();
                    }),
                    (l.crypto.ECDSA.getName = function (t) {
                        return "2a8648ce3d030107" === t
                            ? "secp256r1"
                            : "2b8104000a" === t
                            ? "secp256k1"
                            : "2b81040022" === t
                            ? "secp384r1"
                            : -1 !==
                              "|secp256r1|NIST P-256|P-256|prime256v1|".indexOf(
                                  t
                              )
                            ? "secp256r1"
                            : -1 !== "|secp256k1|".indexOf(t)
                            ? "secp256k1"
                            : -1 !== "|secp384r1|NIST P-384|P-384|".indexOf(t)
                            ? "secp384r1"
                            : null;
                    }),
                    (void 0 !== l && l) || (l = {}),
                    (void 0 !== l.crypto && l.crypto) || (l.crypto = {}),
                    (l.crypto.ECParameterDB = new (function () {
                        var t = {},
                            e = {};
                        function n(t) {
                            return new A(t, 16);
                        }
                        (this.getByName = function (n) {
                            var r = n;
                            if (
                                (void 0 !== e[r] && (r = e[n]), void 0 !== t[r])
                            )
                                return t[r];
                            throw "unregistered EC curve name: " + r;
                        }),
                            (this.regist = function (
                                r,
                                i,
                                s,
                                a,
                                o,
                                h,
                                u,
                                c,
                                l,
                                f,
                                d,
                                g
                            ) {
                                t[r] = {};
                                var p = n(s),
                                    y = n(a),
                                    m = n(o),
                                    v = n(h),
                                    S = n(u),
                                    A = new it(p, y, m),
                                    b = A.decodePointHex("04" + c + l);
                                (t[r].name = r),
                                    (t[r].keylen = i),
                                    (t[r].curve = A),
                                    (t[r].G = b),
                                    (t[r].n = v),
                                    (t[r].h = S),
                                    (t[r].oid = d),
                                    (t[r].info = g);
                                for (var E = 0; E < f.length; E++) e[f[E]] = r;
                            });
                    })()),
                    l.crypto.ECParameterDB.regist(
                        "secp128r1",
                        128,
                        "FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFF",
                        "FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFC",
                        "E87579C11079F43DD824993C2CEE5ED3",
                        "FFFFFFFE0000000075A30D1B9038A115",
                        "1",
                        "161FF7528B899B2D0C28607CA52C5B86",
                        "CF5AC8395BAFEB13C02DA292DDED7A83",
                        [],
                        "",
                        "secp128r1 : SECG curve over a 128 bit prime field"
                    ),
                    l.crypto.ECParameterDB.regist(
                        "secp160k1",
                        160,
                        "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFAC73",
                        "0",
                        "7",
                        "0100000000000000000001B8FA16DFAB9ACA16B6B3",
                        "1",
                        "3B4C382CE37AA192A4019E763036F4F5DD4D7EBB",
                        "938CF935318FDCED6BC28286531733C3F03C4FEE",
                        [],
                        "",
                        "secp160k1 : SECG curve over a 160 bit prime field"
                    ),
                    l.crypto.ECParameterDB.regist(
                        "secp160r1",
                        160,
                        "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFF",
                        "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFC",
                        "1C97BEFC54BD7A8B65ACF89F81D4D4ADC565FA45",
                        "0100000000000000000001F4C8F927AED3CA752257",
                        "1",
                        "4A96B5688EF573284664698968C38BB913CBFC82",
                        "23A628553168947D59DCC912042351377AC5FB32",
                        [],
                        "",
                        "secp160r1 : SECG curve over a 160 bit prime field"
                    ),
                    l.crypto.ECParameterDB.regist(
                        "secp192k1",
                        192,
                        "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFEE37",
                        "0",
                        "3",
                        "FFFFFFFFFFFFFFFFFFFFFFFE26F2FC170F69466A74DEFD8D",
                        "1",
                        "DB4FF10EC057E9AE26B07D0280B7F4341DA5D1B1EAE06C7D",
                        "9B2F2F6D9C5628A7844163D015BE86344082AA88D95E2F9D",
                        []
                    ),
                    l.crypto.ECParameterDB.regist(
                        "secp192r1",
                        192,
                        "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF",
                        "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFC",
                        "64210519E59C80E70FA7E9AB72243049FEB8DEECC146B9B1",
                        "FFFFFFFFFFFFFFFFFFFFFFFF99DEF836146BC9B1B4D22831",
                        "1",
                        "188DA80EB03090F67CBF20EB43A18800F4FF0AFD82FF1012",
                        "07192B95FFC8DA78631011ED6B24CDD573F977A11E794811",
                        []
                    ),
                    l.crypto.ECParameterDB.regist(
                        "secp224r1",
                        224,
                        "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000001",
                        "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFE",
                        "B4050A850C04B3ABF54132565044B0B7D7BFD8BA270B39432355FFB4",
                        "FFFFFFFFFFFFFFFFFFFFFFFFFFFF16A2E0B8F03E13DD29455C5C2A3D",
                        "1",
                        "B70E0CBD6BB4BF7F321390B94A03C1D356C21122343280D6115C1D21",
                        "BD376388B5F723FB4C22DFE6CD4375A05A07476444D5819985007E34",
                        []
                    ),
                    l.crypto.ECParameterDB.regist(
                        "secp256k1",
                        256,
                        "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F",
                        "0",
                        "7",
                        "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141",
                        "1",
                        "79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798",
                        "483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8",
                        []
                    ),
                    l.crypto.ECParameterDB.regist(
                        "secp256r1",
                        256,
                        "FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF",
                        "FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC",
                        "5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B",
                        "FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551",
                        "1",
                        "6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296",
                        "4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5",
                        ["NIST P-256", "P-256", "prime256v1"]
                    ),
                    l.crypto.ECParameterDB.regist(
                        "secp384r1",
                        384,
                        "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFF",
                        "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFC",
                        "B3312FA7E23EE7E4988E056BE3F82D19181D9C6EFE8141120314088F5013875AC656398D8A2ED19D2A85C8EDD3EC2AEF",
                        "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC7634D81F4372DDF581A0DB248B0A77AECEC196ACCC52973",
                        "1",
                        "AA87CA22BE8B05378EB1C71EF320AD746E1D3B628BA79B9859F741E082542A385502F25DBF55296C3A545E3872760AB7",
                        "3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f",
                        ["NIST P-384", "P-384"]
                    ),
                    l.crypto.ECParameterDB.regist(
                        "secp521r1",
                        521,
                        "1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                        "1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC",
                        "051953EB9618E1C9A1F929A21A0B68540EEA2DA725B99B315F3B8B489918EF109E156193951EC7E937B1652C0BD3BB1BF073573DF883D2C34F1EF451FD46B503F00",
                        "1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA51868783BF2F966B7FCC0148F709A5D03BB5C9B8899C47AEBB6FB71E91386409",
                        "1",
                        "C6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66",
                        "011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650",
                        ["NIST P-521", "P-521"]
                    ),
                    (void 0 !== l && l) || (l = {}),
                    (void 0 !== l.crypto && l.crypto) || (l.crypto = {}),
                    (l.crypto.DSA = function () {
                        (this.p = null),
                            (this.q = null),
                            (this.g = null),
                            (this.y = null),
                            (this.x = null),
                            (this.type = "DSA"),
                            (this.isPrivate = !1),
                            (this.isPublic = !1),
                            (this.setPrivate = function (t, e, n, r, i) {
                                (this.isPrivate = !0),
                                    (this.p = t),
                                    (this.q = e),
                                    (this.g = n),
                                    (this.y = r),
                                    (this.x = i);
                            }),
                            (this.setPrivateHex = function (t, e, n, r, i) {
                                var s, a, o, h, u;
                                (s = new A(t, 16)),
                                    (a = new A(e, 16)),
                                    (o = new A(n, 16)),
                                    (h =
                                        "string" == typeof r && r.length > 1
                                            ? new A(r, 16)
                                            : null),
                                    (u = new A(i, 16)),
                                    this.setPrivate(s, a, o, h, u);
                            }),
                            (this.setPublic = function (t, e, n, r) {
                                (this.isPublic = !0),
                                    (this.p = t),
                                    (this.q = e),
                                    (this.g = n),
                                    (this.y = r),
                                    (this.x = null);
                            }),
                            (this.setPublicHex = function (t, e, n, r) {
                                var i, s, a, o;
                                (i = new A(t, 16)),
                                    (s = new A(e, 16)),
                                    (a = new A(n, 16)),
                                    (o = new A(r, 16)),
                                    this.setPublic(i, s, a, o);
                            }),
                            (this.signWithMessageHash = function (t) {
                                var e = this.p,
                                    n = this.q,
                                    r = this.g,
                                    i = (this.y, this.x),
                                    s =
                                        l.crypto.Util.getRandomBigIntegerMinToMax(
                                            A.ONE.add(A.ONE),
                                            n.subtract(A.ONE)
                                        ),
                                    a = new A(
                                        t.substr(0, n.bitLength() / 4),
                                        16
                                    ),
                                    o = r.modPow(s, e).mod(n),
                                    h = s
                                        .modInverse(n)
                                        .multiply(a.add(i.multiply(o)))
                                        .mod(n);
                                return l.asn1.ASN1Util.jsonToASN1HEX({
                                    seq: [
                                        { int: { bigint: o } },
                                        { int: { bigint: h } },
                                    ],
                                });
                            }),
                            (this.verifyWithMessageHash = function (t, e) {
                                var n = this.p,
                                    r = this.q,
                                    i = this.g,
                                    s = this.y,
                                    a = this.parseASN1Signature(e),
                                    o = a[0],
                                    h = a[1],
                                    u = new A(
                                        t.substr(0, r.bitLength() / 4),
                                        16
                                    );
                                if (
                                    A.ZERO.compareTo(o) > 0 ||
                                    o.compareTo(r) > 0
                                )
                                    throw "invalid DSA signature";
                                if (
                                    A.ZERO.compareTo(h) > 0 ||
                                    h.compareTo(r) > 0
                                )
                                    throw "invalid DSA signature";
                                var c = h.modInverse(r),
                                    l = u.multiply(c).mod(r),
                                    f = o.multiply(c).mod(r);
                                return (
                                    0 ==
                                    i
                                        .modPow(l, n)
                                        .multiply(s.modPow(f, n))
                                        .mod(n)
                                        .mod(r)
                                        .compareTo(o)
                                );
                            }),
                            (this.parseASN1Signature = function (t) {
                                try {
                                    return [
                                        new A(
                                            ht.getVbyList(t, 0, [0], "02"),
                                            16
                                        ),
                                        new A(
                                            ht.getVbyList(t, 0, [1], "02"),
                                            16
                                        ),
                                    ];
                                } catch (t) {
                                    throw "malformed ASN.1 DSA signature";
                                }
                            }),
                            (this.readPKCS5PrvKeyHex = function (t) {
                                var e,
                                    n,
                                    r,
                                    i,
                                    s,
                                    a = ht,
                                    o = a.getVbyList;
                                if (!1 === a.isASN1HEX(t))
                                    throw "not ASN.1 hex string";
                                try {
                                    (e = o(t, 0, [1], "02")),
                                        (n = o(t, 0, [2], "02")),
                                        (r = o(t, 0, [3], "02")),
                                        (i = o(t, 0, [4], "02")),
                                        (s = o(t, 0, [5], "02"));
                                } catch (t) {
                                    throw "malformed PKCS#1/5 plain DSA private key";
                                }
                                this.setPrivateHex(e, n, r, i, s);
                            }),
                            (this.readPKCS8PrvKeyHex = function (t) {
                                var e,
                                    n,
                                    r,
                                    i,
                                    s = ht,
                                    a = s.getVbyList;
                                if (!1 === s.isASN1HEX(t))
                                    throw "not ASN.1 hex string";
                                try {
                                    (e = a(t, 0, [1, 1, 0], "02")),
                                        (n = a(t, 0, [1, 1, 1], "02")),
                                        (r = a(t, 0, [1, 1, 2], "02")),
                                        (i = a(t, 0, [2, 0], "02"));
                                } catch (t) {
                                    throw "malformed PKCS#8 plain DSA private key";
                                }
                                this.setPrivateHex(e, n, r, null, i);
                            }),
                            (this.readPKCS8PubKeyHex = function (t) {
                                var e,
                                    n,
                                    r,
                                    i,
                                    s = ht,
                                    a = s.getVbyList;
                                if (!1 === s.isASN1HEX(t))
                                    throw "not ASN.1 hex string";
                                try {
                                    (e = a(t, 0, [0, 1, 0], "02")),
                                        (n = a(t, 0, [0, 1, 1], "02")),
                                        (r = a(t, 0, [0, 1, 2], "02")),
                                        (i = a(t, 0, [1, 0], "02"));
                                } catch (t) {
                                    throw "malformed PKCS#8 DSA public key";
                                }
                                this.setPublicHex(e, n, r, i);
                            }),
                            (this.readCertPubKeyHex = function (t, e) {
                                var n, r, i, s;
                                5 !== e && (e = 6);
                                var a = ht,
                                    o = a.getVbyList;
                                if (!1 === a.isASN1HEX(t))
                                    throw "not ASN.1 hex string";
                                try {
                                    (n = o(t, 0, [0, e, 0, 1, 0], "02")),
                                        (r = o(t, 0, [0, e, 0, 1, 1], "02")),
                                        (i = o(t, 0, [0, e, 0, 1, 2], "02")),
                                        (s = o(t, 0, [0, e, 1, 0], "02"));
                                } catch (t) {
                                    throw "malformed X.509 certificate DSA public key";
                                }
                                this.setPublicHex(n, r, i, s);
                            });
                    });
                var Et = (function () {
                        var t = function (t, n, r) {
                                return e(p.AES, t, n, r);
                            },
                            e = function (t, e, n, r) {
                                var i = p.enc.Hex.parse(e),
                                    s = p.enc.Hex.parse(n),
                                    a = p.enc.Hex.parse(r),
                                    o = {};
                                (o.key = s), (o.iv = a), (o.ciphertext = i);
                                var h = t.decrypt(o, s, { iv: a });
                                return p.enc.Hex.stringify(h);
                            },
                            n = function (t, e, n) {
                                return r(p.AES, t, e, n);
                            },
                            r = function (t, e, n, r) {
                                var i = p.enc.Hex.parse(e),
                                    s = p.enc.Hex.parse(n),
                                    a = p.enc.Hex.parse(r),
                                    o = t.encrypt(i, s, { iv: a }),
                                    h = p.enc.Hex.parse(o.toString());
                                return p.enc.Base64.stringify(h);
                            },
                            i = {
                                "AES-256-CBC": {
                                    proc: t,
                                    eproc: n,
                                    keylen: 32,
                                    ivlen: 16,
                                },
                                "AES-192-CBC": {
                                    proc: t,
                                    eproc: n,
                                    keylen: 24,
                                    ivlen: 16,
                                },
                                "AES-128-CBC": {
                                    proc: t,
                                    eproc: n,
                                    keylen: 16,
                                    ivlen: 16,
                                },
                                "DES-EDE3-CBC": {
                                    proc: function (t, n, r) {
                                        return e(p.TripleDES, t, n, r);
                                    },
                                    eproc: function (t, e, n) {
                                        return r(p.TripleDES, t, e, n);
                                    },
                                    keylen: 24,
                                    ivlen: 8,
                                },
                            },
                            s = function (t) {
                                var e = {},
                                    n = t.match(
                                        new RegExp(
                                            "DEK-Info: ([^,]+),([0-9A-Fa-f]+)",
                                            "m"
                                        )
                                    );
                                n && ((e.cipher = n[1]), (e.ivsalt = n[2]));
                                var r = t.match(
                                    new RegExp(
                                        "-----BEGIN ([A-Z]+) PRIVATE KEY-----"
                                    )
                                );
                                r && (e.type = r[1]);
                                var i = -1,
                                    s = 0;
                                -1 != t.indexOf("\r\n\r\n") &&
                                    ((i = t.indexOf("\r\n\r\n")), (s = 2)),
                                    -1 != t.indexOf("\n\n") &&
                                        ((i = t.indexOf("\n\n")), (s = 1));
                                var a = t.indexOf("-----END");
                                if (-1 != i && -1 != a) {
                                    var o = t.substring(i + 2 * s, a - s);
                                    (o = o.replace(/\s+/g, "")), (e.data = o);
                                }
                                return e;
                            },
                            a = function (t, e, n) {
                                for (
                                    var r = n.substring(0, 16),
                                        s = p.enc.Hex.parse(r),
                                        a = p.enc.Utf8.parse(e),
                                        o = i[t].keylen + i[t].ivlen,
                                        h = "",
                                        u = null;
                                    ;

                                ) {
                                    var c = p.algo.MD5.create();
                                    if (
                                        (null != u && c.update(u),
                                        c.update(a),
                                        c.update(s),
                                        (u = c.finalize()),
                                        (h += p.enc.Hex.stringify(u)).length >=
                                            2 * o)
                                    )
                                        break;
                                }
                                var l = {};
                                return (
                                    (l.keyhex = h.substr(0, 2 * i[t].keylen)),
                                    (l.ivhex = h.substr(
                                        2 * i[t].keylen,
                                        2 * i[t].ivlen
                                    )),
                                    l
                                );
                            },
                            o = function (t, e, n, r) {
                                var s = p.enc.Base64.parse(t),
                                    a = p.enc.Hex.stringify(s);
                                return (0, i[e].proc)(a, n, r);
                            };
                        return {
                            version: "1.0.5",
                            getHexFromPEM: function (t, e) {
                                return ht.pemToHex(t, e);
                            },
                            getDecryptedKeyHexByKeyIV: function (t, e, n, r) {
                                return (function (t) {
                                    return i[t].proc;
                                })(e)(t, n, r);
                            },
                            parsePKCS5PEM: function (t) {
                                return s(t);
                            },
                            getKeyAndUnusedIvByPasscodeAndIvsalt: function (
                                t,
                                e,
                                n
                            ) {
                                return a(t, e, n);
                            },
                            decryptKeyB64: function (t, e, n, r) {
                                return o(t, e, n, r);
                            },
                            getDecryptedKeyHex: function (t, e) {
                                var n = s(t),
                                    r = (n.type, n.cipher),
                                    i = n.ivsalt,
                                    h = n.data,
                                    u = a(r, e, i).keyhex;
                                return o(h, r, u, i);
                            },
                            getRSAKeyFromEncryptedPKCS5PEM: function (t, e) {
                                var n = this.getDecryptedKeyHex(t, e),
                                    r = new tt();
                                return r.readPrivateKeyFromASN1HexString(n), r;
                            },
                            getEncryptedPKCS5PEMFromPrvKeyHex: function (
                                t,
                                e,
                                n,
                                r
                            ) {
                                if (
                                    ((void 0 !== n && null != n) ||
                                        (n = "AES-256-CBC"),
                                    void 0 === i[n])
                                )
                                    throw (
                                        "PKCS5PKEY unsupported algorithm: " + n
                                    );
                                (void 0 !== r && null != r) ||
                                    (r = (function (t) {
                                        var e = p.lib.WordArray.random(t);
                                        return p.enc.Hex.stringify(e);
                                    })(i[n].ivlen).toUpperCase());
                                var s = "-----BEGIN RSA PRIVATE KEY-----\r\n";
                                return (
                                    (s += "Proc-Type: 4,ENCRYPTED\r\n"),
                                    (s += "DEK-Info: " + n + "," + r + "\r\n"),
                                    (s += "\r\n"),
                                    (s += (function (t, e, n, r) {
                                        return (0, i[e].eproc)(t, n, r);
                                    })(t, n, a(n, e, r).keyhex, r).replace(
                                        /(.{64})/g,
                                        "$1\r\n"
                                    )) + "\r\n-----END RSA PRIVATE KEY-----\r\n"
                                );
                            },
                            getEncryptedPKCS5PEMFromRSAKey: function (
                                t,
                                e,
                                n,
                                r
                            ) {
                                var i = new l.asn1.DERInteger({ int: 0 }),
                                    s = new l.asn1.DERInteger({ bigint: t.n }),
                                    a = new l.asn1.DERInteger({ int: t.e }),
                                    o = new l.asn1.DERInteger({ bigint: t.d }),
                                    h = new l.asn1.DERInteger({ bigint: t.p }),
                                    u = new l.asn1.DERInteger({ bigint: t.q }),
                                    c = new l.asn1.DERInteger({
                                        bigint: t.dmp1,
                                    }),
                                    f = new l.asn1.DERInteger({
                                        bigint: t.dmq1,
                                    }),
                                    d = new l.asn1.DERInteger({
                                        bigint: t.coeff,
                                    }),
                                    g = new l.asn1.DERSequence({
                                        array: [i, s, a, o, h, u, c, f, d],
                                    }).getEncodedHex();
                                return this.getEncryptedPKCS5PEMFromPrvKeyHex(
                                    g,
                                    e,
                                    n,
                                    r
                                );
                            },
                            newEncryptedPKCS5PEM: function (t, e, n, r) {
                                return (
                                    (void 0 !== e && null != e) || (e = 1024),
                                    (void 0 !== n && null != n) ||
                                        (n = "10001"),
                                    new tt().generate(e, n),
                                    void 0 === r || null == r
                                        ? this.getEncryptedPKCS5PEMFromRSAKey(
                                              pkey,
                                              t
                                          )
                                        : this.getEncryptedPKCS5PEMFromRSAKey(
                                              pkey,
                                              t,
                                              r
                                          )
                                );
                            },
                            getRSAKeyFromPlainPKCS8PEM: function (t) {
                                if (t.match(/ENCRYPTED/))
                                    throw "pem shall be not ENCRYPTED";
                                var e = ht.pemToHex(t, "PRIVATE KEY");
                                return this.getRSAKeyFromPlainPKCS8Hex(e);
                            },
                            getRSAKeyFromPlainPKCS8Hex: function (t) {
                                var e = new tt();
                                return e.readPKCS8PrvKeyHex(t), e;
                            },
                            parseHexOfEncryptedPKCS8: function (t) {
                                var e = {},
                                    n = ht.getPosArrayOfChildren_AtObj(t, 0);
                                if (2 != n.length)
                                    throw (
                                        "malformed format: SEQUENCE(0).items != 2: " +
                                        n.length
                                    );
                                e.ciphertext = ht.getHexOfV_AtObj(t, n[1]);
                                var r = ht.getPosArrayOfChildren_AtObj(t, n[0]);
                                if (2 != r.length)
                                    throw (
                                        "malformed format: SEQUENCE(0.0).items != 2: " +
                                        r.length
                                    );
                                if (
                                    "2a864886f70d01050d" !=
                                    ht.getHexOfV_AtObj(t, r[0])
                                )
                                    throw "this only supports pkcs5PBES2";
                                var i = ht.getPosArrayOfChildren_AtObj(t, r[1]);
                                if (2 != r.length)
                                    throw (
                                        "malformed format: SEQUENCE(0.0.1).items != 2: " +
                                        i.length
                                    );
                                var s = ht.getPosArrayOfChildren_AtObj(t, i[1]);
                                if (2 != s.length)
                                    throw (
                                        "malformed format: SEQUENCE(0.0.1.1).items != 2: " +
                                        s.length
                                    );
                                if (
                                    "2a864886f70d0307" !=
                                    ht.getHexOfV_AtObj(t, s[0])
                                )
                                    throw "this only supports TripleDES";
                                (e.encryptionSchemeAlg = "TripleDES"),
                                    (e.encryptionSchemeIV = ht.getHexOfV_AtObj(
                                        t,
                                        s[1]
                                    ));
                                var a = ht.getPosArrayOfChildren_AtObj(t, i[0]);
                                if (2 != a.length)
                                    throw (
                                        "malformed format: SEQUENCE(0.0.1.0).items != 2: " +
                                        a.length
                                    );
                                if (
                                    "2a864886f70d01050c" !=
                                    ht.getHexOfV_AtObj(t, a[0])
                                )
                                    throw "this only supports pkcs5PBKDF2";
                                var o = ht.getPosArrayOfChildren_AtObj(t, a[1]);
                                if (o.length < 2)
                                    throw (
                                        "malformed format: SEQUENCE(0.0.1.0.1).items < 2: " +
                                        o.length
                                    );
                                e.pbkdf2Salt = ht.getHexOfV_AtObj(t, o[0]);
                                var h = ht.getHexOfV_AtObj(t, o[1]);
                                try {
                                    e.pbkdf2Iter = parseInt(h, 16);
                                } catch (t) {
                                    throw "malformed format pbkdf2Iter: " + h;
                                }
                                return e;
                            },
                            getPBKDF2KeyHexFromParam: function (t, e) {
                                var n = p.enc.Hex.parse(t.pbkdf2Salt),
                                    r = t.pbkdf2Iter,
                                    i = p.PBKDF2(e, n, {
                                        keySize: 6,
                                        iterations: r,
                                    });
                                return p.enc.Hex.stringify(i);
                            },
                            getPlainPKCS8HexFromEncryptedPKCS8PEM: function (
                                t,
                                e
                            ) {
                                var n = ht.pemToHex(t, "ENCRYPTED PRIVATE KEY"),
                                    r = this.parseHexOfEncryptedPKCS8(n),
                                    i = Et.getPBKDF2KeyHexFromParam(r, e),
                                    s = {};
                                s.ciphertext = p.enc.Hex.parse(r.ciphertext);
                                var a = p.enc.Hex.parse(i),
                                    o = p.enc.Hex.parse(r.encryptionSchemeIV),
                                    h = p.TripleDES.decrypt(s, a, { iv: o });
                                return p.enc.Hex.stringify(h);
                            },
                            getRSAKeyFromEncryptedPKCS8PEM: function (t, e) {
                                var n =
                                    this.getPlainPKCS8HexFromEncryptedPKCS8PEM(
                                        t,
                                        e
                                    );
                                return this.getRSAKeyFromPlainPKCS8Hex(n);
                            },
                            getKeyFromEncryptedPKCS8PEM: function (t, e) {
                                var n =
                                    this.getPlainPKCS8HexFromEncryptedPKCS8PEM(
                                        t,
                                        e
                                    );
                                return this.getKeyFromPlainPrivatePKCS8Hex(n);
                            },
                            parsePlainPrivatePKCS8Hex: function (t) {
                                var e = { algparam: null };
                                if ("30" != t.substr(0, 2))
                                    throw "malformed plain PKCS8 private key(code:001)";
                                var n = ht.getPosArrayOfChildren_AtObj(t, 0);
                                if (3 != n.length)
                                    throw "malformed plain PKCS8 private key(code:002)";
                                if ("30" != t.substr(n[1], 2))
                                    throw "malformed PKCS8 private key(code:003)";
                                var r = ht.getPosArrayOfChildren_AtObj(t, n[1]);
                                if (2 != r.length)
                                    throw "malformed PKCS8 private key(code:004)";
                                if ("06" != t.substr(r[0], 2))
                                    throw "malformed PKCS8 private key(code:005)";
                                if (
                                    ((e.algoid = ht.getHexOfV_AtObj(t, r[0])),
                                    "06" == t.substr(r[1], 2) &&
                                        (e.algparam = ht.getHexOfV_AtObj(
                                            t,
                                            r[1]
                                        )),
                                    "04" != t.substr(n[2], 2))
                                )
                                    throw "malformed PKCS8 private key(code:006)";
                                return (
                                    (e.keyidx = ht.getStartPosOfV_AtObj(
                                        t,
                                        n[2]
                                    )),
                                    e
                                );
                            },
                            getKeyFromPlainPrivatePKCS8PEM: function (t) {
                                var e = ht.pemToHex(t, "PRIVATE KEY");
                                return this.getKeyFromPlainPrivatePKCS8Hex(e);
                            },
                            getKeyFromPlainPrivatePKCS8Hex: function (t) {
                                var e,
                                    n = this.parsePlainPrivatePKCS8Hex(t);
                                if ("2a864886f70d010101" == n.algoid)
                                    e = new tt();
                                else if ("2a8648ce380401" == n.algoid)
                                    e = new l.crypto.DSA();
                                else {
                                    if ("2a8648ce3d0201" != n.algoid)
                                        throw "unsupported private key algorithm";
                                    e = new l.crypto.ECDSA();
                                }
                                return e.readPKCS8PrvKeyHex(t), e;
                            },
                            getRSAKeyFromPublicPKCS8PEM: function (t) {
                                var e = ht.pemToHex(t, "PUBLIC KEY");
                                return this.getRSAKeyFromPublicPKCS8Hex(e);
                            },
                            getKeyFromPublicPKCS8PEM: function (t) {
                                var e = ht.pemToHex(t, "PUBLIC KEY");
                                return this.getKeyFromPublicPKCS8Hex(e);
                            },
                            getKeyFromPublicPKCS8Hex: function (t) {
                                var e,
                                    n = ht.getVbyList(h, 0, [0, 0], "06");
                                if ("2a864886f70d010101" === n) e = new tt();
                                else if ("2a8648ce380401" === n)
                                    e = new l.crypto.DSA();
                                else {
                                    if ("2a8648ce3d0201" !== n)
                                        throw "unsupported PKCS#8 public key hex";
                                    e = new l.crypto.ECDSA();
                                }
                                return e.readPKCS8PubKeyHex(h), e;
                            },
                            parsePublicRawRSAKeyHex: function (t) {
                                var e = {};
                                if ("30" != t.substr(0, 2))
                                    throw "malformed RSA key(code:001)";
                                var n = ht.getPosArrayOfChildren_AtObj(t, 0);
                                if (2 != n.length)
                                    throw "malformed RSA key(code:002)";
                                if ("02" != t.substr(n[0], 2))
                                    throw "malformed RSA key(code:003)";
                                if (
                                    ((e.n = ht.getHexOfV_AtObj(t, n[0])),
                                    "02" != t.substr(n[1], 2))
                                )
                                    throw "malformed RSA key(code:004)";
                                return (e.e = ht.getHexOfV_AtObj(t, n[1])), e;
                            },
                            parsePrivateRawRSAKeyHexAtObj: function (t, e) {
                                var n = e.keyidx;
                                if ("30" != t.substr(n, 2))
                                    throw "malformed RSA private key(code:001)";
                                var r = ht.getPosArrayOfChildren_AtObj(t, n);
                                if (9 != r.length)
                                    throw "malformed RSA private key(code:002)";
                                (e.key = {}),
                                    (e.key.n = ht.getHexOfV_AtObj(t, r[1])),
                                    (e.key.e = ht.getHexOfV_AtObj(t, r[2])),
                                    (e.key.d = ht.getHexOfV_AtObj(t, r[3])),
                                    (e.key.p = ht.getHexOfV_AtObj(t, r[4])),
                                    (e.key.q = ht.getHexOfV_AtObj(t, r[5])),
                                    (e.key.dp = ht.getHexOfV_AtObj(t, r[6])),
                                    (e.key.dq = ht.getHexOfV_AtObj(t, r[7])),
                                    (e.key.co = ht.getHexOfV_AtObj(t, r[8]));
                            },
                            parsePrivateRawECKeyHexAtObj: function (t, e) {
                                var n = e.keyidx;
                                if ("30" != t.substr(n, 2))
                                    throw "malformed ECC private key(code:001)";
                                var r = ht.getPosArrayOfChildren_AtObj(t, n);
                                if (3 != r.length)
                                    throw "malformed ECC private key(code:002)";
                                if ("04" != t.substr(r[1], 2))
                                    throw "malformed ECC private key(code:003)";
                                e.key = ht.getHexOfV_AtObj(t, r[1]);
                            },
                            parsePublicPKCS8Hex: function (t) {
                                var e = { algparam: null },
                                    n = ht.getPosArrayOfChildren_AtObj(t, 0);
                                if (2 != n.length)
                                    throw (
                                        "outer DERSequence shall have 2 elements: " +
                                        n.length
                                    );
                                var r = n[0];
                                if ("30" != t.substr(r, 2))
                                    throw "malformed PKCS8 public key(code:001)";
                                var i = ht.getPosArrayOfChildren_AtObj(t, r);
                                if (2 != i.length)
                                    throw "malformed PKCS8 public key(code:002)";
                                if ("06" != t.substr(i[0], 2))
                                    throw "malformed PKCS8 public key(code:003)";
                                if (
                                    ((e.algoid = ht.getHexOfV_AtObj(t, i[0])),
                                    "06" == t.substr(i[1], 2) &&
                                        (e.algparam = ht.getHexOfV_AtObj(
                                            t,
                                            i[1]
                                        )),
                                    "03" != t.substr(n[1], 2))
                                )
                                    throw "malformed PKCS8 public key(code:004)";
                                return (
                                    (e.key = ht
                                        .getHexOfV_AtObj(t, n[1])
                                        .substr(2)),
                                    e
                                );
                            },
                            getRSAKeyFromPublicPKCS8Hex: function (t) {
                                var e = new tt();
                                return e.readPKCS8PubKeyHex(t), e;
                            },
                        };
                    })(),
                    xt = (function () {
                        var t = function (t, n, r) {
                                return e(p.AES, t, n, r);
                            },
                            e = function (t, e, n, r) {
                                var i = p.enc.Hex.parse(e),
                                    s = p.enc.Hex.parse(n),
                                    a = p.enc.Hex.parse(r),
                                    o = {};
                                (o.key = s), (o.iv = a), (o.ciphertext = i);
                                var h = t.decrypt(o, s, { iv: a });
                                return p.enc.Hex.stringify(h);
                            },
                            n = function (t, e, n) {
                                return r(p.AES, t, e, n);
                            },
                            r = function (t, e, n, r) {
                                var i = p.enc.Hex.parse(e),
                                    s = p.enc.Hex.parse(n),
                                    a = p.enc.Hex.parse(r),
                                    o = t.encrypt(i, s, { iv: a }),
                                    h = p.enc.Hex.parse(o.toString());
                                return p.enc.Base64.stringify(h);
                            },
                            i = {
                                "AES-256-CBC": {
                                    proc: t,
                                    eproc: n,
                                    keylen: 32,
                                    ivlen: 16,
                                },
                                "AES-192-CBC": {
                                    proc: t,
                                    eproc: n,
                                    keylen: 24,
                                    ivlen: 16,
                                },
                                "AES-128-CBC": {
                                    proc: t,
                                    eproc: n,
                                    keylen: 16,
                                    ivlen: 16,
                                },
                                "DES-EDE3-CBC": {
                                    proc: function (t, n, r) {
                                        return e(p.TripleDES, t, n, r);
                                    },
                                    eproc: function (t, e, n) {
                                        return r(p.TripleDES, t, e, n);
                                    },
                                    keylen: 24,
                                    ivlen: 8,
                                },
                                "DES-CBC": {
                                    proc: function (t, n, r) {
                                        return e(p.DES, t, n, r);
                                    },
                                    eproc: function (t, e, n) {
                                        return r(p.DES, t, e, n);
                                    },
                                    keylen: 8,
                                    ivlen: 8,
                                },
                            },
                            s = function (t) {
                                var e = {},
                                    n = t.match(
                                        new RegExp(
                                            "DEK-Info: ([^,]+),([0-9A-Fa-f]+)",
                                            "m"
                                        )
                                    );
                                n && ((e.cipher = n[1]), (e.ivsalt = n[2]));
                                var r = t.match(
                                    new RegExp(
                                        "-----BEGIN ([A-Z]+) PRIVATE KEY-----"
                                    )
                                );
                                r && (e.type = r[1]);
                                var i = -1,
                                    s = 0;
                                -1 != t.indexOf("\r\n\r\n") &&
                                    ((i = t.indexOf("\r\n\r\n")), (s = 2)),
                                    -1 != t.indexOf("\n\n") &&
                                        ((i = t.indexOf("\n\n")), (s = 1));
                                var a = t.indexOf("-----END");
                                if (-1 != i && -1 != a) {
                                    var o = t.substring(i + 2 * s, a - s);
                                    (o = o.replace(/\s+/g, "")), (e.data = o);
                                }
                                return e;
                            },
                            a = function (t, e, n) {
                                for (
                                    var r = n.substring(0, 16),
                                        s = p.enc.Hex.parse(r),
                                        a = p.enc.Utf8.parse(e),
                                        o = i[t].keylen + i[t].ivlen,
                                        h = "",
                                        u = null;
                                    ;

                                ) {
                                    var c = p.algo.MD5.create();
                                    if (
                                        (null != u && c.update(u),
                                        c.update(a),
                                        c.update(s),
                                        (u = c.finalize()),
                                        (h += p.enc.Hex.stringify(u)).length >=
                                            2 * o)
                                    )
                                        break;
                                }
                                var l = {};
                                return (
                                    (l.keyhex = h.substr(0, 2 * i[t].keylen)),
                                    (l.ivhex = h.substr(
                                        2 * i[t].keylen,
                                        2 * i[t].ivlen
                                    )),
                                    l
                                );
                            },
                            o = function (t, e, n, r) {
                                var s = p.enc.Base64.parse(t),
                                    a = p.enc.Hex.stringify(s);
                                return (0, i[e].proc)(a, n, r);
                            };
                        return {
                            version: "1.0.0",
                            getHexFromPEM: function (t, e) {
                                return ht.pemToHex(t, e);
                            },
                            getDecryptedKeyHexByKeyIV: function (t, e, n, r) {
                                return (function (t) {
                                    return i[t].proc;
                                })(e)(t, n, r);
                            },
                            parsePKCS5PEM: function (t) {
                                return s(t);
                            },
                            getKeyAndUnusedIvByPasscodeAndIvsalt: function (
                                t,
                                e,
                                n
                            ) {
                                return a(t, e, n);
                            },
                            decryptKeyB64: function (t, e, n, r) {
                                return o(t, e, n, r);
                            },
                            getDecryptedKeyHex: function (t, e) {
                                var n = s(t),
                                    r = (n.type, n.cipher),
                                    i = n.ivsalt,
                                    h = n.data,
                                    u = a(r, e, i).keyhex;
                                return o(h, r, u, i);
                            },
                            getRSAKeyFromEncryptedPKCS5PEM: function (t, e) {
                                var n = this.getDecryptedKeyHex(t, e),
                                    r = new tt();
                                return r.readPrivateKeyFromASN1HexString(n), r;
                            },
                            getEncryptedPKCS5PEMFromPrvKeyHex: function (
                                t,
                                e,
                                n,
                                r,
                                s
                            ) {
                                var o = "";
                                if (
                                    ((void 0 !== r && null != r) ||
                                        (r = "AES-256-CBC"),
                                    void 0 === i[r])
                                )
                                    throw "KEYUTIL unsupported algorithm: " + r;
                                return (
                                    (void 0 !== s && null != s) ||
                                        (s = (function (t) {
                                            var e = p.lib.WordArray.random(t);
                                            return p.enc.Hex.stringify(e);
                                        })(i[r].ivlen).toUpperCase()),
                                    (o =
                                        "-----BEGIN " +
                                        t +
                                        " PRIVATE KEY-----\r\n"),
                                    (o += "Proc-Type: 4,ENCRYPTED\r\n"),
                                    (o += "DEK-Info: " + r + "," + s + "\r\n"),
                                    (o += "\r\n"),
                                    (o += (function (t, e, n, r) {
                                        return (0, i[e].eproc)(t, n, r);
                                    })(e, r, a(r, n, s).keyhex, s).replace(
                                        /(.{64})/g,
                                        "$1\r\n"
                                    )) +
                                        "\r\n-----END " +
                                        t +
                                        " PRIVATE KEY-----\r\n"
                                );
                            },
                            getEncryptedPKCS5PEMFromRSAKey: function (
                                t,
                                e,
                                n,
                                r
                            ) {
                                var i = new l.asn1.DERInteger({ int: 0 }),
                                    s = new l.asn1.DERInteger({ bigint: t.n }),
                                    a = new l.asn1.DERInteger({ int: t.e }),
                                    o = new l.asn1.DERInteger({ bigint: t.d }),
                                    h = new l.asn1.DERInteger({ bigint: t.p }),
                                    u = new l.asn1.DERInteger({ bigint: t.q }),
                                    c = new l.asn1.DERInteger({
                                        bigint: t.dmp1,
                                    }),
                                    f = new l.asn1.DERInteger({
                                        bigint: t.dmq1,
                                    }),
                                    d = new l.asn1.DERInteger({
                                        bigint: t.coeff,
                                    }),
                                    g = new l.asn1.DERSequence({
                                        array: [i, s, a, o, h, u, c, f, d],
                                    }).getEncodedHex();
                                return this.getEncryptedPKCS5PEMFromPrvKeyHex(
                                    "RSA",
                                    g,
                                    e,
                                    n,
                                    r
                                );
                            },
                            newEncryptedPKCS5PEM: function (t, e, n, r) {
                                (void 0 !== e && null != e) || (e = 1024),
                                    (void 0 !== n && null != n) ||
                                        (n = "10001");
                                var i = new tt();
                                return (
                                    i.generate(e, n),
                                    void 0 === r || null == r
                                        ? this.getEncryptedPKCS5PEMFromRSAKey(
                                              i,
                                              t
                                          )
                                        : this.getEncryptedPKCS5PEMFromRSAKey(
                                              i,
                                              t,
                                              r
                                          )
                                );
                            },
                            getRSAKeyFromPlainPKCS8PEM: function (t) {
                                if (t.match(/ENCRYPTED/))
                                    throw "pem shall be not ENCRYPTED";
                                var e = ht.pemToHex(t, "PRIVATE KEY");
                                return this.getRSAKeyFromPlainPKCS8Hex(e);
                            },
                            getRSAKeyFromPlainPKCS8Hex: function (t) {
                                var e = new tt();
                                return e.readPKCS8PrvKeyHex(t), e;
                            },
                            parseHexOfEncryptedPKCS8: function (t) {
                                var e = {},
                                    n = ht.getPosArrayOfChildren_AtObj(t, 0);
                                if (2 != n.length)
                                    throw (
                                        "malformed format: SEQUENCE(0).items != 2: " +
                                        n.length
                                    );
                                e.ciphertext = ht.getHexOfV_AtObj(t, n[1]);
                                var r = ht.getPosArrayOfChildren_AtObj(t, n[0]);
                                if (2 != r.length)
                                    throw (
                                        "malformed format: SEQUENCE(0.0).items != 2: " +
                                        r.length
                                    );
                                if (
                                    "2a864886f70d01050d" !=
                                    ht.getHexOfV_AtObj(t, r[0])
                                )
                                    throw "this only supports pkcs5PBES2";
                                var i = ht.getPosArrayOfChildren_AtObj(t, r[1]);
                                if (2 != r.length)
                                    throw (
                                        "malformed format: SEQUENCE(0.0.1).items != 2: " +
                                        i.length
                                    );
                                var s = ht.getPosArrayOfChildren_AtObj(t, i[1]);
                                if (2 != s.length)
                                    throw (
                                        "malformed format: SEQUENCE(0.0.1.1).items != 2: " +
                                        s.length
                                    );
                                if (
                                    "2a864886f70d0307" !=
                                    ht.getHexOfV_AtObj(t, s[0])
                                )
                                    throw "this only supports TripleDES";
                                (e.encryptionSchemeAlg = "TripleDES"),
                                    (e.encryptionSchemeIV = ht.getHexOfV_AtObj(
                                        t,
                                        s[1]
                                    ));
                                var a = ht.getPosArrayOfChildren_AtObj(t, i[0]);
                                if (2 != a.length)
                                    throw (
                                        "malformed format: SEQUENCE(0.0.1.0).items != 2: " +
                                        a.length
                                    );
                                if (
                                    "2a864886f70d01050c" !=
                                    ht.getHexOfV_AtObj(t, a[0])
                                )
                                    throw "this only supports pkcs5PBKDF2";
                                var o = ht.getPosArrayOfChildren_AtObj(t, a[1]);
                                if (o.length < 2)
                                    throw (
                                        "malformed format: SEQUENCE(0.0.1.0.1).items < 2: " +
                                        o.length
                                    );
                                e.pbkdf2Salt = ht.getHexOfV_AtObj(t, o[0]);
                                var h = ht.getHexOfV_AtObj(t, o[1]);
                                try {
                                    e.pbkdf2Iter = parseInt(h, 16);
                                } catch (t) {
                                    throw "malformed format pbkdf2Iter: " + h;
                                }
                                return e;
                            },
                            getPBKDF2KeyHexFromParam: function (t, e) {
                                var n = p.enc.Hex.parse(t.pbkdf2Salt),
                                    r = t.pbkdf2Iter,
                                    i = p.PBKDF2(e, n, {
                                        keySize: 6,
                                        iterations: r,
                                    });
                                return p.enc.Hex.stringify(i);
                            },
                            getPlainPKCS8HexFromEncryptedPKCS8PEM: function (
                                t,
                                e
                            ) {
                                var n = ht.pemToHex(t, "ENCRYPTED PRIVATE KEY"),
                                    r = this.parseHexOfEncryptedPKCS8(n),
                                    i = xt.getPBKDF2KeyHexFromParam(r, e),
                                    s = {};
                                s.ciphertext = p.enc.Hex.parse(r.ciphertext);
                                var a = p.enc.Hex.parse(i),
                                    o = p.enc.Hex.parse(r.encryptionSchemeIV),
                                    h = p.TripleDES.decrypt(s, a, { iv: o });
                                return p.enc.Hex.stringify(h);
                            },
                            getRSAKeyFromEncryptedPKCS8PEM: function (t, e) {
                                var n =
                                    this.getPlainPKCS8HexFromEncryptedPKCS8PEM(
                                        t,
                                        e
                                    );
                                return this.getRSAKeyFromPlainPKCS8Hex(n);
                            },
                            getKeyFromEncryptedPKCS8PEM: function (t, e) {
                                var n =
                                    this.getPlainPKCS8HexFromEncryptedPKCS8PEM(
                                        t,
                                        e
                                    );
                                return this.getKeyFromPlainPrivatePKCS8Hex(n);
                            },
                            parsePlainPrivatePKCS8Hex: function (t) {
                                var e = { algparam: null };
                                if ("30" != t.substr(0, 2))
                                    throw "malformed plain PKCS8 private key(code:001)";
                                var n = ht.getPosArrayOfChildren_AtObj(t, 0);
                                if (3 != n.length)
                                    throw "malformed plain PKCS8 private key(code:002)";
                                if ("30" != t.substr(n[1], 2))
                                    throw "malformed PKCS8 private key(code:003)";
                                var r = ht.getPosArrayOfChildren_AtObj(t, n[1]);
                                if (2 != r.length)
                                    throw "malformed PKCS8 private key(code:004)";
                                if ("06" != t.substr(r[0], 2))
                                    throw "malformed PKCS8 private key(code:005)";
                                if (
                                    ((e.algoid = ht.getHexOfV_AtObj(t, r[0])),
                                    "06" == t.substr(r[1], 2) &&
                                        (e.algparam = ht.getHexOfV_AtObj(
                                            t,
                                            r[1]
                                        )),
                                    "04" != t.substr(n[2], 2))
                                )
                                    throw "malformed PKCS8 private key(code:006)";
                                return (
                                    (e.keyidx = ht.getStartPosOfV_AtObj(
                                        t,
                                        n[2]
                                    )),
                                    e
                                );
                            },
                            getKeyFromPlainPrivatePKCS8PEM: function (t) {
                                var e = ht.pemToHex(t, "PRIVATE KEY");
                                return this.getKeyFromPlainPrivatePKCS8Hex(e);
                            },
                            getKeyFromPlainPrivatePKCS8Hex: function (t) {
                                var e,
                                    n = this.parsePlainPrivatePKCS8Hex(t);
                                if ("2a864886f70d010101" == n.algoid)
                                    e = new tt();
                                else if ("2a8648ce380401" == n.algoid)
                                    e = new l.crypto.DSA();
                                else {
                                    if ("2a8648ce3d0201" != n.algoid)
                                        throw "unsupported private key algorithm";
                                    e = new l.crypto.ECDSA();
                                }
                                return e.readPKCS8PrvKeyHex(t), e;
                            },
                            getRSAKeyFromPublicPKCS8PEM: function (t) {
                                var e = ht.pemToHex(t, "PUBLIC KEY");
                                return this.getRSAKeyFromPublicPKCS8Hex(e);
                            },
                            getKeyFromPublicPKCS8PEM: function (t) {
                                var e = ht.pemToHex(t, "PUBLIC KEY");
                                return this.getKeyFromPublicPKCS8Hex(e);
                            },
                            getKeyFromPublicPKCS8Hex: function (t) {
                                var e,
                                    n = ht.getVbyList(t, 0, [0, 0], "06");
                                if ("2a864886f70d010101" === n) e = new tt();
                                else if ("2a8648ce380401" === n)
                                    e = new l.crypto.DSA();
                                else {
                                    if ("2a8648ce3d0201" !== n)
                                        throw "unsupported PKCS#8 public key hex";
                                    e = new l.crypto.ECDSA();
                                }
                                return e.readPKCS8PubKeyHex(t), e;
                            },
                            parsePublicRawRSAKeyHex: function (t) {
                                var e = {};
                                if ("30" != t.substr(0, 2))
                                    throw "malformed RSA key(code:001)";
                                var n = ht.getPosArrayOfChildren_AtObj(t, 0);
                                if (2 != n.length)
                                    throw "malformed RSA key(code:002)";
                                if ("02" != t.substr(n[0], 2))
                                    throw "malformed RSA key(code:003)";
                                if (
                                    ((e.n = ht.getHexOfV_AtObj(t, n[0])),
                                    "02" != t.substr(n[1], 2))
                                )
                                    throw "malformed RSA key(code:004)";
                                return (e.e = ht.getHexOfV_AtObj(t, n[1])), e;
                            },
                            parsePrivateRawRSAKeyHexAtObj: function (t, e) {
                                var n = ht,
                                    r = n.getHexOfV_AtObj,
                                    i = n.getDecendantIndexByNthList(
                                        t,
                                        0,
                                        [2, 0]
                                    ),
                                    s = n.getPosArrayOfChildren_AtObj(t, i);
                                if (9 !== s.length)
                                    throw "malformed PKCS#8 plain RSA private key";
                                (e.key = {}),
                                    (e.key.n = r(t, s[1])),
                                    (e.key.e = r(t, s[2])),
                                    (e.key.d = r(t, s[3])),
                                    (e.key.p = r(t, s[4])),
                                    (e.key.q = r(t, s[5])),
                                    (e.key.dp = r(t, s[6])),
                                    (e.key.dq = r(t, s[7])),
                                    (e.key.co = r(t, s[8]));
                            },
                            parsePrivateRawECKeyHexAtObj: function (t, e) {
                                e.keyidx;
                                var n = new l.crypto.ECDSA();
                                n.readPKCS8PrvKeyHex(t),
                                    (e.key = n.prvKeyHex),
                                    (e.pubkey = n.pubKeyHex);
                            },
                            parsePublicPKCS8Hex: function (t) {
                                var e = { algparam: null },
                                    n = ht.getPosArrayOfChildren_AtObj(t, 0);
                                if (2 != n.length)
                                    throw (
                                        "outer DERSequence shall have 2 elements: " +
                                        n.length
                                    );
                                var r = n[0];
                                if ("30" != t.substr(r, 2))
                                    throw "malformed PKCS8 public key(code:001)";
                                var i = ht.getPosArrayOfChildren_AtObj(t, r);
                                if (2 != i.length)
                                    throw "malformed PKCS8 public key(code:002)";
                                if ("06" != t.substr(i[0], 2))
                                    throw "malformed PKCS8 public key(code:003)";
                                if (
                                    ((e.algoid = ht.getHexOfV_AtObj(t, i[0])),
                                    "06" == t.substr(i[1], 2)
                                        ? (e.algparam = ht.getHexOfV_AtObj(
                                              t,
                                              i[1]
                                          ))
                                        : "30" == t.substr(i[1], 2) &&
                                          ((e.algparam = {}),
                                          (e.algparam.p = ht.getVbyList(
                                              t,
                                              i[1],
                                              [0],
                                              "02"
                                          )),
                                          (e.algparam.q = ht.getVbyList(
                                              t,
                                              i[1],
                                              [1],
                                              "02"
                                          )),
                                          (e.algparam.g = ht.getVbyList(
                                              t,
                                              i[1],
                                              [2],
                                              "02"
                                          ))),
                                    "03" != t.substr(n[1], 2))
                                )
                                    throw "malformed PKCS8 public key(code:004)";
                                return (
                                    (e.key = ht
                                        .getHexOfV_AtObj(t, n[1])
                                        .substr(2)),
                                    e
                                );
                            },
                            getRSAKeyFromPublicPKCS8Hex: function (t) {
                                var e = new tt();
                                return e.readPKCS8PubKeyHex(t), e;
                            },
                        };
                    })();
                (xt.getKey = function (t, e, n) {
                    if (t instanceof tt) return t;
                    if (
                        void 0 !== l.crypto.ECDSA &&
                        t instanceof l.crypto.ECDSA
                    )
                        return t;
                    if (void 0 !== l.crypto.DSA && t instanceof l.crypto.DSA)
                        return t;
                    if (void 0 !== t.curve && void 0 !== t.xy && void 0 === t.d)
                        return new l.crypto.ECDSA({
                            pub: t.xy,
                            curve: t.curve,
                        });
                    if (void 0 !== t.curve && void 0 !== t.d)
                        return new l.crypto.ECDSA({ prv: t.d, curve: t.curve });
                    if (
                        void 0 === t.kty &&
                        void 0 !== t.n &&
                        void 0 !== t.e &&
                        void 0 === t.d
                    )
                        return (v = new tt()).setPublic(t.n, t.e), v;
                    if (
                        void 0 === t.kty &&
                        void 0 !== t.n &&
                        void 0 !== t.e &&
                        void 0 !== t.d &&
                        void 0 !== t.p &&
                        void 0 !== t.q &&
                        void 0 !== t.dp &&
                        void 0 !== t.dq &&
                        void 0 !== t.co &&
                        void 0 === t.qi
                    )
                        return (
                            (v = new tt()).setPrivateEx(
                                t.n,
                                t.e,
                                t.d,
                                t.p,
                                t.q,
                                t.dp,
                                t.dq,
                                t.co
                            ),
                            v
                        );
                    if (
                        void 0 === t.kty &&
                        void 0 !== t.n &&
                        void 0 !== t.e &&
                        void 0 !== t.d &&
                        void 0 === t.p
                    )
                        return (v = new tt()).setPrivate(t.n, t.e, t.d), v;
                    if (
                        void 0 !== t.p &&
                        void 0 !== t.q &&
                        void 0 !== t.g &&
                        void 0 !== t.y &&
                        void 0 === t.x
                    )
                        return (
                            (v = new l.crypto.DSA()).setPublic(
                                t.p,
                                t.q,
                                t.g,
                                t.y
                            ),
                            v
                        );
                    if (
                        void 0 !== t.p &&
                        void 0 !== t.q &&
                        void 0 !== t.g &&
                        void 0 !== t.y &&
                        void 0 !== t.x
                    )
                        return (
                            (v = new l.crypto.DSA()).setPrivate(
                                t.p,
                                t.q,
                                t.g,
                                t.y,
                                t.x
                            ),
                            v
                        );
                    if (
                        "RSA" === t.kty &&
                        void 0 !== t.n &&
                        void 0 !== t.e &&
                        void 0 === t.d
                    )
                        return (v = new tt()).setPublic(gt(t.n), gt(t.e)), v;
                    if (
                        "RSA" === t.kty &&
                        void 0 !== t.n &&
                        void 0 !== t.e &&
                        void 0 !== t.d &&
                        void 0 !== t.p &&
                        void 0 !== t.q &&
                        void 0 !== t.dp &&
                        void 0 !== t.dq &&
                        void 0 !== t.qi
                    )
                        return (
                            (v = new tt()).setPrivateEx(
                                gt(t.n),
                                gt(t.e),
                                gt(t.d),
                                gt(t.p),
                                gt(t.q),
                                gt(t.dp),
                                gt(t.dq),
                                gt(t.qi)
                            ),
                            v
                        );
                    if (
                        "RSA" === t.kty &&
                        void 0 !== t.n &&
                        void 0 !== t.e &&
                        void 0 !== t.d
                    )
                        return (
                            (v = new tt()).setPrivate(
                                gt(t.n),
                                gt(t.e),
                                gt(t.d)
                            ),
                            v
                        );
                    if (
                        "EC" === t.kty &&
                        void 0 !== t.crv &&
                        void 0 !== t.x &&
                        void 0 !== t.y &&
                        void 0 === t.d
                    ) {
                        var r =
                                (y = new l.crypto.ECDSA({ curve: t.crv }))
                                    .ecparams.keylen / 4,
                            i =
                                "04" +
                                ("0000000000" + gt(t.x)).slice(-r) +
                                ("0000000000" + gt(t.y)).slice(-r);
                        return y.setPublicKeyHex(i), y;
                    }
                    if (
                        "EC" === t.kty &&
                        void 0 !== t.crv &&
                        void 0 !== t.x &&
                        void 0 !== t.y &&
                        void 0 !== t.d
                    ) {
                        (r =
                            (y = new l.crypto.ECDSA({ curve: t.crv })).ecparams
                                .keylen / 4),
                            (i =
                                "04" +
                                ("0000000000" + gt(t.x)).slice(-r) +
                                ("0000000000" + gt(t.y)).slice(-r));
                        var s = ("0000000000" + gt(t.d)).slice(-r);
                        return y.setPublicKeyHex(i), y.setPrivateKeyHex(s), y;
                    }
                    if ("pkcs5prv" === n) {
                        var a,
                            o = t;
                        if (
                            9 ===
                            (a = ht.getPosArrayOfChildren_AtObj(o, 0)).length
                        )
                            (v = new tt()).readPrivateKeyFromASN1HexString(t);
                        else if (6 === a.length)
                            (v = new l.crypto.DSA()).readPKCS5PrvKeyHex(o);
                        else {
                            if (!(a.length > 2 && "04" === o.substr(a[1], 2)))
                                throw "unsupported PKCS#1/5 hexadecimal key";
                            (v = new l.crypto.ECDSA()).readPKCS5PrvKeyHex(o);
                        }
                        return v;
                    }
                    if ("pkcs8prv" === n)
                        return xt.getKeyFromPlainPrivatePKCS8Hex(t);
                    if ("pkcs8pub" === n) return xt.getKeyFromPublicPKCS8Hex(t);
                    if ("x509pub" === n) return Bt.getPublicKeyFromCertHex(t);
                    if (
                        -1 != t.indexOf("-END CERTIFICATE-", 0) ||
                        -1 != t.indexOf("-END X509 CERTIFICATE-", 0) ||
                        -1 != t.indexOf("-END TRUSTED CERTIFICATE-", 0)
                    )
                        return Bt.getPublicKeyFromCertPEM(t);
                    if (-1 != t.indexOf("-END PUBLIC KEY-"))
                        return xt.getKeyFromPublicPKCS8PEM(t);
                    if (
                        -1 != t.indexOf("-END RSA PRIVATE KEY-") &&
                        -1 == t.indexOf("4,ENCRYPTED")
                    ) {
                        var h = ht.pemToHex(t, "RSA PRIVATE KEY");
                        return xt.getKey(h, null, "pkcs5prv");
                    }
                    if (
                        -1 != t.indexOf("-END DSA PRIVATE KEY-") &&
                        -1 == t.indexOf("4,ENCRYPTED")
                    ) {
                        var u = ht.pemToHex(t, "DSA PRIVATE KEY"),
                            c = ht.getVbyList(u, 0, [1], "02"),
                            f = ht.getVbyList(u, 0, [2], "02"),
                            d = ht.getVbyList(u, 0, [3], "02"),
                            g = ht.getVbyList(u, 0, [4], "02"),
                            p = ht.getVbyList(u, 0, [5], "02");
                        return (
                            (v = new l.crypto.DSA()).setPrivate(
                                new A(c, 16),
                                new A(f, 16),
                                new A(d, 16),
                                new A(g, 16),
                                new A(p, 16)
                            ),
                            v
                        );
                    }
                    if (-1 != t.indexOf("-END PRIVATE KEY-"))
                        return xt.getKeyFromPlainPrivatePKCS8PEM(t);
                    if (
                        -1 != t.indexOf("-END RSA PRIVATE KEY-") &&
                        -1 != t.indexOf("4,ENCRYPTED")
                    )
                        return xt.getRSAKeyFromEncryptedPKCS5PEM(t, e);
                    if (
                        -1 != t.indexOf("-END EC PRIVATE KEY-") &&
                        -1 != t.indexOf("4,ENCRYPTED")
                    ) {
                        u = xt.getDecryptedKeyHex(t, e);
                        var y,
                            m,
                            v = ht.getVbyList(u, 0, [1], "04"),
                            S = ht.getVbyList(u, 0, [2, 0], "06"),
                            b = ht.getVbyList(u, 0, [3, 0], "03").substr(2);
                        if (void 0 === l.crypto.OID.oidhex2name[S])
                            throw "undefined OID(hex) in KJUR.crypto.OID: " + S;
                        return (
                            (m = l.crypto.OID.oidhex2name[S]),
                            (y = new l.crypto.ECDSA({
                                curve: m,
                            })).setPublicKeyHex(b),
                            y.setPrivateKeyHex(v),
                            (y.isPublic = !1),
                            y
                        );
                    }
                    if (
                        -1 != t.indexOf("-END DSA PRIVATE KEY-") &&
                        -1 != t.indexOf("4,ENCRYPTED")
                    )
                        return (
                            (u = xt.getDecryptedKeyHex(t, e)),
                            (c = ht.getVbyList(u, 0, [1], "02")),
                            (f = ht.getVbyList(u, 0, [2], "02")),
                            (d = ht.getVbyList(u, 0, [3], "02")),
                            (g = ht.getVbyList(u, 0, [4], "02")),
                            (p = ht.getVbyList(u, 0, [5], "02")),
                            (v = new l.crypto.DSA()).setPrivate(
                                new A(c, 16),
                                new A(f, 16),
                                new A(d, 16),
                                new A(g, 16),
                                new A(p, 16)
                            ),
                            v
                        );
                    if (-1 != t.indexOf("-END ENCRYPTED PRIVATE KEY-"))
                        return xt.getKeyFromEncryptedPKCS8PEM(t, e);
                    throw "not supported argument";
                }),
                    (xt.generateKeypair = function (t, e) {
                        if ("RSA" == t) {
                            var n = e;
                            (a = new tt()).generate(n, "10001"),
                                (a.isPrivate = !0),
                                (a.isPublic = !0);
                            var r = new tt(),
                                i = a.n.toString(16),
                                s = a.e.toString(16);
                            return (
                                r.setPublic(i, s),
                                (r.isPrivate = !1),
                                (r.isPublic = !0),
                                ((o = {}).prvKeyObj = a),
                                (o.pubKeyObj = r),
                                o
                            );
                        }
                        if ("EC" == t) {
                            var a,
                                o,
                                h = e,
                                u = new l.crypto.ECDSA({
                                    curve: h,
                                }).generateKeyPairHex();
                            return (
                                (a = new l.crypto.ECDSA({
                                    curve: h,
                                })).setPublicKeyHex(u.ecpubhex),
                                a.setPrivateKeyHex(u.ecprvhex),
                                (a.isPrivate = !0),
                                (a.isPublic = !1),
                                (r = new l.crypto.ECDSA({
                                    curve: h,
                                })).setPublicKeyHex(u.ecpubhex),
                                (r.isPrivate = !1),
                                (r.isPublic = !0),
                                ((o = {}).prvKeyObj = a),
                                (o.pubKeyObj = r),
                                o
                            );
                        }
                        throw "unknown algorithm: " + t;
                    }),
                    (xt.getPEM = function (t, e, n, r, i) {
                        var s = l.asn1,
                            a = l.crypto;
                        function o(t) {
                            return l.asn1.ASN1Util.newObject({
                                seq: [
                                    { int: 0 },
                                    { int: { bigint: t.n } },
                                    { int: t.e },
                                    { int: { bigint: t.d } },
                                    { int: { bigint: t.p } },
                                    { int: { bigint: t.q } },
                                    { int: { bigint: t.dmp1 } },
                                    { int: { bigint: t.dmq1 } },
                                    { int: { bigint: t.coeff } },
                                ],
                            });
                        }
                        function h(t) {
                            return l.asn1.ASN1Util.newObject({
                                seq: [
                                    { int: 1 },
                                    { octstr: { hex: t.prvKeyHex } },
                                    {
                                        tag: [
                                            "a0",
                                            !0,
                                            { oid: { name: t.curveName } },
                                        ],
                                    },
                                    {
                                        tag: [
                                            "a1",
                                            !0,
                                            {
                                                bitstr: {
                                                    hex: "00" + t.pubKeyHex,
                                                },
                                            },
                                        ],
                                    },
                                ],
                            });
                        }
                        function u(t) {
                            return l.asn1.ASN1Util.newObject({
                                seq: [
                                    { int: 0 },
                                    { int: { bigint: t.p } },
                                    { int: { bigint: t.q } },
                                    { int: { bigint: t.g } },
                                    { int: { bigint: t.y } },
                                    { int: { bigint: t.x } },
                                ],
                            });
                        }
                        if (
                            (t instanceof tt ||
                                (void 0 !== a.DSA && t instanceof a.DSA) ||
                                (void 0 !== a.ECDSA && t instanceof a.ECDSA)) &&
                            1 == t.isPublic &&
                            (void 0 === e || "PKCS8PUB" == e)
                        ) {
                            var c = new l.asn1.x509.SubjectPublicKeyInfo(
                                t
                            ).getEncodedHex();
                            return s.ASN1Util.getPEMStringFromHex(
                                c,
                                "PUBLIC KEY"
                            );
                        }
                        if (
                            "PKCS1PRV" == e &&
                            t instanceof tt &&
                            (void 0 === n || null == n) &&
                            1 == t.isPrivate
                        )
                            return (
                                (c = o(t).getEncodedHex()),
                                s.ASN1Util.getPEMStringFromHex(
                                    c,
                                    "RSA PRIVATE KEY"
                                )
                            );
                        if (
                            "PKCS1PRV" == e &&
                            t instanceof l.crypto.ECDSA &&
                            (void 0 === n || null == n) &&
                            1 == t.isPrivate
                        ) {
                            var f = new l.asn1.DERObjectIdentifier({
                                    name: t.curveName,
                                }).getEncodedHex(),
                                d = h(t).getEncodedHex(),
                                g = "";
                            return (
                                (g += s.ASN1Util.getPEMStringFromHex(
                                    f,
                                    "EC PARAMETERS"
                                )) +
                                s.ASN1Util.getPEMStringFromHex(
                                    d,
                                    "EC PRIVATE KEY"
                                )
                            );
                        }
                        if (
                            "PKCS1PRV" == e &&
                            void 0 !== l.crypto.DSA &&
                            t instanceof l.crypto.DSA &&
                            (void 0 === n || null == n) &&
                            1 == t.isPrivate
                        )
                            return (
                                (c = u(t).getEncodedHex()),
                                s.ASN1Util.getPEMStringFromHex(
                                    c,
                                    "DSA PRIVATE KEY"
                                )
                            );
                        if (
                            "PKCS5PRV" == e &&
                            t instanceof tt &&
                            void 0 !== n &&
                            null != n &&
                            1 == t.isPrivate
                        )
                            return (
                                (c = o(t).getEncodedHex()),
                                void 0 === r && (r = "DES-EDE3-CBC"),
                                this.getEncryptedPKCS5PEMFromPrvKeyHex(
                                    "RSA",
                                    c,
                                    n,
                                    r
                                )
                            );
                        if (
                            "PKCS5PRV" == e &&
                            void 0 !== l.crypto.ECDSA &&
                            t instanceof l.crypto.ECDSA &&
                            void 0 !== n &&
                            null != n &&
                            1 == t.isPrivate
                        )
                            return (
                                (c = h(t).getEncodedHex()),
                                void 0 === r && (r = "DES-EDE3-CBC"),
                                this.getEncryptedPKCS5PEMFromPrvKeyHex(
                                    "EC",
                                    c,
                                    n,
                                    r
                                )
                            );
                        if (
                            "PKCS5PRV" == e &&
                            void 0 !== l.crypto.DSA &&
                            t instanceof l.crypto.DSA &&
                            void 0 !== n &&
                            null != n &&
                            1 == t.isPrivate
                        )
                            return (
                                (c = u(t).getEncodedHex()),
                                void 0 === r && (r = "DES-EDE3-CBC"),
                                this.getEncryptedPKCS5PEMFromPrvKeyHex(
                                    "DSA",
                                    c,
                                    n,
                                    r
                                )
                            );
                        var y = function (t, e) {
                                var n = m(t, e);
                                return new l.asn1.ASN1Util.newObject({
                                    seq: [
                                        {
                                            seq: [
                                                { oid: { name: "pkcs5PBES2" } },
                                                {
                                                    seq: [
                                                        {
                                                            seq: [
                                                                {
                                                                    oid: {
                                                                        name: "pkcs5PBKDF2",
                                                                    },
                                                                },
                                                                {
                                                                    seq: [
                                                                        {
                                                                            octstr: {
                                                                                hex: n.pbkdf2Salt,
                                                                            },
                                                                        },
                                                                        {
                                                                            int: n.pbkdf2Iter,
                                                                        },
                                                                    ],
                                                                },
                                                            ],
                                                        },
                                                        {
                                                            seq: [
                                                                {
                                                                    oid: {
                                                                        name: "des-EDE3-CBC",
                                                                    },
                                                                },
                                                                {
                                                                    octstr: {
                                                                        hex: n.encryptionSchemeIV,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ],
                                                },
                                            ],
                                        },
                                        { octstr: { hex: n.ciphertext } },
                                    ],
                                }).getEncodedHex();
                            },
                            m = function (t, e) {
                                var n = p.lib.WordArray.random(8),
                                    r = p.lib.WordArray.random(8),
                                    i = p.PBKDF2(e, n, {
                                        keySize: 6,
                                        iterations: 100,
                                    }),
                                    s = p.enc.Hex.parse(t),
                                    a =
                                        p.TripleDES.encrypt(s, i, { iv: r }) +
                                        "",
                                    o = {};
                                return (
                                    (o.ciphertext = a),
                                    (o.pbkdf2Salt = p.enc.Hex.stringify(n)),
                                    (o.pbkdf2Iter = 100),
                                    (o.encryptionSchemeAlg = "DES-EDE3-CBC"),
                                    (o.encryptionSchemeIV =
                                        p.enc.Hex.stringify(r)),
                                    o
                                );
                            };
                        if (
                            "PKCS8PRV" == e &&
                            t instanceof tt &&
                            1 == t.isPrivate
                        ) {
                            var v = o(t).getEncodedHex();
                            return (
                                (c = l.asn1.ASN1Util.newObject({
                                    seq: [
                                        { int: 0 },
                                        {
                                            seq: [
                                                {
                                                    oid: {
                                                        name: "rsaEncryption",
                                                    },
                                                },
                                                { null: !0 },
                                            ],
                                        },
                                        { octstr: { hex: v } },
                                    ],
                                }).getEncodedHex()),
                                void 0 === n || null == n
                                    ? s.ASN1Util.getPEMStringFromHex(
                                          c,
                                          "PRIVATE KEY"
                                      )
                                    : ((d = y(c, n)),
                                      s.ASN1Util.getPEMStringFromHex(
                                          d,
                                          "ENCRYPTED PRIVATE KEY"
                                      ))
                            );
                        }
                        if (
                            "PKCS8PRV" == e &&
                            void 0 !== l.crypto.ECDSA &&
                            t instanceof l.crypto.ECDSA &&
                            1 == t.isPrivate
                        )
                            return (
                                (v = new l.asn1.ASN1Util.newObject({
                                    seq: [
                                        { int: 1 },
                                        { octstr: { hex: t.prvKeyHex } },
                                        {
                                            tag: [
                                                "a1",
                                                !0,
                                                {
                                                    bitstr: {
                                                        hex: "00" + t.pubKeyHex,
                                                    },
                                                },
                                            ],
                                        },
                                    ],
                                }).getEncodedHex()),
                                (c = l.asn1.ASN1Util.newObject({
                                    seq: [
                                        { int: 0 },
                                        {
                                            seq: [
                                                {
                                                    oid: {
                                                        name: "ecPublicKey",
                                                    },
                                                },
                                                { oid: { name: t.curveName } },
                                            ],
                                        },
                                        { octstr: { hex: v } },
                                    ],
                                }).getEncodedHex()),
                                void 0 === n || null == n
                                    ? s.ASN1Util.getPEMStringFromHex(
                                          c,
                                          "PRIVATE KEY"
                                      )
                                    : ((d = y(c, n)),
                                      s.ASN1Util.getPEMStringFromHex(
                                          d,
                                          "ENCRYPTED PRIVATE KEY"
                                      ))
                            );
                        if (
                            "PKCS8PRV" == e &&
                            void 0 !== l.crypto.DSA &&
                            t instanceof l.crypto.DSA &&
                            1 == t.isPrivate
                        )
                            return (
                                (v = new l.asn1.DERInteger({
                                    bigint: t.x,
                                }).getEncodedHex()),
                                (c = l.asn1.ASN1Util.newObject({
                                    seq: [
                                        { int: 0 },
                                        {
                                            seq: [
                                                { oid: { name: "dsa" } },
                                                {
                                                    seq: [
                                                        {
                                                            int: {
                                                                bigint: t.p,
                                                            },
                                                        },
                                                        {
                                                            int: {
                                                                bigint: t.q,
                                                            },
                                                        },
                                                        {
                                                            int: {
                                                                bigint: t.g,
                                                            },
                                                        },
                                                    ],
                                                },
                                            ],
                                        },
                                        { octstr: { hex: v } },
                                    ],
                                }).getEncodedHex()),
                                void 0 === n || null == n
                                    ? s.ASN1Util.getPEMStringFromHex(
                                          c,
                                          "PRIVATE KEY"
                                      )
                                    : ((d = y(c, n)),
                                      s.ASN1Util.getPEMStringFromHex(
                                          d,
                                          "ENCRYPTED PRIVATE KEY"
                                      ))
                            );
                        throw "unsupported object nor format";
                    }),
                    (xt.getKeyFromCSRPEM = function (t) {
                        var e = ht.pemToHex(t, "CERTIFICATE REQUEST");
                        return xt.getKeyFromCSRHex(e);
                    }),
                    (xt.getKeyFromCSRHex = function (t) {
                        var e = xt.parseCSRHex(t);
                        return xt.getKey(e.p8pubkeyhex, null, "pkcs8pub");
                    }),
                    (xt.parseCSRHex = function (t) {
                        var e = {},
                            n = t;
                        if ("30" != n.substr(0, 2))
                            throw "malformed CSR(code:001)";
                        var r = ht.getPosArrayOfChildren_AtObj(n, 0);
                        if (r.length < 1) throw "malformed CSR(code:002)";
                        if ("30" != n.substr(r[0], 2))
                            throw "malformed CSR(code:003)";
                        var i = ht.getPosArrayOfChildren_AtObj(n, r[0]);
                        if (i.length < 3) throw "malformed CSR(code:004)";
                        return (
                            (e.p8pubkeyhex = ht.getHexOfTLV_AtObj(n, i[2])), e
                        );
                    }),
                    (xt.getJWKFromKey = function (t) {
                        var e = {};
                        if (t instanceof tt && t.isPrivate)
                            return (
                                (e.kty = "RSA"),
                                (e.n = dt(t.n.toString(16))),
                                (e.e = dt(t.e.toString(16))),
                                (e.d = dt(t.d.toString(16))),
                                (e.p = dt(t.p.toString(16))),
                                (e.q = dt(t.q.toString(16))),
                                (e.dp = dt(t.dmp1.toString(16))),
                                (e.dq = dt(t.dmq1.toString(16))),
                                (e.qi = dt(t.coeff.toString(16))),
                                e
                            );
                        if (t instanceof tt && t.isPublic)
                            return (
                                (e.kty = "RSA"),
                                (e.n = dt(t.n.toString(16))),
                                (e.e = dt(t.e.toString(16))),
                                e
                            );
                        if (t instanceof l.crypto.ECDSA && t.isPrivate) {
                            if (
                                "P-256" !== (r = t.getShortNISTPCurveName()) &&
                                "P-384" !== r
                            )
                                throw "unsupported curve name for JWT: " + r;
                            var n = t.getPublicKeyXYHex();
                            return (
                                (e.kty = "EC"),
                                (e.crv = r),
                                (e.x = dt(n.x)),
                                (e.y = dt(n.y)),
                                (e.d = dt(t.prvKeyHex)),
                                e
                            );
                        }
                        if (t instanceof l.crypto.ECDSA && t.isPublic) {
                            var r;
                            if (
                                "P-256" !== (r = t.getShortNISTPCurveName()) &&
                                "P-384" !== r
                            )
                                throw "unsupported curve name for JWT: " + r;
                            return (
                                (n = t.getPublicKeyXYHex()),
                                (e.kty = "EC"),
                                (e.crv = r),
                                (e.x = dt(n.x)),
                                (e.y = dt(n.y)),
                                e
                            );
                        }
                        throw "not supported key object";
                    }),
                    (tt.pemToBase64 = function (t) {
                        var e = t;
                        return (e = (e = e.replace(
                            "-----BEGIN RSA PRIVATE KEY-----",
                            ""
                        )).replace(
                            "-----END RSA PRIVATE KEY-----",
                            ""
                        )).replace(/[ \n]+/g, "");
                    }),
                    (tt.getPosArrayOfChildrenFromHex = function (t) {
                        var e = new Array(),
                            n = ht.getStartPosOfV_AtObj(t, 0),
                            r = ht.getPosOfNextSibling_AtObj(t, n),
                            i = ht.getPosOfNextSibling_AtObj(t, r),
                            s = ht.getPosOfNextSibling_AtObj(t, i),
                            a = ht.getPosOfNextSibling_AtObj(t, s),
                            o = ht.getPosOfNextSibling_AtObj(t, a),
                            h = ht.getPosOfNextSibling_AtObj(t, o),
                            u = ht.getPosOfNextSibling_AtObj(t, h),
                            c = ht.getPosOfNextSibling_AtObj(t, u);
                        return e.push(n, r, i, s, a, o, h, u, c), e;
                    }),
                    (tt.getHexValueArrayOfChildrenFromHex = function (t) {
                        var e = tt.getPosArrayOfChildrenFromHex(t),
                            n = ht.getHexOfV_AtObj(t, e[0]),
                            r = ht.getHexOfV_AtObj(t, e[1]),
                            i = ht.getHexOfV_AtObj(t, e[2]),
                            s = ht.getHexOfV_AtObj(t, e[3]),
                            a = ht.getHexOfV_AtObj(t, e[4]),
                            o = ht.getHexOfV_AtObj(t, e[5]),
                            h = ht.getHexOfV_AtObj(t, e[6]),
                            u = ht.getHexOfV_AtObj(t, e[7]),
                            c = ht.getHexOfV_AtObj(t, e[8]),
                            l = new Array();
                        return l.push(n, r, i, s, a, o, h, u, c), l;
                    }),
                    (tt.prototype.readPrivateKeyFromPEMString = function (t) {
                        var e = S(tt.pemToBase64(t)),
                            n = tt.getHexValueArrayOfChildrenFromHex(e);
                        this.setPrivateEx(
                            n[1],
                            n[2],
                            n[3],
                            n[4],
                            n[5],
                            n[6],
                            n[7],
                            n[8]
                        );
                    }),
                    (tt.prototype.readPrivateKeyFromASN1HexString = function (
                        t
                    ) {
                        this.readPKCS5PrvKeyHex(t);
                    }),
                    (tt.prototype.readPKCS5PrvKeyHex = function (t) {
                        var e = tt.getHexValueArrayOfChildrenFromHex(t);
                        this.setPrivateEx(
                            e[1],
                            e[2],
                            e[3],
                            e[4],
                            e[5],
                            e[6],
                            e[7],
                            e[8]
                        );
                    }),
                    (tt.prototype.readPKCS8PrvKeyHex = function (t) {
                        var e,
                            n,
                            r,
                            i,
                            s,
                            a,
                            o,
                            h,
                            u = ht,
                            c = u.getVbyList;
                        if (!1 === u.isASN1HEX(t)) throw "not ASN.1 hex string";
                        try {
                            (e = c(t, 0, [2, 0, 1], "02")),
                                (n = c(t, 0, [2, 0, 2], "02")),
                                (r = c(t, 0, [2, 0, 3], "02")),
                                (i = c(t, 0, [2, 0, 4], "02")),
                                (s = c(t, 0, [2, 0, 5], "02")),
                                (a = c(t, 0, [2, 0, 6], "02")),
                                (o = c(t, 0, [2, 0, 7], "02")),
                                (h = c(t, 0, [2, 0, 8], "02"));
                        } catch (t) {
                            throw "malformed PKCS#8 plain RSA private key";
                        }
                        this.setPrivateEx(e, n, r, i, s, a, o, h);
                    }),
                    (tt.prototype.readPKCS5PubKeyHex = function (t) {
                        if (!1 === ht.isASN1HEX(t))
                            throw "keyHex is not ASN.1 hex string";
                        var e = ht.getPosArrayOfChildren_AtObj(t, 0);
                        if (
                            2 !== e.length ||
                            "02" !== t.substr(e[0], 2) ||
                            "02" !== t.substr(e[1], 2)
                        )
                            throw "wrong hex for PKCS#5 public key";
                        var n = ht.getHexOfV_AtObj(t, e[0]),
                            r = ht.getHexOfV_AtObj(t, e[1]);
                        this.setPublic(n, r);
                    }),
                    (tt.prototype.readPKCS8PubKeyHex = function (t) {
                        if (!1 === ht.isASN1HEX(t))
                            throw "not ASN.1 hex string";
                        if (
                            "06092a864886f70d010101" !==
                            ht.getDecendantHexTLVByNthList(t, 0, [0, 0])
                        )
                            throw "not PKCS8 RSA public key";
                        var e = ht.getDecendantHexTLVByNthList(t, 0, [1, 0]);
                        this.readPKCS5PubKeyHex(e);
                    }),
                    (tt.prototype.readCertPubKeyHex = function (t, e) {
                        if ((5 !== e && (e = 6), !1 === ht.isASN1HEX(t)))
                            throw "not ASN.1 hex string";
                        var n = ht.getDecendantHexTLVByNthList(t, 0, [0, e]);
                        this.readPKCS8PubKeyHex(n);
                    });
                var wt = new RegExp("");
                function Ft(t, e) {
                    for (var n = "", r = e / 4 - t.length, i = 0; i < r; i++)
                        n += "0";
                    return n + t;
                }
                function Pt(t, e) {
                    var n,
                        r = ((n = t), l.crypto.Util.hashString(n, e));
                    return this.signWithMessageHash(r, e);
                }
                function Ct(t) {
                    return Pt.call(this, t, "sha1");
                }
                function Dt(t) {
                    return Pt.call(this, t, "sha256");
                }
                function Ot(t, e, n) {
                    for (var r = "", i = 0; r.length < e; )
                        (r += mt(
                            n(
                                vt(
                                    t +
                                        String.fromCharCode.apply(String, [
                                            (4278190080 & i) >> 24,
                                            (16711680 & i) >> 16,
                                            (65280 & i) >> 8,
                                            255 & i,
                                        ])
                                )
                            )
                        )),
                            (i += 1);
                    return r;
                }
                function Tt(t, e, n) {
                    var r,
                        i = ((r = vt(t)), l.crypto.Util.hashHex(r, e));
                    return (
                        void 0 === n && (n = -1),
                        this.signWithMessageHashPSS(i, e, n)
                    );
                }
                function Ht(t) {
                    for (var e in l.crypto.Util.DIGESTINFOHEAD) {
                        var n = l.crypto.Util.DIGESTINFOHEAD[e],
                            r = n.length;
                        if (t.substring(0, r) == n) return [e, t.substring(r)];
                    }
                    return [];
                }
                function It(t, e) {
                    return (function (t, e, n, r) {
                        var i = Ht(
                            (function (t, e, n) {
                                return (function (t, e, n) {
                                    var r = new tt();
                                    return r.setPublic(e, n), r.doPublic(t);
                                })(t, e, n)
                                    .toString(16)
                                    .replace(/^1f+00/, "");
                            })(e, n, r)
                        );
                        if (0 == i.length) return !1;
                        var s,
                            a = i[0];
                        return (
                            i[1] == ((s = t), l.crypto.Util.hashString(s, a))
                        );
                    })(e, Z(t, 16), this.n.toString(16), this.e.toString(16));
                }
                function Rt(t, e) {
                    var n = Z(
                        (e = (e = e.replace(wt, "")).replace(/[ \n]+/g, "")),
                        16
                    );
                    if (n.bitLength() > this.n.bitLength()) return 0;
                    var r = Ht(
                        this.doPublic(n)
                            .toString(16)
                            .replace(/^1f+00/, "")
                    );
                    if (0 == r.length) return !1;
                    var i,
                        s = r[0];
                    return r[1] == ((i = t), l.crypto.Util.hashString(i, s));
                }
                function Nt(t, e, n, r) {
                    var i,
                        s = ((i = vt(t)), l.crypto.Util.hashHex(i, n));
                    return (
                        void 0 === r && (r = -1),
                        this.verifyWithMessageHashPSS(s, e, n, r)
                    );
                }
                function Bt() {
                    (this.subjectPublicKeyRSA = null),
                        (this.subjectPublicKeyRSA_hN = null),
                        (this.subjectPublicKeyRSA_hE = null),
                        (this.hex = null),
                        (this.getSerialNumberHex = function () {
                            return ht.getDecendantHexVByNthList(
                                this.hex,
                                0,
                                [0, 1]
                            );
                        }),
                        (this.getSignatureAlgorithmField = function () {
                            var t = ht.getDecendantHexVByNthList(
                                    this.hex,
                                    0,
                                    [0, 2, 0]
                                ),
                                e = l.asn1.ASN1Util.oidHexToInt(t);
                            return l.asn1.x509.OID.oid2name(e);
                        }),
                        (this.getIssuerHex = function () {
                            return ht.getDecendantHexTLVByNthList(
                                this.hex,
                                0,
                                [0, 3]
                            );
                        }),
                        (this.getIssuerString = function () {
                            return Bt.hex2dn(
                                ht.getDecendantHexTLVByNthList(
                                    this.hex,
                                    0,
                                    [0, 3]
                                )
                            );
                        }),
                        (this.getSubjectHex = function () {
                            return ht.getDecendantHexTLVByNthList(
                                this.hex,
                                0,
                                [0, 5]
                            );
                        }),
                        (this.getSubjectString = function () {
                            return Bt.hex2dn(
                                ht.getDecendantHexTLVByNthList(
                                    this.hex,
                                    0,
                                    [0, 5]
                                )
                            );
                        }),
                        (this.getNotBefore = function () {
                            var t = ht.getDecendantHexVByNthList(
                                this.hex,
                                0,
                                [0, 4, 0]
                            );
                            return (
                                (t = t.replace(/(..)/g, "%$1")),
                                decodeURIComponent(t)
                            );
                        }),
                        (this.getNotAfter = function () {
                            var t = ht.getDecendantHexVByNthList(
                                this.hex,
                                0,
                                [0, 4, 1]
                            );
                            return (
                                (t = t.replace(/(..)/g, "%$1")),
                                decodeURIComponent(t)
                            );
                        }),
                        (this.readCertPEM = function (t) {
                            var e = ht.pemToHex(t),
                                n = Bt.getPublicKeyHexArrayFromCertHex(e),
                                r = new tt();
                            r.setPublic(n[0], n[1]),
                                (this.subjectPublicKeyRSA = r),
                                (this.subjectPublicKeyRSA_hN = n[0]),
                                (this.subjectPublicKeyRSA_hE = n[1]),
                                (this.hex = e);
                        }),
                        (this.readCertPEMWithoutRSAInit = function (t) {
                            var e = ht.pemToHex(t),
                                n = Bt.getPublicKeyHexArrayFromCertHex(e);
                            "function" ==
                                typeof this.subjectPublicKeyRSA.setPublic &&
                                this.subjectPublicKeyRSA.setPublic(n[0], n[1]),
                                (this.subjectPublicKeyRSA_hN = n[0]),
                                (this.subjectPublicKeyRSA_hE = n[1]),
                                (this.hex = e);
                        }),
                        (this.getInfo = function () {
                            var t = "Basic Fields\n";
                            (t +=
                                "  serial number: " +
                                this.getSerialNumberHex() +
                                "\n"),
                                (t +=
                                    "  signature algorithm: " +
                                    this.getSignatureAlgorithmField() +
                                    "\n"),
                                (t +=
                                    "  issuer: " +
                                    this.getIssuerString() +
                                    "\n"),
                                (t +=
                                    "  notBefore: " +
                                    this.getNotBefore() +
                                    "\n"),
                                (t +=
                                    "  notAfter: " + this.getNotAfter() + "\n"),
                                (t +=
                                    "  subject: " +
                                    this.getSubjectString() +
                                    "\n"),
                                (t += "  subject public key info: \n");
                            var e = Bt.getSubjectPublicKeyInfoPosFromCertHex(
                                    this.hex
                                ),
                                n = ht.getHexOfTLV_AtObj(this.hex, e),
                                r = xt.getKey(n, null, "pkcs8pub");
                            r instanceof tt &&
                                ((t += "    key algorithm: RSA\n"),
                                (t +=
                                    "    n=" +
                                    r.n.toString(16).substr(0, 16) +
                                    "...\n"),
                                (t += "    e=" + r.e.toString(16) + "\n")),
                                (t += "X509v3 Extensions:\n");
                            for (
                                var i = Bt.getV3ExtInfoListOfCertHex(this.hex),
                                    s = 0;
                                s < i.length;
                                s++
                            ) {
                                var a = i[s],
                                    o = l.asn1.x509.OID.oid2name(a.oid);
                                "" === o && (o = a.oid);
                                var h = "";
                                if (
                                    (!0 === a.critical && (h = "CRITICAL"),
                                    (t += "  " + o + " " + h + ":\n"),
                                    "basicConstraints" === o)
                                ) {
                                    var u = Bt.getExtBasicConstraints(this.hex);
                                    void 0 === u.cA
                                        ? (t += "    {}\n")
                                        : ((t += "    cA=true"),
                                          void 0 !== u.pathLen &&
                                              (t += ", pathLen=" + u.pathLen),
                                          (t += "\n"));
                                } else if ("keyUsage" === o)
                                    t +=
                                        "    " +
                                        Bt.getExtKeyUsageString(this.hex) +
                                        "\n";
                                else if ("subjectKeyIdentifier" === o)
                                    t +=
                                        "    " +
                                        Bt.getExtSubjectKeyIdentifier(
                                            this.hex
                                        ) +
                                        "\n";
                                else if ("authorityKeyIdentifier" === o) {
                                    var c = Bt.getExtAuthorityKeyIdentifier(
                                        this.hex
                                    );
                                    void 0 !== c.kid &&
                                        (t += "    kid=" + c.kid + "\n");
                                } else if ("extKeyUsage" === o)
                                    t +=
                                        "    " +
                                        Bt.getExtExtKeyUsageName(this.hex).join(
                                            ", "
                                        ) +
                                        "\n";
                                else if ("subjectAltName" === o)
                                    t +=
                                        "    " +
                                        Bt.getExtSubjectAltName(this.hex).join(
                                            ", "
                                        ) +
                                        "\n";
                                else if ("cRLDistributionPoints" === o)
                                    t +=
                                        "    " +
                                        Bt.getExtCRLDistributionPointsURI(
                                            this.hex
                                        ) +
                                        "\n";
                                else if ("authorityInfoAccess" === o) {
                                    var f = Bt.getExtAIAInfo(this.hex);
                                    void 0 !== f.ocsp &&
                                        (t +=
                                            "    ocsp: " +
                                            f.ocsp.join(",") +
                                            "\n"),
                                        void 0 !== f.caissuer &&
                                            (t +=
                                                "    caissuer: " +
                                                f.caissuer.join(",") +
                                                "\n");
                                }
                            }
                            return (
                                (t +=
                                    "signature algorithm: " +
                                    Bt.getSignatureAlgorithmName(this.hex) +
                                    "\n") +
                                "signature: " +
                                Bt.getSignatureValueHex(this.hex).substr(
                                    0,
                                    16
                                ) +
                                "...\n"
                            );
                        });
                }
                wt.compile("[^0-9a-f]", "gi"),
                    (tt.prototype.signWithMessageHash = function (t, e) {
                        var n = Z(
                            l.crypto.Util.getPaddedDigestInfoHex(
                                t,
                                e,
                                this.n.bitLength()
                            ),
                            16
                        );
                        return Ft(
                            this.doPrivate(n).toString(16),
                            this.n.bitLength()
                        );
                    }),
                    (tt.prototype.signString = Pt),
                    (tt.prototype.signStringWithSHA1 = Ct),
                    (tt.prototype.signStringWithSHA256 = Dt),
                    (tt.prototype.sign = Pt),
                    (tt.prototype.signWithSHA1 = Ct),
                    (tt.prototype.signWithSHA256 = Dt),
                    (tt.prototype.signWithMessageHashPSS = function (t, e, n) {
                        var r,
                            i = mt(t),
                            s = i.length,
                            a = this.n.bitLength() - 1,
                            o = Math.ceil(a / 8),
                            h = function (t) {
                                return l.crypto.Util.hashHex(t, e);
                            };
                        if (-1 === n || void 0 === n) n = s;
                        else if (-2 === n) n = o - s - 2;
                        else if (n < -2) throw "invalid salt length";
                        if (o < s + n + 2) throw "data too long";
                        var u = "";
                        n > 0 &&
                            ((u = new Array(n)),
                            new $().nextBytes(u),
                            (u = String.fromCharCode.apply(String, u)));
                        var c = mt(h(vt("\0\0\0\0\0\0\0\0" + i + u))),
                            f = [];
                        for (r = 0; r < o - n - s - 2; r += 1) f[r] = 0;
                        var d = String.fromCharCode.apply(String, f) + "" + u,
                            g = Ot(c, d.length, h),
                            p = [];
                        for (r = 0; r < d.length; r += 1)
                            p[r] = d.charCodeAt(r) ^ g.charCodeAt(r);
                        var y = (65280 >> (8 * o - a)) & 255;
                        for (p[0] &= ~y, r = 0; r < s; r++)
                            p.push(c.charCodeAt(r));
                        return (
                            p.push(188),
                            Ft(
                                this.doPrivate(new A(p)).toString(16),
                                this.n.bitLength()
                            )
                        );
                    }),
                    (tt.prototype.signStringPSS = Tt),
                    (tt.prototype.signPSS = Tt),
                    (tt.SALT_LEN_HLEN = -1),
                    (tt.SALT_LEN_MAX = -2),
                    (tt.prototype.verifyWithMessageHash = function (t, e) {
                        var n = Z(
                            (e = (e = e.replace(wt, "")).replace(
                                /[ \n]+/g,
                                ""
                            )),
                            16
                        );
                        if (n.bitLength() > this.n.bitLength()) return 0;
                        var r = Ht(
                            this.doPublic(n)
                                .toString(16)
                                .replace(/^1f+00/, "")
                        );
                        return 0 != r.length && (r[0], r[1] == t);
                    }),
                    (tt.prototype.verifyString = Rt),
                    (tt.prototype.verifyHexSignatureForMessage = It),
                    (tt.prototype.verify = Rt),
                    (tt.prototype.verifyHexSignatureForByteArrayMessage = It),
                    (tt.prototype.verifyWithMessageHashPSS = function (
                        t,
                        e,
                        n,
                        r
                    ) {
                        var i = new A(e, 16);
                        if (i.bitLength() > this.n.bitLength()) return !1;
                        var s,
                            a = function (t) {
                                return l.crypto.Util.hashHex(t, n);
                            },
                            o = mt(t),
                            h = o.length,
                            u = this.n.bitLength() - 1,
                            c = Math.ceil(u / 8);
                        if (-1 === r || void 0 === r) r = h;
                        else if (-2 === r) r = c - h - 2;
                        else if (r < -2) throw "invalid salt length";
                        if (c < h + r + 2) throw "data too long";
                        var f = this.doPublic(i).toByteArray();
                        for (s = 0; s < f.length; s += 1) f[s] &= 255;
                        for (; f.length < c; ) f.unshift(0);
                        if (188 !== f[c - 1])
                            throw "encoded message does not end in 0xbc";
                        var d = (f = String.fromCharCode.apply(
                                String,
                                f
                            )).substr(0, c - h - 1),
                            g = f.substr(d.length, h),
                            p = (65280 >> (8 * c - u)) & 255;
                        if (0 != (d.charCodeAt(0) & p))
                            throw "bits beyond keysize not zero";
                        var y = Ot(g, d.length, a),
                            m = [];
                        for (s = 0; s < d.length; s += 1)
                            m[s] = d.charCodeAt(s) ^ y.charCodeAt(s);
                        m[0] &= ~p;
                        var v = c - h - r - 2;
                        for (s = 0; s < v; s += 1)
                            if (0 !== m[s]) throw "leftmost octets not zero";
                        if (1 !== m[v]) throw "0x01 marker not found";
                        return (
                            g ===
                            mt(
                                a(
                                    vt(
                                        "\0\0\0\0\0\0\0\0" +
                                            o +
                                            String.fromCharCode.apply(
                                                String,
                                                m.slice(-r)
                                            )
                                    )
                                )
                            )
                        );
                    }),
                    (tt.prototype.verifyStringPSS = Nt),
                    (tt.prototype.verifyPSS = Nt),
                    (tt.SALT_LEN_RECOVER = -2),
                    (Bt.pemToBase64 = function (t) {
                        var e = t;
                        return (e = (e = e.replace(
                            "-----BEGIN CERTIFICATE-----",
                            ""
                        )).replace("-----END CERTIFICATE-----", "")).replace(
                            /[ \n]+/g,
                            ""
                        );
                    }),
                    (Bt.pemToHex = function (t) {
                        return ht.pemToHex(t);
                    }),
                    (Bt.getSubjectPublicKeyPosFromCertHex = function (t) {
                        var e = Bt.getSubjectPublicKeyInfoPosFromCertHex(t);
                        if (-1 == e) return -1;
                        var n = ht.getPosArrayOfChildren_AtObj(t, e);
                        if (2 != n.length) return -1;
                        var r = n[1];
                        if ("03" != t.substring(r, r + 2)) return -1;
                        var i = ht.getStartPosOfV_AtObj(t, r);
                        return "00" != t.substring(i, i + 2) ? -1 : i + 2;
                    }),
                    (Bt.getSubjectPublicKeyInfoPosFromCertHex = function (t) {
                        var e = ht.getStartPosOfV_AtObj(t, 0),
                            n = ht.getPosArrayOfChildren_AtObj(t, e);
                        return n.length < 1
                            ? -1
                            : "a003020102" == t.substring(n[0], n[0] + 10)
                            ? n.length < 6
                                ? -1
                                : n[6]
                            : n.length < 5
                            ? -1
                            : n[5];
                    }),
                    (Bt.getPublicKeyHexArrayFromCertHex = function (t) {
                        var e = Bt.getSubjectPublicKeyPosFromCertHex(t),
                            n = ht.getPosArrayOfChildren_AtObj(t, e);
                        if (2 != n.length) return [];
                        var r = ht.getHexOfV_AtObj(t, n[0]),
                            i = ht.getHexOfV_AtObj(t, n[1]);
                        return null != r && null != i ? [r, i] : [];
                    }),
                    (Bt.getHexTbsCertificateFromCert = function (t) {
                        return ht.getStartPosOfV_AtObj(t, 0);
                    }),
                    (Bt.getPublicKeyHexArrayFromCertPEM = function (t) {
                        var e = ht.pemToHex(t);
                        return Bt.getPublicKeyHexArrayFromCertHex(e);
                    }),
                    (Bt.hex2dn = function (t, e) {
                        if ((void 0 === e && (e = 0), "30" !== t.substr(e, 2)))
                            throw "malformed DN";
                        for (
                            var n = new Array(),
                                r = ht.getPosArrayOfChildren_AtObj(t, e),
                                i = 0;
                            i < r.length;
                            i++
                        )
                            n.push(Bt.hex2rdn(t, r[i]));
                        return (
                            "/" +
                            (n = n.map(function (t) {
                                return t.replace("/", "\\/");
                            })).join("/")
                        );
                    }),
                    (Bt.hex2rdn = function (t, e) {
                        if ((void 0 === e && (e = 0), "31" !== t.substr(e, 2)))
                            throw "malformed RDN";
                        for (
                            var n = new Array(),
                                r = ht.getPosArrayOfChildren_AtObj(t, e),
                                i = 0;
                            i < r.length;
                            i++
                        )
                            n.push(Bt.hex2attrTypeValue(t, r[i]));
                        return (n = n.map(function (t) {
                            return t.replace("+", "\\+");
                        })).join("+");
                    }),
                    (Bt.hex2attrTypeValue = function (t, e) {
                        if ((void 0 === e && (e = 0), "30" !== t.substr(e, 2)))
                            throw "malformed attribute type and value";
                        var n = ht.getPosArrayOfChildren_AtObj(t, e);
                        2 !== n.length || t.substr(n[0], 2);
                        var r = ht.getHexOfV_AtObj(t, n[0]),
                            i = l.asn1.ASN1Util.oidHexToInt(r);
                        return (
                            l.asn1.x509.OID.oid2atype(i) +
                            "=" +
                            mt(ht.getHexOfV_AtObj(t, n[1]))
                        );
                    }),
                    (Bt.getPublicKeyFromCertHex = function (t) {
                        var e,
                            n,
                            r = 6,
                            i = ht,
                            s = i.getVbyList;
                        if (
                            ("a003020102" !==
                                i.getDecendantHexTLVByNthList(t, 0, [0, 0]) &&
                                (r = 5),
                            "2a864886f70d010101" ===
                                (n = s(t, 0, [0, r, 0, 0], "06")))
                        )
                            e = new tt();
                        else if ("2a8648ce380401" === n) e = new l.crypto.DSA();
                        else {
                            if ("2a8648ce3d0201" !== n)
                                throw "unsupported public key in X.509 cert";
                            e = new l.crypto.ECDSA();
                        }
                        return e.readCertPubKeyHex(t, r), e;
                    }),
                    (Bt.getPublicKeyFromCertPEM = function (t) {
                        var e = ht.pemToHex(t);
                        return Bt.getPublicKeyFromCertHex(e);
                    }),
                    (Bt.getPublicKeyInfoPropOfCertPEM = function (t) {
                        var e = { algparam: null },
                            n = ht.pemToHex(t),
                            r = ht.getPosArrayOfChildren_AtObj(n, 0);
                        if (3 != r.length)
                            throw "malformed X.509 certificate PEM (code:001)";
                        if ("30" != n.substr(r[0], 2))
                            throw "malformed X.509 certificate PEM (code:002)";
                        var i = ht.getPosArrayOfChildren_AtObj(n, r[0]),
                            s = 6;
                        if (
                            ("a0" !== n.substr(i[0], 2) && (s = 5),
                            i.length < s + 1)
                        )
                            throw "malformed X.509 certificate PEM (code:003)";
                        var a = ht.getPosArrayOfChildren_AtObj(n, i[s]);
                        if (2 != a.length)
                            throw "malformed X.509 certificate PEM (code:004)";
                        var o = ht.getPosArrayOfChildren_AtObj(n, a[0]);
                        if (2 != o.length)
                            throw "malformed X.509 certificate PEM (code:005)";
                        if (
                            ((e.algoid = ht.getHexOfV_AtObj(n, o[0])),
                            "06" == n.substr(o[1], 2)
                                ? (e.algparam = ht.getHexOfV_AtObj(n, o[1]))
                                : "30" == n.substr(o[1], 2) &&
                                  (e.algparam = ht.getHexOfTLV_AtObj(n, o[1])),
                            "03" != n.substr(a[1], 2))
                        )
                            throw "malformed X.509 certificate PEM (code:006)";
                        var h = ht.getHexOfV_AtObj(n, a[1]);
                        return (e.keyhex = h.substr(2)), e;
                    }),
                    (Bt.getPublicKeyInfoPosOfCertHEX = function (t) {
                        var e = ht.getPosArrayOfChildren_AtObj(t, 0);
                        if (3 != e.length)
                            throw "malformed X.509 certificate PEM (code:001)";
                        if ("30" != t.substr(e[0], 2))
                            throw "malformed X.509 certificate PEM (code:002)";
                        var n = ht.getPosArrayOfChildren_AtObj(t, e[0]);
                        if (n.length < 7)
                            throw "malformed X.509 certificate PEM (code:003)";
                        return n[6];
                    }),
                    (Bt.getV3ExtInfoListOfCertHex = function (t) {
                        var e = ht.getPosArrayOfChildren_AtObj(t, 0);
                        if (3 != e.length)
                            throw "malformed X.509 certificate PEM (code:001)";
                        if ("30" != t.substr(e[0], 2))
                            throw "malformed X.509 certificate PEM (code:002)";
                        var n = ht.getPosArrayOfChildren_AtObj(t, e[0]);
                        if (n.length < 8)
                            throw "malformed X.509 certificate PEM (code:003)";
                        if ("a3" != t.substr(n[7], 2))
                            throw "malformed X.509 certificate PEM (code:004)";
                        var r = ht.getPosArrayOfChildren_AtObj(t, n[7]);
                        if (1 != r.length)
                            throw "malformed X.509 certificate PEM (code:005)";
                        if ("30" != t.substr(r[0], 2))
                            throw "malformed X.509 certificate PEM (code:006)";
                        for (
                            var i = ht.getPosArrayOfChildren_AtObj(t, r[0]),
                                s = i.length,
                                a = new Array(s),
                                o = 0;
                            o < s;
                            o++
                        )
                            a[o] = Bt.getV3ExtItemInfo_AtObj(t, i[o]);
                        return a;
                    }),
                    (Bt.getV3ExtItemInfo_AtObj = function (t, e) {
                        var n = {};
                        n.posTLV = e;
                        var r = ht.getPosArrayOfChildren_AtObj(t, e);
                        if (2 != r.length && 3 != r.length)
                            throw "malformed X.509v3 Ext (code:001)";
                        if ("06" != t.substr(r[0], 2))
                            throw "malformed X.509v3 Ext (code:002)";
                        var i = ht.getHexOfV_AtObj(t, r[0]);
                        (n.oid = ht.hextooidstr(i)),
                            (n.critical = !1),
                            3 == r.length && (n.critical = !0);
                        var s = r[r.length - 1];
                        if ("04" != t.substr(s, 2))
                            throw "malformed X.509v3 Ext (code:003)";
                        return (n.posV = ht.getStartPosOfV_AtObj(t, s)), n;
                    }),
                    (Bt.getHexOfTLV_V3ExtValue = function (t, e) {
                        var n = Bt.getPosOfTLV_V3ExtValue(t, e);
                        return -1 == n ? null : ht.getHexOfTLV_AtObj(t, n);
                    }),
                    (Bt.getHexOfV_V3ExtValue = function (t, e) {
                        var n = Bt.getPosOfTLV_V3ExtValue(t, e);
                        return -1 == n ? null : ht.getHexOfV_AtObj(t, n);
                    }),
                    (Bt.getPosOfTLV_V3ExtValue = function (t, e) {
                        var n = e;
                        if (
                            (e.match(/^[0-9.]+$/) ||
                                (n = l.asn1.x509.OID.name2oid(e)),
                            "" == n)
                        )
                            return -1;
                        for (
                            var r = Bt.getV3ExtInfoListOfCertHex(t), i = 0;
                            i < r.length;
                            i++
                        ) {
                            var s = r[i];
                            if (s.oid == n) return s.posV;
                        }
                        return -1;
                    }),
                    (Bt.getExtBasicConstraints = function (t) {
                        var e = Bt.getHexOfV_V3ExtValue(t, "basicConstraints");
                        if (null === e) return null;
                        if ("" === e) return {};
                        if ("0101ff" === e) return { cA: !0 };
                        if ("0101ff02" === e.substr(0, 8)) {
                            var n = ht.getHexOfV_AtObj(e, 6);
                            return { cA: !0, pathLen: parseInt(n, 16) };
                        }
                        throw "unknown error";
                    }),
                    (Bt.KEYUSAGE_NAME = [
                        "digitalSignature",
                        "nonRepudiation",
                        "keyEncipherment",
                        "dataEncipherment",
                        "keyAgreement",
                        "keyCertSign",
                        "cRLSign",
                        "encipherOnly",
                        "decipherOnly",
                    ]),
                    (Bt.getExtKeyUsageBin = function (t) {
                        var e = Bt.getHexOfV_V3ExtValue(t, "keyUsage");
                        if ("" == e) return "";
                        if (e.length % 2 != 0 || e.length <= 2)
                            throw "malformed key usage value";
                        var n = parseInt(e.substr(0, 2)),
                            r = parseInt(e.substr(2), 16).toString(2);
                        return r.substr(0, r.length - n);
                    }),
                    (Bt.getExtKeyUsageString = function (t) {
                        for (
                            var e = Bt.getExtKeyUsageBin(t),
                                n = new Array(),
                                r = 0;
                            r < e.length;
                            r++
                        )
                            "1" == e.substr(r, 1) &&
                                n.push(Bt.KEYUSAGE_NAME[r]);
                        return n.join(",");
                    }),
                    (Bt.getExtSubjectKeyIdentifier = function (t) {
                        return Bt.getHexOfV_V3ExtValue(
                            t,
                            "subjectKeyIdentifier"
                        );
                    }),
                    (Bt.getExtAuthorityKeyIdentifier = function (t) {
                        var e = {},
                            n = Bt.getHexOfTLV_V3ExtValue(
                                t,
                                "authorityKeyIdentifier"
                            );
                        if (null === n) return null;
                        for (
                            var r = ht.getPosArrayOfChildren_AtObj(n, 0), i = 0;
                            i < r.length;
                            i++
                        )
                            "80" === n.substr(r[i], 2) &&
                                (e.kid = ht.getHexOfV_AtObj(n, r[i]));
                        return e;
                    }),
                    (Bt.getExtExtKeyUsageName = function (t) {
                        var e = new Array(),
                            n = Bt.getHexOfTLV_V3ExtValue(t, "extKeyUsage");
                        if (null === n) return null;
                        for (
                            var r = ht.getPosArrayOfChildren_AtObj(n, 0), i = 0;
                            i < r.length;
                            i++
                        ) {
                            var s = ht.getHexOfV_AtObj(n, r[i]),
                                a = l.asn1.ASN1Util.oidHexToInt(s),
                                o = l.asn1.x509.OID.oid2name(a);
                            e.push(o);
                        }
                        return e;
                    }),
                    (Bt.getExtSubjectAltName = function (t) {
                        for (
                            var e = new Array(),
                                n = Bt.getHexOfTLV_V3ExtValue(
                                    t,
                                    "subjectAltName"
                                ),
                                r = ht.getPosArrayOfChildren_AtObj(n, 0),
                                i = 0;
                            i < r.length;
                            i++
                        )
                            if ("82" === n.substr(r[i], 2)) {
                                var s = yt(ht.getHexOfV_AtObj(n, r[i]));
                                e.push(s);
                            }
                        return e;
                    }),
                    (Bt.getExtCRLDistributionPointsURI = function (t) {
                        for (
                            var e = new Array(),
                                n = Bt.getHexOfTLV_V3ExtValue(
                                    t,
                                    "cRLDistributionPoints"
                                ),
                                r = ht.getPosArrayOfChildren_AtObj(n, 0),
                                i = 0;
                            i < r.length;
                            i++
                        )
                            for (
                                var s = ht.getHexOfTLV_AtObj(n, r[i]),
                                    a = ht.getPosArrayOfChildren_AtObj(s, 0),
                                    o = 0;
                                o < a.length;
                                o++
                            )
                                if ("a0" === s.substr(a[o], 2)) {
                                    var h = ht.getHexOfV_AtObj(s, a[o]);
                                    if ("a0" === h.substr(0, 2)) {
                                        var u = ht.getHexOfV_AtObj(h, 0);
                                        if ("86" === u.substr(0, 2)) {
                                            var c = yt(
                                                ht.getHexOfV_AtObj(u, 0)
                                            );
                                            e.push(c);
                                        }
                                    }
                                }
                        return e;
                    }),
                    (Bt.getExtAIAInfo = function (t) {
                        var e = { ocsp: [], caissuer: [] },
                            n = Bt.getPosOfTLV_V3ExtValue(
                                t,
                                "authorityInfoAccess"
                            );
                        if (-1 == n) return null;
                        if ("30" != t.substr(n, 2))
                            throw "malformed AIA Extn Value";
                        for (
                            var r = ht.getPosArrayOfChildren_AtObj(t, n), i = 0;
                            i < r.length;
                            i++
                        ) {
                            var s = r[i],
                                a = ht.getPosArrayOfChildren_AtObj(t, s);
                            if (2 != a.length)
                                throw "malformed AccessDescription of AIA Extn";
                            var o = a[0],
                                h = a[1];
                            "2b06010505073001" == ht.getHexOfV_AtObj(t, o) &&
                                "86" == t.substr(h, 2) &&
                                e.ocsp.push(yt(ht.getHexOfV_AtObj(t, h))),
                                "2b06010505073002" ==
                                    ht.getHexOfV_AtObj(t, o) &&
                                    "86" == t.substr(h, 2) &&
                                    e.caissuer.push(
                                        yt(ht.getHexOfV_AtObj(t, h))
                                    );
                        }
                        return e;
                    }),
                    (Bt.getSignatureAlgorithmName = function (t) {
                        var e = ht.getDecendantHexVByNthList(t, 0, [1, 0]),
                            n = l.asn1.ASN1Util.oidHexToInt(e);
                        return l.asn1.x509.OID.oid2name(n);
                    }),
                    (Bt.getSignatureValueHex = function (t) {
                        var e = ht.getDecendantHexVByNthList(t, 0, [2]);
                        if ("00" !== e.substr(0, 2))
                            throw "can't get signature value";
                        return e.substr(2);
                    }),
                    (Bt.getSerialNumberHex = function (t) {
                        return ht.getDecendantHexVByNthList(t, 0, [0, 1]);
                    }),
                    (Bt.verifySignature = function (t, e) {
                        var n = Bt.getSignatureAlgorithmName(t),
                            r = Bt.getSignatureValueHex(t),
                            i = ht.getDecendantHexTLVByNthList(t, 0, [0]),
                            s = new l.crypto.Signature({ alg: n });
                        return s.init(e), s.updateHex(i), s.verify(r);
                    }),
                    (void 0 !== l && l) || (l = {}),
                    (void 0 !== l.jws && l.jws) || (l.jws = {}),
                    (l.jws.JWS = function () {
                        var t = l.jws.JWS;
                        this.parseJWS = function (e, n) {
                            if (
                                void 0 === this.parsedJWS ||
                                (!n && void 0 === this.parsedJWS.sigvalH)
                            ) {
                                var r = e.match(/^([^.]+)\.([^.]+)\.([^.]+)$/);
                                if (null == r)
                                    throw "JWS signature is not a form of 'Head.Payload.SigValue'.";
                                var i = r[1],
                                    s = r[2],
                                    a = r[3],
                                    o = i + "." + s;
                                if (
                                    ((this.parsedJWS = {}),
                                    (this.parsedJWS.headB64U = i),
                                    (this.parsedJWS.payloadB64U = s),
                                    (this.parsedJWS.sigvalB64U = a),
                                    (this.parsedJWS.si = o),
                                    !n)
                                ) {
                                    var h = gt(a),
                                        u = Z(h, 16);
                                    (this.parsedJWS.sigvalH = h),
                                        (this.parsedJWS.sigvalBI = u);
                                }
                                var c = ot(i),
                                    l = ot(s);
                                if (
                                    ((this.parsedJWS.headS = c),
                                    (this.parsedJWS.payloadS = l),
                                    !t.isSafeJSONString(
                                        c,
                                        this.parsedJWS,
                                        "headP"
                                    ))
                                )
                                    throw (
                                        "malformed JSON string for JWS Head: " +
                                        c
                                    );
                            }
                        };
                    }),
                    (l.jws.JWS.sign = function (t, e, n, r, i) {
                        var s,
                            a,
                            o,
                            h = l.jws.JWS;
                        if ("string" != typeof e && "object" != typeof e)
                            throw (
                                "spHeader must be JSON string or object: " + e
                            );
                        if (
                            ("object" == typeof e &&
                                ((a = e), (s = JSON.stringify(a))),
                            "string" == typeof e)
                        ) {
                            if (((s = e), !h.isSafeJSONString(s)))
                                throw "JWS Head is not safe JSON string: " + s;
                            a = h.readSafeJSONString(s);
                        }
                        if (
                            ((o = n),
                            "object" == typeof n && (o = JSON.stringify(n)),
                            ("" != t && null != t) ||
                                void 0 === a.alg ||
                                (t = a.alg),
                            "" != t &&
                                null != t &&
                                void 0 === a.alg &&
                                ((a.alg = t), (s = JSON.stringify(a))),
                            t !== a.alg)
                        )
                            throw (
                                "alg and sHeader.alg doesn't match: " +
                                t +
                                "!=" +
                                a.alg
                            );
                        var u = null;
                        if (void 0 === h.jwsalg2sigalg[t])
                            throw "unsupported alg name: " + t;
                        u = h.jwsalg2sigalg[t];
                        var c = at(s) + "." + at(o),
                            f = "";
                        if ("Hmac" == u.substr(0, 4)) {
                            if (void 0 === r)
                                throw "mac key shall be specified for HS* alg";
                            var d = new l.crypto.Mac({
                                alg: u,
                                prov: "cryptojs",
                                pass: r,
                            });
                            d.updateString(c), (f = d.doFinal());
                        } else {
                            var g;
                            -1 != u.indexOf("withECDSA")
                                ? ((g = new l.crypto.Signature({
                                      alg: u,
                                  })).init(r, i),
                                  g.updateString(c),
                                  (hASN1Sig = g.sign()),
                                  (f =
                                      l.crypto.ECDSA.asn1SigToConcatSig(
                                          hASN1Sig
                                      )))
                                : "none" != u &&
                                  ((g = new l.crypto.Signature({
                                      alg: u,
                                  })).init(r, i),
                                  g.updateString(c),
                                  (f = g.sign()));
                        }
                        return c + "." + dt(f);
                    }),
                    (l.jws.JWS.verify = function (t, e, n) {
                        var r,
                            i = l.jws.JWS,
                            s = t.split("."),
                            a = s[0] + "." + s[1],
                            o = gt(s[2]),
                            h = i.readSafeJSONString(ot(s[0])),
                            u = null;
                        if (void 0 === h.alg)
                            throw "algorithm not specified in header";
                        if (
                            ((r = (u = h.alg).substr(0, 2)),
                            null != n &&
                                "[object Array]" ===
                                    Object.prototype.toString.call(n) &&
                                n.length > 0 &&
                                -1 ==
                                    (":" + n.join(":") + ":").indexOf(
                                        ":" + u + ":"
                                    ))
                        )
                            throw (
                                "algorithm '" + u + "' not accepted in the list"
                            );
                        if ("none" != u && null === e)
                            throw "key shall be specified to verify.";
                        if (
                            ("string" == typeof e &&
                                -1 != e.indexOf("-----BEGIN ") &&
                                (e = xt.getKey(e)),
                            !(("RS" != r && "PS" != r) || e instanceof tt))
                        )
                            throw "key shall be a RSAKey obj for RS* and PS* algs";
                        if ("ES" == r && !(e instanceof l.crypto.ECDSA))
                            throw "key shall be a ECDSA obj for ES* algs";
                        var c = null;
                        if (void 0 === i.jwsalg2sigalg[h.alg])
                            throw "unsupported alg name: " + u;
                        if ("none" == (c = i.jwsalg2sigalg[u]))
                            throw "not supported";
                        if ("Hmac" == c.substr(0, 4)) {
                            if (void 0 === e)
                                throw "hexadecimal key shall be specified for HMAC";
                            var f = new l.crypto.Mac({ alg: c, pass: e });
                            return f.updateString(a), o == f.doFinal();
                        }
                        if (-1 != c.indexOf("withECDSA")) {
                            var d,
                                g = null;
                            try {
                                g = l.crypto.ECDSA.concatSigToASN1Sig(o);
                            } catch (t) {
                                return !1;
                            }
                            return (
                                (d = new l.crypto.Signature({ alg: c })).init(
                                    e
                                ),
                                d.updateString(a),
                                d.verify(g)
                            );
                        }
                        return (
                            (d = new l.crypto.Signature({ alg: c })).init(e),
                            d.updateString(a),
                            d.verify(o)
                        );
                    }),
                    (l.jws.JWS.parse = function (t) {
                        var e,
                            n,
                            r,
                            i = t.split("."),
                            s = {};
                        if (2 != i.length && 3 != i.length)
                            throw "malformed sJWS: wrong number of '.' splitted elements";
                        return (
                            (e = i[0]),
                            (n = i[1]),
                            3 == i.length && (r = i[2]),
                            (s.headerObj = l.jws.JWS.readSafeJSONString(ot(e))),
                            (s.payloadObj = l.jws.JWS.readSafeJSONString(
                                ot(n)
                            )),
                            (s.headerPP = JSON.stringify(
                                s.headerObj,
                                null,
                                "  "
                            )),
                            null == s.payloadObj
                                ? (s.payloadPP = ot(n))
                                : (s.payloadPP = JSON.stringify(
                                      s.payloadObj,
                                      null,
                                      "  "
                                  )),
                            void 0 !== r && (s.sigHex = gt(r)),
                            s
                        );
                    }),
                    (l.jws.JWS.verifyJWT = function (t, e, n) {
                        var r = l.jws.JWS,
                            i = t.split("."),
                            s = i[0],
                            a = i[1],
                            o = (gt(i[2]), r.readSafeJSONString(ot(s))),
                            h = r.readSafeJSONString(ot(a));
                        if (void 0 === o.alg) return !1;
                        if (void 0 === n.alg)
                            throw "acceptField.alg shall be specified";
                        if (!r.inArray(o.alg, n.alg)) return !1;
                        if (
                            void 0 !== h.iss &&
                            "object" == typeof n.iss &&
                            !r.inArray(h.iss, n.iss)
                        )
                            return !1;
                        if (
                            void 0 !== h.sub &&
                            "object" == typeof n.sub &&
                            !r.inArray(h.sub, n.sub)
                        )
                            return !1;
                        if (void 0 !== h.aud && "object" == typeof n.aud)
                            if ("string" == typeof h.aud) {
                                if (!r.inArray(h.aud, n.aud)) return !1;
                            } else if (
                                "object" == typeof h.aud &&
                                !r.includedArray(h.aud, n.aud)
                            )
                                return !1;
                        var u = l.jws.IntDate.getNow();
                        return (
                            void 0 !== n.verifyAt &&
                                "number" == typeof n.verifyAt &&
                                (u = n.verifyAt),
                            (void 0 !== n.gracePeriod &&
                                "number" == typeof n.gracePeriod) ||
                                (n.gracePeriod = 0),
                            !(
                                (void 0 !== h.exp &&
                                    "number" == typeof h.exp &&
                                    h.exp + n.gracePeriod < u) ||
                                (void 0 !== h.nbf &&
                                    "number" == typeof h.nbf &&
                                    u < h.nbf - n.gracePeriod) ||
                                (void 0 !== h.iat &&
                                    "number" == typeof h.iat &&
                                    u < h.iat - n.gracePeriod) ||
                                (void 0 !== h.jti &&
                                    void 0 !== n.jti &&
                                    h.jti !== n.jti) ||
                                !l.jws.JWS.verify(t, e, n.alg)
                            )
                        );
                    }),
                    (l.jws.JWS.includedArray = function (t, e) {
                        var n = l.jws.JWS.inArray;
                        if (null === t) return !1;
                        if ("object" != typeof t) return !1;
                        if ("number" != typeof t.length) return !1;
                        for (var r = 0; r < t.length; r++)
                            if (!n(t[r], e)) return !1;
                        return !0;
                    }),
                    (l.jws.JWS.inArray = function (t, e) {
                        if (null === e) return !1;
                        if ("object" != typeof e) return !1;
                        if ("number" != typeof e.length) return !1;
                        for (var n = 0; n < e.length; n++)
                            if (e[n] == t) return !0;
                        return !1;
                    }),
                    (l.jws.JWS.jwsalg2sigalg = {
                        HS256: "HmacSHA256",
                        HS384: "HmacSHA384",
                        HS512: "HmacSHA512",
                        RS256: "SHA256withRSA",
                        RS384: "SHA384withRSA",
                        RS512: "SHA512withRSA",
                        ES256: "SHA256withECDSA",
                        ES384: "SHA384withECDSA",
                        PS256: "SHA256withRSAandMGF1",
                        PS384: "SHA384withRSAandMGF1",
                        PS512: "SHA512withRSAandMGF1",
                        none: "none",
                    }),
                    (l.jws.JWS.isSafeJSONString = function (t, e, n) {
                        var r = null;
                        try {
                            return "object" != typeof (r = st(t)) ||
                                r.constructor === Array
                                ? 0
                                : (e && (e[n] = r), 1);
                        } catch (t) {
                            return 0;
                        }
                    }),
                    (l.jws.JWS.readSafeJSONString = function (t) {
                        var e = null;
                        try {
                            return "object" != typeof (e = st(t)) ||
                                e.constructor === Array
                                ? null
                                : e;
                        } catch (t) {
                            return null;
                        }
                    }),
                    (l.jws.JWS.getEncodedSignatureValueFromJWS = function (t) {
                        var e = t.match(/^[^.]+\.[^.]+\.([^.]+)$/);
                        if (null == e)
                            throw "JWS signature is not a form of 'Head.Payload.SigValue'.";
                        return e[1];
                    }),
                    (l.jws.JWS.getJWKthumbprint = function (t) {
                        if (
                            "RSA" !== t.kty &&
                            "EC" !== t.kty &&
                            "oct" !== t.kty
                        )
                            throw "unsupported algorithm for JWK Thumprint";
                        var e = "{";
                        if ("RSA" === t.kty) {
                            if (
                                "string" != typeof t.n ||
                                "string" != typeof t.e
                            )
                                throw "wrong n and e value for RSA key";
                            (e += '"e":"' + t.e + '",'),
                                (e += '"kty":"' + t.kty + '",'),
                                (e += '"n":"' + t.n + '"}');
                        } else if ("EC" === t.kty) {
                            if (
                                "string" != typeof t.crv ||
                                "string" != typeof t.x ||
                                "string" != typeof t.y
                            )
                                throw "wrong crv, x and y value for EC key";
                            (e += '"crv":"' + t.crv + '",'),
                                (e += '"kty":"' + t.kty + '",'),
                                (e += '"x":"' + t.x + '",'),
                                (e += '"y":"' + t.y + '"}');
                        } else if ("oct" === t.kty) {
                            if ("string" != typeof t.k)
                                throw "wrong k value for oct(symmetric) key";
                            (e += '"kty":"' + t.kty + '",'),
                                (e += '"k":"' + t.k + '"}');
                        }
                        var n = vt(e);
                        return dt(l.crypto.Util.hashHex(n, "sha256"));
                    }),
                    (l.jws.IntDate = {}),
                    (l.jws.IntDate.get = function (t) {
                        if ("now" == t) return l.jws.IntDate.getNow();
                        if ("now + 1hour" == t)
                            return l.jws.IntDate.getNow() + 3600;
                        if ("now + 1day" == t)
                            return l.jws.IntDate.getNow() + 86400;
                        if ("now + 1month" == t)
                            return l.jws.IntDate.getNow() + 2592e3;
                        if ("now + 1year" == t)
                            return l.jws.IntDate.getNow() + 31536e3;
                        if (t.match(/Z$/)) return l.jws.IntDate.getZulu(t);
                        if (t.match(/^[0-9]+$/)) return parseInt(t);
                        throw "unsupported format: " + t;
                    }),
                    (l.jws.IntDate.getZulu = function (t) {
                        var e = t.match(/(\d+)(\d\d)(\d\d)(\d\d)(\d\d)(\d\d)Z/);
                        if (e) {
                            var n = e[1],
                                r = parseInt(n);
                            if (4 == n.length);
                            else {
                                if (2 != n.length)
                                    throw "malformed year string";
                                if (50 <= r && r < 100) r = 1900 + r;
                                else {
                                    if (!(0 <= r && r < 50))
                                        throw "malformed year string for UTCTime";
                                    r = 2e3 + r;
                                }
                            }
                            var i = parseInt(e[2]) - 1,
                                s = parseInt(e[3]),
                                a = parseInt(e[4]),
                                o = parseInt(e[5]),
                                h = parseInt(e[6]);
                            return ~~(
                                new Date(Date.UTC(r, i, s, a, o, h)) / 1e3
                            );
                        }
                        throw "unsupported format: " + t;
                    }),
                    (l.jws.IntDate.getNow = function () {
                        return ~~(new Date() / 1e3);
                    }),
                    (l.jws.IntDate.intDate2UTCString = function (t) {
                        return new Date(1e3 * t).toUTCString();
                    }),
                    (l.jws.IntDate.intDate2Zulu = function (t) {
                        var e = new Date(1e3 * t);
                        return (
                            ("0000" + e.getUTCFullYear()).slice(-4) +
                            ("00" + (e.getUTCMonth() + 1)).slice(-2) +
                            ("00" + e.getUTCDate()).slice(-2) +
                            ("00" + e.getUTCHours()).slice(-2) +
                            ("00" + e.getUTCMinutes()).slice(-2) +
                            ("00" + e.getUTCSeconds()).slice(-2) +
                            "Z"
                        );
                    }),
                    (void 0 !== l && l) || (l = {}),
                    (void 0 !== l.jws && l.jws) || (l.jws = {}),
                    (l.jws.JWSJS = function () {
                        var t = l.jws.JWS,
                            e = l.jws.JWS;
                        (this.aHeader = []),
                            (this.sPayload = ""),
                            (this.aSignature = []),
                            (this.init = function () {
                                (this.aHeader = []),
                                    (this.sPayload = void 0),
                                    (this.aSignature = []);
                            }),
                            (this.initWithJWS = function (t) {
                                this.init();
                                var e = t.split(".");
                                if (3 != e.length) throw "malformed input JWS";
                                this.aHeader.push(e[0]),
                                    (this.sPayload = e[1]),
                                    this.aSignature.push(e[2]);
                            }),
                            (this.addSignature = function (t, e, n, r) {
                                if (
                                    void 0 === this.sPayload ||
                                    null === this.sPayload
                                )
                                    throw "there's no JSON-JS signature to add.";
                                var i = this.aHeader.length;
                                if (
                                    this.aHeader.length !=
                                    this.aSignature.length
                                )
                                    throw "aHeader.length != aSignature.length";
                                try {
                                    var s = l.jws.JWS.sign(
                                        t,
                                        e,
                                        this.sPayload,
                                        n,
                                        r
                                    ).split(".");
                                    s[0],
                                        s[2],
                                        this.aHeader.push(s[0]),
                                        this.aSignature.push(s[2]);
                                } catch (t) {
                                    throw (
                                        (this.aHeader.length > i &&
                                            this.aHeader.pop(),
                                        this.aSignature.length > i &&
                                            this.aSignature.pop(),
                                        "addSignature failed: " + t)
                                    );
                                }
                            }),
                            (this.addSignatureByHeaderKey = function (t, e) {
                                var n = ot(this.sPayload),
                                    r = new l.jws.JWS();
                                r.generateJWSByP1PrvKey(t, n, e),
                                    this.aHeader.push(r.parsedJWS.headB64U),
                                    this.aSignature.push(
                                        r.parsedJWS.sigvalB64U
                                    );
                            }),
                            (this.addSignatureByHeaderPayloadKey = function (
                                t,
                                e,
                                n
                            ) {
                                var r = new l.jws.JWS();
                                r.generateJWSByP1PrvKey(t, e, n),
                                    this.aHeader.push(r.parsedJWS.headB64U),
                                    (this.sPayload = r.parsedJWS.payloadB64U),
                                    this.aSignature.push(
                                        r.parsedJWS.sigvalB64U
                                    );
                            }),
                            (this.verifyAll = function (t) {
                                if (
                                    this.aHeader.length !== t.length ||
                                    this.aSignature.length !== t.length
                                )
                                    return !1;
                                for (var e = 0; e < t.length; e++) {
                                    var n = t[e];
                                    if (2 !== n.length) return !1;
                                    if (!1 === this.verifyNth(e, n[0], n[1]))
                                        return !1;
                                }
                                return !0;
                            }),
                            (this.verifyNth = function (t, n, r) {
                                if (
                                    this.aHeader.length <= t ||
                                    this.aSignature.length <= t
                                )
                                    return !1;
                                var i = this.aHeader[t],
                                    s = this.aSignature[t],
                                    a = i + "." + this.sPayload + "." + s,
                                    o = !1;
                                try {
                                    o = e.verify(a, n, r);
                                } catch (t) {
                                    return !1;
                                }
                                return o;
                            }),
                            (this.verifyWithCerts = function (t) {
                                if (this.aHeader.length != t.length)
                                    throw "num headers does not match with num certs";
                                if (this.aSignature.length != t.length)
                                    throw "num signatures does not match with num certs";
                                for (
                                    var e = this.sPayload, n = "", r = 0;
                                    r < t.length;
                                    r++
                                ) {
                                    var i = t[r],
                                        s =
                                            this.aHeader[r] +
                                            "." +
                                            e +
                                            "." +
                                            this.aSignature[r],
                                        a = new l.jws.JWS();
                                    try {
                                        1 != a.verifyJWSByPemX509Cert(s, i) &&
                                            (n +=
                                                r +
                                                1 +
                                                "th signature unmatch. ");
                                    } catch (t) {
                                        n +=
                                            r +
                                            1 +
                                            "th signature fail(" +
                                            t +
                                            "). ";
                                    }
                                }
                                if ("" == n) return 1;
                                throw n;
                            }),
                            (this.readJWSJS = function (e) {
                                if ("string" == typeof e) {
                                    var n = t.readSafeJSONString(e);
                                    if (null == n)
                                        throw "argument is not safe JSON object string";
                                    (this.aHeader = n.headers),
                                        (this.sPayload = n.payload),
                                        (this.aSignature = n.signatures);
                                } else
                                    try {
                                        if (!(e.headers.length > 0))
                                            throw "malformed header";
                                        if (
                                            ((this.aHeader = e.headers),
                                            "string" != typeof e.payload)
                                        )
                                            throw "malformed signatures";
                                        if (
                                            ((this.sPayload = e.payload),
                                            !(e.signatures.length > 0))
                                        )
                                            throw "malformed signatures";
                                        this.signatures = e.signatures;
                                    } catch (t) {
                                        throw (
                                            "malformed JWS-JS JSON object: " + t
                                        );
                                    }
                            }),
                            (this.getJSON = function () {
                                return {
                                    headers: this.aHeader,
                                    payload: this.sPayload,
                                    signatures: this.aSignature,
                                };
                            }),
                            (this.isEmpty = function () {
                                return 0 == this.aHeader.length ? 1 : 0;
                            });
                    }),
                    (t.exports = {
                        RSAKey: tt,
                        KEYUTIL: xt,
                        hex2b64: v,
                        b64tohex: S,
                    });
            }.call(this, n(3).Buffer));
        },
        function (t, e, n) {
            "use strict";
            (function (t) {
                var r = n(5),
                    i = n(6),
                    s = n(7);
                function a() {
                    return h.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
                }
                function o(t, e) {
                    if (a() < e)
                        throw new RangeError("Invalid typed array length");
                    return (
                        h.TYPED_ARRAY_SUPPORT
                            ? ((t = new Uint8Array(e)).__proto__ = h.prototype)
                            : (null === t && (t = new h(e)), (t.length = e)),
                        t
                    );
                }
                function h(t, e, n) {
                    if (!(h.TYPED_ARRAY_SUPPORT || this instanceof h))
                        return new h(t, e, n);
                    if ("number" == typeof t) {
                        if ("string" == typeof e)
                            throw new Error(
                                "If encoding is specified then the first argument must be a string"
                            );
                        return l(this, t);
                    }
                    return u(this, t, e, n);
                }
                function u(t, e, n, r) {
                    if ("number" == typeof e)
                        throw new TypeError(
                            '"value" argument must not be a number'
                        );
                    return "undefined" != typeof ArrayBuffer &&
                        e instanceof ArrayBuffer
                        ? (function (t, e, n, r) {
                              if ((e.byteLength, n < 0 || e.byteLength < n))
                                  throw new RangeError(
                                      "'offset' is out of bounds"
                                  );
                              if (e.byteLength < n + (r || 0))
                                  throw new RangeError(
                                      "'length' is out of bounds"
                                  );
                              return (
                                  (e =
                                      void 0 === n && void 0 === r
                                          ? new Uint8Array(e)
                                          : void 0 === r
                                          ? new Uint8Array(e, n)
                                          : new Uint8Array(e, n, r)),
                                  h.TYPED_ARRAY_SUPPORT
                                      ? ((t = e).__proto__ = h.prototype)
                                      : (t = f(t, e)),
                                  t
                              );
                          })(t, e, n, r)
                        : "string" == typeof e
                        ? (function (t, e, n) {
                              if (
                                  (("string" == typeof n && "" !== n) ||
                                      (n = "utf8"),
                                  !h.isEncoding(n))
                              )
                                  throw new TypeError(
                                      '"encoding" must be a valid string encoding'
                                  );
                              var r = 0 | g(e, n),
                                  i = (t = o(t, r)).write(e, n);
                              return i !== r && (t = t.slice(0, i)), t;
                          })(t, e, n)
                        : (function (t, e) {
                              if (h.isBuffer(e)) {
                                  var n = 0 | d(e.length);
                                  return (
                                      0 === (t = o(t, n)).length ||
                                          e.copy(t, 0, 0, n),
                                      t
                                  );
                              }
                              if (e) {
                                  if (
                                      ("undefined" != typeof ArrayBuffer &&
                                          e.buffer instanceof ArrayBuffer) ||
                                      "length" in e
                                  )
                                      return "number" != typeof e.length ||
                                          (r = e.length) != r
                                          ? o(t, 0)
                                          : f(t, e);
                                  if ("Buffer" === e.type && s(e.data))
                                      return f(t, e.data);
                              }
                              var r;
                              throw new TypeError(
                                  "First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object."
                              );
                          })(t, e);
                }
                function c(t) {
                    if ("number" != typeof t)
                        throw new TypeError('"size" argument must be a number');
                    if (t < 0)
                        throw new RangeError(
                            '"size" argument must not be negative'
                        );
                }
                function l(t, e) {
                    if (
                        (c(e),
                        (t = o(t, e < 0 ? 0 : 0 | d(e))),
                        !h.TYPED_ARRAY_SUPPORT)
                    )
                        for (var n = 0; n < e; ++n) t[n] = 0;
                    return t;
                }
                function f(t, e) {
                    var n = e.length < 0 ? 0 : 0 | d(e.length);
                    t = o(t, n);
                    for (var r = 0; r < n; r += 1) t[r] = 255 & e[r];
                    return t;
                }
                function d(t) {
                    if (t >= a())
                        throw new RangeError(
                            "Attempt to allocate Buffer larger than maximum size: 0x" +
                                a().toString(16) +
                                " bytes"
                        );
                    return 0 | t;
                }
                function g(t, e) {
                    if (h.isBuffer(t)) return t.length;
                    if (
                        "undefined" != typeof ArrayBuffer &&
                        "function" == typeof ArrayBuffer.isView &&
                        (ArrayBuffer.isView(t) || t instanceof ArrayBuffer)
                    )
                        return t.byteLength;
                    "string" != typeof t && (t = "" + t);
                    var n = t.length;
                    if (0 === n) return 0;
                    for (var r = !1; ; )
                        switch (e) {
                            case "ascii":
                            case "latin1":
                            case "binary":
                                return n;
                            case "utf8":
                            case "utf-8":
                            case void 0:
                                return L(t).length;
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return 2 * n;
                            case "hex":
                                return n >>> 1;
                            case "base64":
                                return k(t).length;
                            default:
                                if (r) return L(t).length;
                                (e = ("" + e).toLowerCase()), (r = !0);
                        }
                }
                function p(t, e, n) {
                    var r = t[e];
                    (t[e] = t[n]), (t[n] = r);
                }
                function y(t, e, n, r, i) {
                    if (0 === t.length) return -1;
                    if (
                        ("string" == typeof n
                            ? ((r = n), (n = 0))
                            : n > 2147483647
                            ? (n = 2147483647)
                            : n < -2147483648 && (n = -2147483648),
                        (n = +n),
                        isNaN(n) && (n = i ? 0 : t.length - 1),
                        n < 0 && (n = t.length + n),
                        n >= t.length)
                    ) {
                        if (i) return -1;
                        n = t.length - 1;
                    } else if (n < 0) {
                        if (!i) return -1;
                        n = 0;
                    }
                    if (
                        ("string" == typeof e && (e = h.from(e, r)),
                        h.isBuffer(e))
                    )
                        return 0 === e.length ? -1 : m(t, e, n, r, i);
                    if ("number" == typeof e)
                        return (
                            (e &= 255),
                            h.TYPED_ARRAY_SUPPORT &&
                            "function" == typeof Uint8Array.prototype.indexOf
                                ? i
                                    ? Uint8Array.prototype.indexOf.call(t, e, n)
                                    : Uint8Array.prototype.lastIndexOf.call(
                                          t,
                                          e,
                                          n
                                      )
                                : m(t, [e], n, r, i)
                        );
                    throw new TypeError("val must be string, number or Buffer");
                }
                function m(t, e, n, r, i) {
                    var s,
                        a = 1,
                        o = t.length,
                        h = e.length;
                    if (
                        void 0 !== r &&
                        ("ucs2" === (r = String(r).toLowerCase()) ||
                            "ucs-2" === r ||
                            "utf16le" === r ||
                            "utf-16le" === r)
                    ) {
                        if (t.length < 2 || e.length < 2) return -1;
                        (a = 2), (o /= 2), (h /= 2), (n /= 2);
                    }
                    function u(t, e) {
                        return 1 === a ? t[e] : t.readUInt16BE(e * a);
                    }
                    if (i) {
                        var c = -1;
                        for (s = n; s < o; s++)
                            if (u(t, s) === u(e, -1 === c ? 0 : s - c)) {
                                if ((-1 === c && (c = s), s - c + 1 === h))
                                    return c * a;
                            } else -1 !== c && (s -= s - c), (c = -1);
                    } else
                        for (n + h > o && (n = o - h), s = n; s >= 0; s--) {
                            for (var l = !0, f = 0; f < h; f++)
                                if (u(t, s + f) !== u(e, f)) {
                                    l = !1;
                                    break;
                                }
                            if (l) return s;
                        }
                    return -1;
                }
                function v(t, e, n, r) {
                    n = Number(n) || 0;
                    var i = t.length - n;
                    r ? (r = Number(r)) > i && (r = i) : (r = i);
                    var s = e.length;
                    if (s % 2 != 0) throw new TypeError("Invalid hex string");
                    r > s / 2 && (r = s / 2);
                    for (var a = 0; a < r; ++a) {
                        var o = parseInt(e.substr(2 * a, 2), 16);
                        if (isNaN(o)) return a;
                        t[n + a] = o;
                    }
                    return a;
                }
                function S(t, e, n, r) {
                    return M(L(e, t.length - n), t, n, r);
                }
                function A(t, e, n, r) {
                    return M(
                        (function (t) {
                            for (var e = [], n = 0; n < t.length; ++n)
                                e.push(255 & t.charCodeAt(n));
                            return e;
                        })(e),
                        t,
                        n,
                        r
                    );
                }
                function b(t, e, n, r) {
                    return A(t, e, n, r);
                }
                function E(t, e, n, r) {
                    return M(k(e), t, n, r);
                }
                function x(t, e, n, r) {
                    return M(
                        (function (t, e) {
                            for (
                                var n, r, i, s = [], a = 0;
                                a < t.length && !((e -= 2) < 0);
                                ++a
                            )
                                (r = (n = t.charCodeAt(a)) >> 8),
                                    (i = n % 256),
                                    s.push(i),
                                    s.push(r);
                            return s;
                        })(e, t.length - n),
                        t,
                        n,
                        r
                    );
                }
                function w(t, e, n) {
                    return 0 === e && n === t.length
                        ? r.fromByteArray(t)
                        : r.fromByteArray(t.slice(e, n));
                }
                function F(t, e, n) {
                    n = Math.min(t.length, n);
                    for (var r = [], i = e; i < n; ) {
                        var s,
                            a,
                            o,
                            h,
                            u = t[i],
                            c = null,
                            l = u > 239 ? 4 : u > 223 ? 3 : u > 191 ? 2 : 1;
                        if (i + l <= n)
                            switch (l) {
                                case 1:
                                    u < 128 && (c = u);
                                    break;
                                case 2:
                                    128 == (192 & (s = t[i + 1])) &&
                                        (h = ((31 & u) << 6) | (63 & s)) >
                                            127 &&
                                        (c = h);
                                    break;
                                case 3:
                                    (s = t[i + 1]),
                                        (a = t[i + 2]),
                                        128 == (192 & s) &&
                                            128 == (192 & a) &&
                                            (h =
                                                ((15 & u) << 12) |
                                                ((63 & s) << 6) |
                                                (63 & a)) > 2047 &&
                                            (h < 55296 || h > 57343) &&
                                            (c = h);
                                    break;
                                case 4:
                                    (s = t[i + 1]),
                                        (a = t[i + 2]),
                                        (o = t[i + 3]),
                                        128 == (192 & s) &&
                                            128 == (192 & a) &&
                                            128 == (192 & o) &&
                                            (h =
                                                ((15 & u) << 18) |
                                                ((63 & s) << 12) |
                                                ((63 & a) << 6) |
                                                (63 & o)) > 65535 &&
                                            h < 1114112 &&
                                            (c = h);
                            }
                        null === c
                            ? ((c = 65533), (l = 1))
                            : c > 65535 &&
                              ((c -= 65536),
                              r.push(((c >>> 10) & 1023) | 55296),
                              (c = 56320 | (1023 & c))),
                            r.push(c),
                            (i += l);
                    }
                    return (function (t) {
                        var e = t.length;
                        if (e <= P) return String.fromCharCode.apply(String, t);
                        for (var n = "", r = 0; r < e; )
                            n += String.fromCharCode.apply(
                                String,
                                t.slice(r, (r += P))
                            );
                        return n;
                    })(r);
                }
                (e.Buffer = h),
                    (e.SlowBuffer = function (t) {
                        return +t != t && (t = 0), h.alloc(+t);
                    }),
                    (e.INSPECT_MAX_BYTES = 50),
                    (h.TYPED_ARRAY_SUPPORT =
                        void 0 !== t.TYPED_ARRAY_SUPPORT
                            ? t.TYPED_ARRAY_SUPPORT
                            : (function () {
                                  try {
                                      var t = new Uint8Array(1);
                                      return (
                                          (t.__proto__ = {
                                              __proto__: Uint8Array.prototype,
                                              foo: function () {
                                                  return 42;
                                              },
                                          }),
                                          42 === t.foo() &&
                                              "function" == typeof t.subarray &&
                                              0 === t.subarray(1, 1).byteLength
                                      );
                                  } catch (t) {
                                      return !1;
                                  }
                              })()),
                    (e.kMaxLength = a()),
                    (h.poolSize = 8192),
                    (h._augment = function (t) {
                        return (t.__proto__ = h.prototype), t;
                    }),
                    (h.from = function (t, e, n) {
                        return u(null, t, e, n);
                    }),
                    h.TYPED_ARRAY_SUPPORT &&
                        ((h.prototype.__proto__ = Uint8Array.prototype),
                        (h.__proto__ = Uint8Array),
                        "undefined" != typeof Symbol &&
                            Symbol.species &&
                            h[Symbol.species] === h &&
                            Object.defineProperty(h, Symbol.species, {
                                value: null,
                                configurable: !0,
                            })),
                    (h.alloc = function (t, e, n) {
                        return (function (t, e, n, r) {
                            return (
                                c(e),
                                e <= 0
                                    ? o(t, e)
                                    : void 0 !== n
                                    ? "string" == typeof r
                                        ? o(t, e).fill(n, r)
                                        : o(t, e).fill(n)
                                    : o(t, e)
                            );
                        })(null, t, e, n);
                    }),
                    (h.allocUnsafe = function (t) {
                        return l(null, t);
                    }),
                    (h.allocUnsafeSlow = function (t) {
                        return l(null, t);
                    }),
                    (h.isBuffer = function (t) {
                        return !(null == t || !t._isBuffer);
                    }),
                    (h.compare = function (t, e) {
                        if (!h.isBuffer(t) || !h.isBuffer(e))
                            throw new TypeError("Arguments must be Buffers");
                        if (t === e) return 0;
                        for (
                            var n = t.length,
                                r = e.length,
                                i = 0,
                                s = Math.min(n, r);
                            i < s;
                            ++i
                        )
                            if (t[i] !== e[i]) {
                                (n = t[i]), (r = e[i]);
                                break;
                            }
                        return n < r ? -1 : r < n ? 1 : 0;
                    }),
                    (h.isEncoding = function (t) {
                        switch (String(t).toLowerCase()) {
                            case "hex":
                            case "utf8":
                            case "utf-8":
                            case "ascii":
                            case "latin1":
                            case "binary":
                            case "base64":
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return !0;
                            default:
                                return !1;
                        }
                    }),
                    (h.concat = function (t, e) {
                        if (!s(t))
                            throw new TypeError(
                                '"list" argument must be an Array of Buffers'
                            );
                        if (0 === t.length) return h.alloc(0);
                        var n;
                        if (void 0 === e)
                            for (e = 0, n = 0; n < t.length; ++n)
                                e += t[n].length;
                        var r = h.allocUnsafe(e),
                            i = 0;
                        for (n = 0; n < t.length; ++n) {
                            var a = t[n];
                            if (!h.isBuffer(a))
                                throw new TypeError(
                                    '"list" argument must be an Array of Buffers'
                                );
                            a.copy(r, i), (i += a.length);
                        }
                        return r;
                    }),
                    (h.byteLength = g),
                    (h.prototype._isBuffer = !0),
                    (h.prototype.swap16 = function () {
                        var t = this.length;
                        if (t % 2 != 0)
                            throw new RangeError(
                                "Buffer size must be a multiple of 16-bits"
                            );
                        for (var e = 0; e < t; e += 2) p(this, e, e + 1);
                        return this;
                    }),
                    (h.prototype.swap32 = function () {
                        var t = this.length;
                        if (t % 4 != 0)
                            throw new RangeError(
                                "Buffer size must be a multiple of 32-bits"
                            );
                        for (var e = 0; e < t; e += 4)
                            p(this, e, e + 3), p(this, e + 1, e + 2);
                        return this;
                    }),
                    (h.prototype.swap64 = function () {
                        var t = this.length;
                        if (t % 8 != 0)
                            throw new RangeError(
                                "Buffer size must be a multiple of 64-bits"
                            );
                        for (var e = 0; e < t; e += 8)
                            p(this, e, e + 7),
                                p(this, e + 1, e + 6),
                                p(this, e + 2, e + 5),
                                p(this, e + 3, e + 4);
                        return this;
                    }),
                    (h.prototype.toString = function () {
                        var t = 0 | this.length;
                        return 0 === t
                            ? ""
                            : 0 === arguments.length
                            ? F(this, 0, t)
                            : function (t, e, n) {
                                  var r = !1;
                                  if (
                                      ((void 0 === e || e < 0) && (e = 0),
                                      e > this.length)
                                  )
                                      return "";
                                  if (
                                      ((void 0 === n || n > this.length) &&
                                          (n = this.length),
                                      n <= 0)
                                  )
                                      return "";
                                  if ((n >>>= 0) <= (e >>>= 0)) return "";
                                  for (t || (t = "utf8"); ; )
                                      switch (t) {
                                          case "hex":
                                              return O(this, e, n);
                                          case "utf8":
                                          case "utf-8":
                                              return F(this, e, n);
                                          case "ascii":
                                              return C(this, e, n);
                                          case "latin1":
                                          case "binary":
                                              return D(this, e, n);
                                          case "base64":
                                              return w(this, e, n);
                                          case "ucs2":
                                          case "ucs-2":
                                          case "utf16le":
                                          case "utf-16le":
                                              return T(this, e, n);
                                          default:
                                              if (r)
                                                  throw new TypeError(
                                                      "Unknown encoding: " + t
                                                  );
                                              (t = (t + "").toLowerCase()),
                                                  (r = !0);
                                      }
                              }.apply(this, arguments);
                    }),
                    (h.prototype.equals = function (t) {
                        if (!h.isBuffer(t))
                            throw new TypeError("Argument must be a Buffer");
                        return this === t || 0 === h.compare(this, t);
                    }),
                    (h.prototype.inspect = function () {
                        var t = "",
                            n = e.INSPECT_MAX_BYTES;
                        return (
                            this.length > 0 &&
                                ((t = this.toString("hex", 0, n)
                                    .match(/.{2}/g)
                                    .join(" ")),
                                this.length > n && (t += " ... ")),
                            "<Buffer " + t + ">"
                        );
                    }),
                    (h.prototype.compare = function (t, e, n, r, i) {
                        if (!h.isBuffer(t))
                            throw new TypeError("Argument must be a Buffer");
                        if (
                            (void 0 === e && (e = 0),
                            void 0 === n && (n = t ? t.length : 0),
                            void 0 === r && (r = 0),
                            void 0 === i && (i = this.length),
                            e < 0 || n > t.length || r < 0 || i > this.length)
                        )
                            throw new RangeError("out of range index");
                        if (r >= i && e >= n) return 0;
                        if (r >= i) return -1;
                        if (e >= n) return 1;
                        if (this === t) return 0;
                        for (
                            var s = (i >>>= 0) - (r >>>= 0),
                                a = (n >>>= 0) - (e >>>= 0),
                                o = Math.min(s, a),
                                u = this.slice(r, i),
                                c = t.slice(e, n),
                                l = 0;
                            l < o;
                            ++l
                        )
                            if (u[l] !== c[l]) {
                                (s = u[l]), (a = c[l]);
                                break;
                            }
                        return s < a ? -1 : a < s ? 1 : 0;
                    }),
                    (h.prototype.includes = function (t, e, n) {
                        return -1 !== this.indexOf(t, e, n);
                    }),
                    (h.prototype.indexOf = function (t, e, n) {
                        return y(this, t, e, n, !0);
                    }),
                    (h.prototype.lastIndexOf = function (t, e, n) {
                        return y(this, t, e, n, !1);
                    }),
                    (h.prototype.write = function (t, e, n, r) {
                        if (void 0 === e)
                            (r = "utf8"), (n = this.length), (e = 0);
                        else if (void 0 === n && "string" == typeof e)
                            (r = e), (n = this.length), (e = 0);
                        else {
                            if (!isFinite(e))
                                throw new Error(
                                    "Buffer.write(string, encoding, offset[, length]) is no longer supported"
                                );
                            (e |= 0),
                                isFinite(n)
                                    ? ((n |= 0), void 0 === r && (r = "utf8"))
                                    : ((r = n), (n = void 0));
                        }
                        var i = this.length - e;
                        if (
                            ((void 0 === n || n > i) && (n = i),
                            (t.length > 0 && (n < 0 || e < 0)) ||
                                e > this.length)
                        )
                            throw new RangeError(
                                "Attempt to write outside buffer bounds"
                            );
                        r || (r = "utf8");
                        for (var s = !1; ; )
                            switch (r) {
                                case "hex":
                                    return v(this, t, e, n);
                                case "utf8":
                                case "utf-8":
                                    return S(this, t, e, n);
                                case "ascii":
                                    return A(this, t, e, n);
                                case "latin1":
                                case "binary":
                                    return b(this, t, e, n);
                                case "base64":
                                    return E(this, t, e, n);
                                case "ucs2":
                                case "ucs-2":
                                case "utf16le":
                                case "utf-16le":
                                    return x(this, t, e, n);
                                default:
                                    if (s)
                                        throw new TypeError(
                                            "Unknown encoding: " + r
                                        );
                                    (r = ("" + r).toLowerCase()), (s = !0);
                            }
                    }),
                    (h.prototype.toJSON = function () {
                        return {
                            type: "Buffer",
                            data: Array.prototype.slice.call(
                                this._arr || this,
                                0
                            ),
                        };
                    });
                var P = 4096;
                function C(t, e, n) {
                    var r = "";
                    n = Math.min(t.length, n);
                    for (var i = e; i < n; ++i)
                        r += String.fromCharCode(127 & t[i]);
                    return r;
                }
                function D(t, e, n) {
                    var r = "";
                    n = Math.min(t.length, n);
                    for (var i = e; i < n; ++i) r += String.fromCharCode(t[i]);
                    return r;
                }
                function O(t, e, n) {
                    var r = t.length;
                    (!e || e < 0) && (e = 0), (!n || n < 0 || n > r) && (n = r);
                    for (var i = "", s = e; s < n; ++s) i += K(t[s]);
                    return i;
                }
                function T(t, e, n) {
                    for (
                        var r = t.slice(e, n), i = "", s = 0;
                        s < r.length;
                        s += 2
                    )
                        i += String.fromCharCode(r[s] + 256 * r[s + 1]);
                    return i;
                }
                function H(t, e, n) {
                    if (t % 1 != 0 || t < 0)
                        throw new RangeError("offset is not uint");
                    if (t + e > n)
                        throw new RangeError(
                            "Trying to access beyond buffer length"
                        );
                }
                function I(t, e, n, r, i, s) {
                    if (!h.isBuffer(t))
                        throw new TypeError(
                            '"buffer" argument must be a Buffer instance'
                        );
                    if (e > i || e < s)
                        throw new RangeError(
                            '"value" argument is out of bounds'
                        );
                    if (n + r > t.length)
                        throw new RangeError("Index out of range");
                }
                function R(t, e, n, r) {
                    e < 0 && (e = 65535 + e + 1);
                    for (var i = 0, s = Math.min(t.length - n, 2); i < s; ++i)
                        t[n + i] =
                            (e & (255 << (8 * (r ? i : 1 - i)))) >>>
                            (8 * (r ? i : 1 - i));
                }
                function N(t, e, n, r) {
                    e < 0 && (e = 4294967295 + e + 1);
                    for (var i = 0, s = Math.min(t.length - n, 4); i < s; ++i)
                        t[n + i] = (e >>> (8 * (r ? i : 3 - i))) & 255;
                }
                function B(t, e, n, r, i, s) {
                    if (n + r > t.length)
                        throw new RangeError("Index out of range");
                    if (n < 0) throw new RangeError("Index out of range");
                }
                function j(t, e, n, r, s) {
                    return (
                        s || B(t, 0, n, 4), i.write(t, e, n, r, 23, 4), n + 4
                    );
                }
                function _(t, e, n, r, s) {
                    return (
                        s || B(t, 0, n, 8), i.write(t, e, n, r, 52, 8), n + 8
                    );
                }
                (h.prototype.slice = function (t, e) {
                    var n,
                        r = this.length;
                    if (
                        ((t = ~~t) < 0
                            ? (t += r) < 0 && (t = 0)
                            : t > r && (t = r),
                        (e = void 0 === e ? r : ~~e) < 0
                            ? (e += r) < 0 && (e = 0)
                            : e > r && (e = r),
                        e < t && (e = t),
                        h.TYPED_ARRAY_SUPPORT)
                    )
                        (n = this.subarray(t, e)).__proto__ = h.prototype;
                    else {
                        var i = e - t;
                        n = new h(i, void 0);
                        for (var s = 0; s < i; ++s) n[s] = this[s + t];
                    }
                    return n;
                }),
                    (h.prototype.readUIntLE = function (t, e, n) {
                        (t |= 0), (e |= 0), n || H(t, e, this.length);
                        for (
                            var r = this[t], i = 1, s = 0;
                            ++s < e && (i *= 256);

                        )
                            r += this[t + s] * i;
                        return r;
                    }),
                    (h.prototype.readUIntBE = function (t, e, n) {
                        (t |= 0), (e |= 0), n || H(t, e, this.length);
                        for (
                            var r = this[t + --e], i = 1;
                            e > 0 && (i *= 256);

                        )
                            r += this[t + --e] * i;
                        return r;
                    }),
                    (h.prototype.readUInt8 = function (t, e) {
                        return e || H(t, 1, this.length), this[t];
                    }),
                    (h.prototype.readUInt16LE = function (t, e) {
                        return (
                            e || H(t, 2, this.length),
                            this[t] | (this[t + 1] << 8)
                        );
                    }),
                    (h.prototype.readUInt16BE = function (t, e) {
                        return (
                            e || H(t, 2, this.length),
                            (this[t] << 8) | this[t + 1]
                        );
                    }),
                    (h.prototype.readUInt32LE = function (t, e) {
                        return (
                            e || H(t, 4, this.length),
                            (this[t] |
                                (this[t + 1] << 8) |
                                (this[t + 2] << 16)) +
                                16777216 * this[t + 3]
                        );
                    }),
                    (h.prototype.readUInt32BE = function (t, e) {
                        return (
                            e || H(t, 4, this.length),
                            16777216 * this[t] +
                                ((this[t + 1] << 16) |
                                    (this[t + 2] << 8) |
                                    this[t + 3])
                        );
                    }),
                    (h.prototype.readIntLE = function (t, e, n) {
                        (t |= 0), (e |= 0), n || H(t, e, this.length);
                        for (
                            var r = this[t], i = 1, s = 0;
                            ++s < e && (i *= 256);

                        )
                            r += this[t + s] * i;
                        return r >= (i *= 128) && (r -= Math.pow(2, 8 * e)), r;
                    }),
                    (h.prototype.readIntBE = function (t, e, n) {
                        (t |= 0), (e |= 0), n || H(t, e, this.length);
                        for (
                            var r = e, i = 1, s = this[t + --r];
                            r > 0 && (i *= 256);

                        )
                            s += this[t + --r] * i;
                        return s >= (i *= 128) && (s -= Math.pow(2, 8 * e)), s;
                    }),
                    (h.prototype.readInt8 = function (t, e) {
                        return (
                            e || H(t, 1, this.length),
                            128 & this[t] ? -1 * (255 - this[t] + 1) : this[t]
                        );
                    }),
                    (h.prototype.readInt16LE = function (t, e) {
                        e || H(t, 2, this.length);
                        var n = this[t] | (this[t + 1] << 8);
                        return 32768 & n ? 4294901760 | n : n;
                    }),
                    (h.prototype.readInt16BE = function (t, e) {
                        e || H(t, 2, this.length);
                        var n = this[t + 1] | (this[t] << 8);
                        return 32768 & n ? 4294901760 | n : n;
                    }),
                    (h.prototype.readInt32LE = function (t, e) {
                        return (
                            e || H(t, 4, this.length),
                            this[t] |
                                (this[t + 1] << 8) |
                                (this[t + 2] << 16) |
                                (this[t + 3] << 24)
                        );
                    }),
                    (h.prototype.readInt32BE = function (t, e) {
                        return (
                            e || H(t, 4, this.length),
                            (this[t] << 24) |
                                (this[t + 1] << 16) |
                                (this[t + 2] << 8) |
                                this[t + 3]
                        );
                    }),
                    (h.prototype.readFloatLE = function (t, e) {
                        return (
                            e || H(t, 4, this.length),
                            i.read(this, t, !0, 23, 4)
                        );
                    }),
                    (h.prototype.readFloatBE = function (t, e) {
                        return (
                            e || H(t, 4, this.length),
                            i.read(this, t, !1, 23, 4)
                        );
                    }),
                    (h.prototype.readDoubleLE = function (t, e) {
                        return (
                            e || H(t, 8, this.length),
                            i.read(this, t, !0, 52, 8)
                        );
                    }),
                    (h.prototype.readDoubleBE = function (t, e) {
                        return (
                            e || H(t, 8, this.length),
                            i.read(this, t, !1, 52, 8)
                        );
                    }),
                    (h.prototype.writeUIntLE = function (t, e, n, r) {
                        (t = +t),
                            (e |= 0),
                            (n |= 0),
                            r || I(this, t, e, n, Math.pow(2, 8 * n) - 1, 0);
                        var i = 1,
                            s = 0;
                        for (this[e] = 255 & t; ++s < n && (i *= 256); )
                            this[e + s] = (t / i) & 255;
                        return e + n;
                    }),
                    (h.prototype.writeUIntBE = function (t, e, n, r) {
                        (t = +t),
                            (e |= 0),
                            (n |= 0),
                            r || I(this, t, e, n, Math.pow(2, 8 * n) - 1, 0);
                        var i = n - 1,
                            s = 1;
                        for (this[e + i] = 255 & t; --i >= 0 && (s *= 256); )
                            this[e + i] = (t / s) & 255;
                        return e + n;
                    }),
                    (h.prototype.writeUInt8 = function (t, e, n) {
                        return (
                            (t = +t),
                            (e |= 0),
                            n || I(this, t, e, 1, 255, 0),
                            h.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)),
                            (this[e] = 255 & t),
                            e + 1
                        );
                    }),
                    (h.prototype.writeUInt16LE = function (t, e, n) {
                        return (
                            (t = +t),
                            (e |= 0),
                            n || I(this, t, e, 2, 65535, 0),
                            h.TYPED_ARRAY_SUPPORT
                                ? ((this[e] = 255 & t), (this[e + 1] = t >>> 8))
                                : R(this, t, e, !0),
                            e + 2
                        );
                    }),
                    (h.prototype.writeUInt16BE = function (t, e, n) {
                        return (
                            (t = +t),
                            (e |= 0),
                            n || I(this, t, e, 2, 65535, 0),
                            h.TYPED_ARRAY_SUPPORT
                                ? ((this[e] = t >>> 8), (this[e + 1] = 255 & t))
                                : R(this, t, e, !1),
                            e + 2
                        );
                    }),
                    (h.prototype.writeUInt32LE = function (t, e, n) {
                        return (
                            (t = +t),
                            (e |= 0),
                            n || I(this, t, e, 4, 4294967295, 0),
                            h.TYPED_ARRAY_SUPPORT
                                ? ((this[e + 3] = t >>> 24),
                                  (this[e + 2] = t >>> 16),
                                  (this[e + 1] = t >>> 8),
                                  (this[e] = 255 & t))
                                : N(this, t, e, !0),
                            e + 4
                        );
                    }),
                    (h.prototype.writeUInt32BE = function (t, e, n) {
                        return (
                            (t = +t),
                            (e |= 0),
                            n || I(this, t, e, 4, 4294967295, 0),
                            h.TYPED_ARRAY_SUPPORT
                                ? ((this[e] = t >>> 24),
                                  (this[e + 1] = t >>> 16),
                                  (this[e + 2] = t >>> 8),
                                  (this[e + 3] = 255 & t))
                                : N(this, t, e, !1),
                            e + 4
                        );
                    }),
                    (h.prototype.writeIntLE = function (t, e, n, r) {
                        if (((t = +t), (e |= 0), !r)) {
                            var i = Math.pow(2, 8 * n - 1);
                            I(this, t, e, n, i - 1, -i);
                        }
                        var s = 0,
                            a = 1,
                            o = 0;
                        for (this[e] = 255 & t; ++s < n && (a *= 256); )
                            t < 0 &&
                                0 === o &&
                                0 !== this[e + s - 1] &&
                                (o = 1),
                                (this[e + s] = (((t / a) >> 0) - o) & 255);
                        return e + n;
                    }),
                    (h.prototype.writeIntBE = function (t, e, n, r) {
                        if (((t = +t), (e |= 0), !r)) {
                            var i = Math.pow(2, 8 * n - 1);
                            I(this, t, e, n, i - 1, -i);
                        }
                        var s = n - 1,
                            a = 1,
                            o = 0;
                        for (this[e + s] = 255 & t; --s >= 0 && (a *= 256); )
                            t < 0 &&
                                0 === o &&
                                0 !== this[e + s + 1] &&
                                (o = 1),
                                (this[e + s] = (((t / a) >> 0) - o) & 255);
                        return e + n;
                    }),
                    (h.prototype.writeInt8 = function (t, e, n) {
                        return (
                            (t = +t),
                            (e |= 0),
                            n || I(this, t, e, 1, 127, -128),
                            h.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)),
                            t < 0 && (t = 255 + t + 1),
                            (this[e] = 255 & t),
                            e + 1
                        );
                    }),
                    (h.prototype.writeInt16LE = function (t, e, n) {
                        return (
                            (t = +t),
                            (e |= 0),
                            n || I(this, t, e, 2, 32767, -32768),
                            h.TYPED_ARRAY_SUPPORT
                                ? ((this[e] = 255 & t), (this[e + 1] = t >>> 8))
                                : R(this, t, e, !0),
                            e + 2
                        );
                    }),
                    (h.prototype.writeInt16BE = function (t, e, n) {
                        return (
                            (t = +t),
                            (e |= 0),
                            n || I(this, t, e, 2, 32767, -32768),
                            h.TYPED_ARRAY_SUPPORT
                                ? ((this[e] = t >>> 8), (this[e + 1] = 255 & t))
                                : R(this, t, e, !1),
                            e + 2
                        );
                    }),
                    (h.prototype.writeInt32LE = function (t, e, n) {
                        return (
                            (t = +t),
                            (e |= 0),
                            n || I(this, t, e, 4, 2147483647, -2147483648),
                            h.TYPED_ARRAY_SUPPORT
                                ? ((this[e] = 255 & t),
                                  (this[e + 1] = t >>> 8),
                                  (this[e + 2] = t >>> 16),
                                  (this[e + 3] = t >>> 24))
                                : N(this, t, e, !0),
                            e + 4
                        );
                    }),
                    (h.prototype.writeInt32BE = function (t, e, n) {
                        return (
                            (t = +t),
                            (e |= 0),
                            n || I(this, t, e, 4, 2147483647, -2147483648),
                            t < 0 && (t = 4294967295 + t + 1),
                            h.TYPED_ARRAY_SUPPORT
                                ? ((this[e] = t >>> 24),
                                  (this[e + 1] = t >>> 16),
                                  (this[e + 2] = t >>> 8),
                                  (this[e + 3] = 255 & t))
                                : N(this, t, e, !1),
                            e + 4
                        );
                    }),
                    (h.prototype.writeFloatLE = function (t, e, n) {
                        return j(this, t, e, !0, n);
                    }),
                    (h.prototype.writeFloatBE = function (t, e, n) {
                        return j(this, t, e, !1, n);
                    }),
                    (h.prototype.writeDoubleLE = function (t, e, n) {
                        return _(this, t, e, !0, n);
                    }),
                    (h.prototype.writeDoubleBE = function (t, e, n) {
                        return _(this, t, e, !1, n);
                    }),
                    (h.prototype.copy = function (t, e, n, r) {
                        if (
                            (n || (n = 0),
                            r || 0 === r || (r = this.length),
                            e >= t.length && (e = t.length),
                            e || (e = 0),
                            r > 0 && r < n && (r = n),
                            r === n)
                        )
                            return 0;
                        if (0 === t.length || 0 === this.length) return 0;
                        if (e < 0)
                            throw new RangeError("targetStart out of bounds");
                        if (n < 0 || n >= this.length)
                            throw new RangeError("sourceStart out of bounds");
                        if (r < 0)
                            throw new RangeError("sourceEnd out of bounds");
                        r > this.length && (r = this.length),
                            t.length - e < r - n && (r = t.length - e + n);
                        var i,
                            s = r - n;
                        if (this === t && n < e && e < r)
                            for (i = s - 1; i >= 0; --i) t[i + e] = this[i + n];
                        else if (s < 1e3 || !h.TYPED_ARRAY_SUPPORT)
                            for (i = 0; i < s; ++i) t[i + e] = this[i + n];
                        else
                            Uint8Array.prototype.set.call(
                                t,
                                this.subarray(n, n + s),
                                e
                            );
                        return s;
                    }),
                    (h.prototype.fill = function (t, e, n, r) {
                        if ("string" == typeof t) {
                            if (
                                ("string" == typeof e
                                    ? ((r = e), (e = 0), (n = this.length))
                                    : "string" == typeof n &&
                                      ((r = n), (n = this.length)),
                                1 === t.length)
                            ) {
                                var i = t.charCodeAt(0);
                                i < 256 && (t = i);
                            }
                            if (void 0 !== r && "string" != typeof r)
                                throw new TypeError(
                                    "encoding must be a string"
                                );
                            if ("string" == typeof r && !h.isEncoding(r))
                                throw new TypeError("Unknown encoding: " + r);
                        } else "number" == typeof t && (t &= 255);
                        if (e < 0 || this.length < e || this.length < n)
                            throw new RangeError("Out of range index");
                        if (n <= e) return this;
                        var s;
                        if (
                            ((e >>>= 0),
                            (n = void 0 === n ? this.length : n >>> 0),
                            t || (t = 0),
                            "number" == typeof t)
                        )
                            for (s = e; s < n; ++s) this[s] = t;
                        else {
                            var a = h.isBuffer(t)
                                    ? t
                                    : L(new h(t, r).toString()),
                                o = a.length;
                            for (s = 0; s < n - e; ++s) this[s + e] = a[s % o];
                        }
                        return this;
                    });
                var V = /[^+\/0-9A-Za-z-_]/g;
                function K(t) {
                    return t < 16 ? "0" + t.toString(16) : t.toString(16);
                }
                function L(t, e) {
                    var n;
                    e = e || 1 / 0;
                    for (
                        var r = t.length, i = null, s = [], a = 0;
                        a < r;
                        ++a
                    ) {
                        if ((n = t.charCodeAt(a)) > 55295 && n < 57344) {
                            if (!i) {
                                if (n > 56319) {
                                    (e -= 3) > -1 && s.push(239, 191, 189);
                                    continue;
                                }
                                if (a + 1 === r) {
                                    (e -= 3) > -1 && s.push(239, 191, 189);
                                    continue;
                                }
                                i = n;
                                continue;
                            }
                            if (n < 56320) {
                                (e -= 3) > -1 && s.push(239, 191, 189), (i = n);
                                continue;
                            }
                            n = 65536 + (((i - 55296) << 10) | (n - 56320));
                        } else i && (e -= 3) > -1 && s.push(239, 191, 189);
                        if (((i = null), n < 128)) {
                            if ((e -= 1) < 0) break;
                            s.push(n);
                        } else if (n < 2048) {
                            if ((e -= 2) < 0) break;
                            s.push((n >> 6) | 192, (63 & n) | 128);
                        } else if (n < 65536) {
                            if ((e -= 3) < 0) break;
                            s.push(
                                (n >> 12) | 224,
                                ((n >> 6) & 63) | 128,
                                (63 & n) | 128
                            );
                        } else {
                            if (!(n < 1114112))
                                throw new Error("Invalid code point");
                            if ((e -= 4) < 0) break;
                            s.push(
                                (n >> 18) | 240,
                                ((n >> 12) & 63) | 128,
                                ((n >> 6) & 63) | 128,
                                (63 & n) | 128
                            );
                        }
                    }
                    return s;
                }
                function k(t) {
                    return r.toByteArray(
                        (function (t) {
                            if (
                                (t = (function (t) {
                                    return t.trim
                                        ? t.trim()
                                        : t.replace(/^\s+|\s+$/g, "");
                                })(t).replace(V, "")).length < 2
                            )
                                return "";
                            for (; t.length % 4 != 0; ) t += "=";
                            return t;
                        })(t)
                    );
                }
                function M(t, e, n, r) {
                    for (
                        var i = 0;
                        i < r && !(i + n >= e.length || i >= t.length);
                        ++i
                    )
                        e[i + n] = t[i];
                    return i;
                }
            }.call(this, n(4)));
        },
        function (t, e) {
            var n;
            n = (function () {
                return this;
            })();
            try {
                n = n || new Function("return this")();
            } catch (t) {
                "object" == typeof window && (n = window);
            }
            t.exports = n;
        },
        function (t, e, n) {
            "use strict";
            (e.byteLength = function (t) {
                var e = u(t),
                    n = e[0],
                    r = e[1];
                return (3 * (n + r)) / 4 - r;
            }),
                (e.toByteArray = function (t) {
                    for (
                        var e,
                            n = u(t),
                            r = n[0],
                            a = n[1],
                            o = new s(
                                (function (t, e, n) {
                                    return (3 * (e + n)) / 4 - n;
                                })(0, r, a)
                            ),
                            h = 0,
                            c = a > 0 ? r - 4 : r,
                            l = 0;
                        l < c;
                        l += 4
                    )
                        (e =
                            (i[t.charCodeAt(l)] << 18) |
                            (i[t.charCodeAt(l + 1)] << 12) |
                            (i[t.charCodeAt(l + 2)] << 6) |
                            i[t.charCodeAt(l + 3)]),
                            (o[h++] = (e >> 16) & 255),
                            (o[h++] = (e >> 8) & 255),
                            (o[h++] = 255 & e);
                    return (
                        2 === a &&
                            ((e =
                                (i[t.charCodeAt(l)] << 2) |
                                (i[t.charCodeAt(l + 1)] >> 4)),
                            (o[h++] = 255 & e)),
                        1 === a &&
                            ((e =
                                (i[t.charCodeAt(l)] << 10) |
                                (i[t.charCodeAt(l + 1)] << 4) |
                                (i[t.charCodeAt(l + 2)] >> 2)),
                            (o[h++] = (e >> 8) & 255),
                            (o[h++] = 255 & e)),
                        o
                    );
                }),
                (e.fromByteArray = function (t) {
                    for (
                        var e,
                            n = t.length,
                            i = n % 3,
                            s = [],
                            a = 0,
                            o = n - i;
                        a < o;
                        a += 16383
                    )
                        s.push(c(t, a, a + 16383 > o ? o : a + 16383));
                    return (
                        1 === i
                            ? ((e = t[n - 1]),
                              s.push(r[e >> 2] + r[(e << 4) & 63] + "=="))
                            : 2 === i &&
                              ((e = (t[n - 2] << 8) + t[n - 1]),
                              s.push(
                                  r[e >> 10] +
                                      r[(e >> 4) & 63] +
                                      r[(e << 2) & 63] +
                                      "="
                              )),
                        s.join("")
                    );
                });
            for (
                var r = [],
                    i = [],
                    s = "undefined" != typeof Uint8Array ? Uint8Array : Array,
                    a =
                        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                    o = 0,
                    h = a.length;
                o < h;
                ++o
            )
                (r[o] = a[o]), (i[a.charCodeAt(o)] = o);
            function u(t) {
                var e = t.length;
                if (e % 4 > 0)
                    throw new Error(
                        "Invalid string. Length must be a multiple of 4"
                    );
                var n = t.indexOf("=");
                return -1 === n && (n = e), [n, n === e ? 0 : 4 - (n % 4)];
            }
            function c(t, e, n) {
                for (var i, s, a = [], o = e; o < n; o += 3)
                    (i =
                        ((t[o] << 16) & 16711680) +
                        ((t[o + 1] << 8) & 65280) +
                        (255 & t[o + 2])),
                        a.push(
                            r[((s = i) >> 18) & 63] +
                                r[(s >> 12) & 63] +
                                r[(s >> 6) & 63] +
                                r[63 & s]
                        );
                return a.join("");
            }
            (i["-".charCodeAt(0)] = 62), (i["_".charCodeAt(0)] = 63);
        },
        function (t, e) {
            (e.read = function (t, e, n, r, i) {
                var s,
                    a,
                    o = 8 * i - r - 1,
                    h = (1 << o) - 1,
                    u = h >> 1,
                    c = -7,
                    l = n ? i - 1 : 0,
                    f = n ? -1 : 1,
                    d = t[e + l];
                for (
                    l += f, s = d & ((1 << -c) - 1), d >>= -c, c += o;
                    c > 0;
                    s = 256 * s + t[e + l], l += f, c -= 8
                );
                for (
                    a = s & ((1 << -c) - 1), s >>= -c, c += r;
                    c > 0;
                    a = 256 * a + t[e + l], l += f, c -= 8
                );
                if (0 === s) s = 1 - u;
                else {
                    if (s === h) return a ? NaN : (1 / 0) * (d ? -1 : 1);
                    (a += Math.pow(2, r)), (s -= u);
                }
                return (d ? -1 : 1) * a * Math.pow(2, s - r);
            }),
                (e.write = function (t, e, n, r, i, s) {
                    var a,
                        o,
                        h,
                        u = 8 * s - i - 1,
                        c = (1 << u) - 1,
                        l = c >> 1,
                        f = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
                        d = r ? 0 : s - 1,
                        g = r ? 1 : -1,
                        p = e < 0 || (0 === e && 1 / e < 0) ? 1 : 0;
                    for (
                        e = Math.abs(e),
                            isNaN(e) || e === 1 / 0
                                ? ((o = isNaN(e) ? 1 : 0), (a = c))
                                : ((a = Math.floor(Math.log(e) / Math.LN2)),
                                  e * (h = Math.pow(2, -a)) < 1 &&
                                      (a--, (h *= 2)),
                                  (e +=
                                      a + l >= 1
                                          ? f / h
                                          : f * Math.pow(2, 1 - l)) *
                                      h >=
                                      2 && (a++, (h /= 2)),
                                  a + l >= c
                                      ? ((o = 0), (a = c))
                                      : a + l >= 1
                                      ? ((o = (e * h - 1) * Math.pow(2, i)),
                                        (a += l))
                                      : ((o =
                                            e *
                                            Math.pow(2, l - 1) *
                                            Math.pow(2, i)),
                                        (a = 0)));
                        i >= 8;
                        t[n + d] = 255 & o, d += g, o /= 256, i -= 8
                    );
                    for (
                        a = (a << i) | o, u += i;
                        u > 0;
                        t[n + d] = 255 & a, d += g, a /= 256, u -= 8
                    );
                    t[n + d - g] |= 128 * p;
                });
        },
        function (t, e) {
            var n = {}.toString;
            t.exports =
                Array.isArray ||
                function (t) {
                    return "[object Array]" == n.call(t);
                };
        },
        function (t, e, n) {
            function r(t) {
                this.options = t || { locator: {} };
            }
            function i() {
                this.cdata = !1;
            }
            function s(t, e) {
                (e.lineNumber = t.lineNumber),
                    (e.columnNumber = t.columnNumber);
            }
            function a(t, e, n) {
                return "string" == typeof t
                    ? t.substr(e, n)
                    : t.length >= e + n || e
                    ? new java.lang.String(t, e, n) + ""
                    : t;
            }
            function o(t, e) {
                t.currentElement
                    ? t.currentElement.appendChild(e)
                    : t.doc.appendChild(e);
            }
            (r.prototype.parseFromString = function (t, e) {
                var n = this.options,
                    r = new u(),
                    s = n.domBuilder || new i(),
                    a = n.errorHandler,
                    o = n.locator,
                    c = n.xmlns || {},
                    l = /\/x?html?$/.test(e),
                    f = l
                        ? h.entityMap
                        : { lt: "<", gt: ">", amp: "&", quot: '"', apos: "'" };
                return (
                    o && s.setDocumentLocator(o),
                    (r.errorHandler = (function (t, e, n) {
                        if (!t) {
                            if (e instanceof i) return e;
                            t = e;
                        }
                        var r = {},
                            s = t instanceof Function;
                        function a(e) {
                            var i = t[e];
                            !i &&
                                s &&
                                (i =
                                    2 == t.length
                                        ? function (n) {
                                              t(e, n);
                                          }
                                        : t),
                                (r[e] =
                                    (i &&
                                        function (t) {
                                            i(
                                                "[xmldom " +
                                                    e +
                                                    "]\t" +
                                                    t +
                                                    (function (t) {
                                                        if (t)
                                                            return (
                                                                "\n@" +
                                                                (t.systemId ||
                                                                    "") +
                                                                "#[line:" +
                                                                t.lineNumber +
                                                                ",col:" +
                                                                t.columnNumber +
                                                                "]"
                                                            );
                                                    })(n)
                                            );
                                        }) ||
                                    function () {});
                        }
                        return (
                            (n = n || {}),
                            a("warning"),
                            a("error"),
                            a("fatalError"),
                            r
                        );
                    })(a, s, o)),
                    (r.domBuilder = n.domBuilder || s),
                    l && (c[""] = "http://www.w3.org/1999/xhtml"),
                    (c.xml = c.xml || "http://www.w3.org/XML/1998/namespace"),
                    t
                        ? r.parse(t, c, f)
                        : r.errorHandler.error("invalid doc source"),
                    s.doc
                );
            }),
                (i.prototype = {
                    startDocument: function () {
                        (this.doc = new c().createDocument(null, null, null)),
                            this.locator &&
                                (this.doc.documentURI = this.locator.systemId);
                    },
                    startElement: function (t, e, n, r) {
                        var i = this.doc,
                            a = i.createElementNS(t, n || e),
                            h = r.length;
                        o(this, a),
                            (this.currentElement = a),
                            this.locator && s(this.locator, a);
                        for (var u = 0; u < h; u++) {
                            t = r.getURI(u);
                            var c = r.getValue(u),
                                l =
                                    ((n = r.getQName(u)),
                                    i.createAttributeNS(t, n));
                            this.locator && s(r.getLocator(u), l),
                                (l.value = l.nodeValue = c),
                                a.setAttributeNode(l);
                        }
                    },
                    endElement: function (t, e, n) {
                        var r = this.currentElement;
                        r.tagName, (this.currentElement = r.parentNode);
                    },
                    startPrefixMapping: function (t, e) {},
                    endPrefixMapping: function (t) {},
                    processingInstruction: function (t, e) {
                        var n = this.doc.createProcessingInstruction(t, e);
                        this.locator && s(this.locator, n), o(this, n);
                    },
                    ignorableWhitespace: function (t, e, n) {},
                    characters: function (t, e, n) {
                        if ((t = a.apply(this, arguments))) {
                            if (this.cdata)
                                var r = this.doc.createCDATASection(t);
                            else r = this.doc.createTextNode(t);
                            this.currentElement
                                ? this.currentElement.appendChild(r)
                                : /^\s*$/.test(t) && this.doc.appendChild(r),
                                this.locator && s(this.locator, r);
                        }
                    },
                    skippedEntity: function (t) {},
                    endDocument: function () {
                        this.doc.normalize();
                    },
                    setDocumentLocator: function (t) {
                        (this.locator = t) && (t.lineNumber = 0);
                    },
                    comment: function (t, e, n) {
                        t = a.apply(this, arguments);
                        var r = this.doc.createComment(t);
                        this.locator && s(this.locator, r), o(this, r);
                    },
                    startCDATA: function () {
                        this.cdata = !0;
                    },
                    endCDATA: function () {
                        this.cdata = !1;
                    },
                    startDTD: function (t, e, n) {
                        var r = this.doc.implementation;
                        if (r && r.createDocumentType) {
                            var i = r.createDocumentType(t, e, n);
                            this.locator && s(this.locator, i), o(this, i);
                        }
                    },
                    warning: function (t) {},
                    error: function (t) {},
                    fatalError: function (t) {
                        throw t;
                    },
                }),
                "endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(
                    /\w+/g,
                    function (t) {
                        i.prototype[t] = function () {
                            return null;
                        };
                    }
                );
            var h = n(9),
                u = n(10).XMLReader,
                c = (e.DOMImplementation = n(1).DOMImplementation);
            (e.XMLSerializer = n(1).XMLSerializer), (e.DOMParser = r);
        },
        function (t, e) {
            e.entityMap = {
                lt: "<",
                gt: ">",
                amp: "&",
                quot: '"',
                apos: "'",
                Agrave: "À",
                Aacute: "Á",
                Acirc: "Â",
                Atilde: "Ã",
                Auml: "Ä",
                Aring: "Å",
                AElig: "Æ",
                Ccedil: "Ç",
                Egrave: "È",
                Eacute: "É",
                Ecirc: "Ê",
                Euml: "Ë",
                Igrave: "Ì",
                Iacute: "Í",
                Icirc: "Î",
                Iuml: "Ï",
                ETH: "Ð",
                Ntilde: "Ñ",
                Ograve: "Ò",
                Oacute: "Ó",
                Ocirc: "Ô",
                Otilde: "Õ",
                Ouml: "Ö",
                Oslash: "Ø",
                Ugrave: "Ù",
                Uacute: "Ú",
                Ucirc: "Û",
                Uuml: "Ü",
                Yacute: "Ý",
                THORN: "Þ",
                szlig: "ß",
                agrave: "à",
                aacute: "á",
                acirc: "â",
                atilde: "ã",
                auml: "ä",
                aring: "å",
                aelig: "æ",
                ccedil: "ç",
                egrave: "è",
                eacute: "é",
                ecirc: "ê",
                euml: "ë",
                igrave: "ì",
                iacute: "í",
                icirc: "î",
                iuml: "ï",
                eth: "ð",
                ntilde: "ñ",
                ograve: "ò",
                oacute: "ó",
                ocirc: "ô",
                otilde: "õ",
                ouml: "ö",
                oslash: "ø",
                ugrave: "ù",
                uacute: "ú",
                ucirc: "û",
                uuml: "ü",
                yacute: "ý",
                thorn: "þ",
                yuml: "ÿ",
                nbsp: " ",
                iexcl: "¡",
                cent: "¢",
                pound: "£",
                curren: "¤",
                yen: "¥",
                brvbar: "¦",
                sect: "§",
                uml: "¨",
                copy: "©",
                ordf: "ª",
                laquo: "«",
                not: "¬",
                shy: "­­",
                reg: "®",
                macr: "¯",
                deg: "°",
                plusmn: "±",
                sup2: "²",
                sup3: "³",
                acute: "´",
                micro: "µ",
                para: "¶",
                middot: "·",
                cedil: "¸",
                sup1: "¹",
                ordm: "º",
                raquo: "»",
                frac14: "¼",
                frac12: "½",
                frac34: "¾",
                iquest: "¿",
                times: "×",
                divide: "÷",
                forall: "∀",
                part: "∂",
                exist: "∃",
                empty: "∅",
                nabla: "∇",
                isin: "∈",
                notin: "∉",
                ni: "∋",
                prod: "∏",
                sum: "∑",
                minus: "−",
                lowast: "∗",
                radic: "√",
                prop: "∝",
                infin: "∞",
                ang: "∠",
                and: "∧",
                or: "∨",
                cap: "∩",
                cup: "∪",
                int: "∫",
                there4: "∴",
                sim: "∼",
                cong: "≅",
                asymp: "≈",
                ne: "≠",
                equiv: "≡",
                le: "≤",
                ge: "≥",
                sub: "⊂",
                sup: "⊃",
                nsub: "⊄",
                sube: "⊆",
                supe: "⊇",
                oplus: "⊕",
                otimes: "⊗",
                perp: "⊥",
                sdot: "⋅",
                Alpha: "Α",
                Beta: "Β",
                Gamma: "Γ",
                Delta: "Δ",
                Epsilon: "Ε",
                Zeta: "Ζ",
                Eta: "Η",
                Theta: "Θ",
                Iota: "Ι",
                Kappa: "Κ",
                Lambda: "Λ",
                Mu: "Μ",
                Nu: "Ν",
                Xi: "Ξ",
                Omicron: "Ο",
                Pi: "Π",
                Rho: "Ρ",
                Sigma: "Σ",
                Tau: "Τ",
                Upsilon: "Υ",
                Phi: "Φ",
                Chi: "Χ",
                Psi: "Ψ",
                Omega: "Ω",
                alpha: "α",
                beta: "β",
                gamma: "γ",
                delta: "δ",
                epsilon: "ε",
                zeta: "ζ",
                eta: "η",
                theta: "θ",
                iota: "ι",
                kappa: "κ",
                lambda: "λ",
                mu: "μ",
                nu: "ν",
                xi: "ξ",
                omicron: "ο",
                pi: "π",
                rho: "ρ",
                sigmaf: "ς",
                sigma: "σ",
                tau: "τ",
                upsilon: "υ",
                phi: "φ",
                chi: "χ",
                psi: "ψ",
                omega: "ω",
                thetasym: "ϑ",
                upsih: "ϒ",
                piv: "ϖ",
                OElig: "Œ",
                oelig: "œ",
                Scaron: "Š",
                scaron: "š",
                Yuml: "Ÿ",
                fnof: "ƒ",
                circ: "ˆ",
                tilde: "˜",
                ensp: " ",
                emsp: " ",
                thinsp: " ",
                zwnj: "‌",
                zwj: "‍",
                lrm: "‎",
                rlm: "‏",
                ndash: "–",
                mdash: "—",
                lsquo: "‘",
                rsquo: "’",
                sbquo: "‚",
                ldquo: "“",
                rdquo: "”",
                bdquo: "„",
                dagger: "†",
                Dagger: "‡",
                bull: "•",
                hellip: "…",
                permil: "‰",
                prime: "′",
                Prime: "″",
                lsaquo: "‹",
                rsaquo: "›",
                oline: "‾",
                euro: "€",
                trade: "™",
                larr: "←",
                uarr: "↑",
                rarr: "→",
                darr: "↓",
                harr: "↔",
                crarr: "↵",
                lceil: "⌈",
                rceil: "⌉",
                lfloor: "⌊",
                rfloor: "⌋",
                loz: "◊",
                spades: "♠",
                clubs: "♣",
                hearts: "♥",
                diams: "♦",
            };
        },
        function (t, e) {
            var n =
                    /[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/,
                r = new RegExp(
                    "[\\-\\.0-9" +
                        n.source.slice(1, -1) +
                        "\\u00B7\\u0300-\\u036F\\u203F-\\u2040]"
                ),
                i = new RegExp(
                    "^" +
                        n.source +
                        r.source +
                        "*(?::" +
                        n.source +
                        r.source +
                        "*)?$"
                );
            function s() {}
            function a(t, e) {
                return (
                    (e.lineNumber = t.lineNumber),
                    (e.columnNumber = t.columnNumber),
                    e
                );
            }
            function o(t, e, n, r, i, s) {
                for (var a, o = ++e, h = 0; ; ) {
                    var u = t.charAt(o);
                    switch (u) {
                        case "=":
                            if (1 === h) (a = t.slice(e, o)), (h = 3);
                            else {
                                if (2 !== h)
                                    throw new Error(
                                        "attribute equal must after attrName"
                                    );
                                h = 3;
                            }
                            break;
                        case "'":
                        case '"':
                            if (3 === h || 1 === h) {
                                if (
                                    (1 === h &&
                                        (s.warning(
                                            'attribute value must after "="'
                                        ),
                                        (a = t.slice(e, o))),
                                    (e = o + 1),
                                    !((o = t.indexOf(u, e)) > 0))
                                )
                                    throw new Error(
                                        "attribute value no end '" +
                                            u +
                                            "' match"
                                    );
                                (c = t.slice(e, o).replace(/&#?\w+;/g, i)),
                                    n.add(a, c, e - 1),
                                    (h = 5);
                            } else {
                                if (4 != h)
                                    throw new Error(
                                        'attribute value must after "="'
                                    );
                                (c = t.slice(e, o).replace(/&#?\w+;/g, i)),
                                    n.add(a, c, e),
                                    s.warning(
                                        'attribute "' +
                                            a +
                                            '" missed start quot(' +
                                            u +
                                            ")!!"
                                    ),
                                    (e = o + 1),
                                    (h = 5);
                            }
                            break;
                        case "/":
                            switch (h) {
                                case 0:
                                    n.setTagName(t.slice(e, o));
                                case 5:
                                case 6:
                                case 7:
                                    (h = 7), (n.closed = !0);
                                case 4:
                                case 1:
                                case 2:
                                    break;
                                default:
                                    throw new Error(
                                        "attribute invalid close char('/')"
                                    );
                            }
                            break;
                        case "":
                            return (
                                s.error("unexpected end of input"),
                                0 == h && n.setTagName(t.slice(e, o)),
                                o
                            );
                        case ">":
                            switch (h) {
                                case 0:
                                    n.setTagName(t.slice(e, o));
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                case 4:
                                case 1:
                                    "/" === (c = t.slice(e, o)).slice(-1) &&
                                        ((n.closed = !0), (c = c.slice(0, -1)));
                                case 2:
                                    2 === h && (c = a),
                                        4 == h
                                            ? (s.warning(
                                                  'attribute "' +
                                                      c +
                                                      '" missed quot(")!!'
                                              ),
                                              n.add(
                                                  a,
                                                  c.replace(/&#?\w+;/g, i),
                                                  e
                                              ))
                                            : (("http://www.w3.org/1999/xhtml" ===
                                                  r[""] &&
                                                  c.match(
                                                      /^(?:disabled|checked|selected)$/i
                                                  )) ||
                                                  s.warning(
                                                      'attribute "' +
                                                          c +
                                                          '" missed value!! "' +
                                                          c +
                                                          '" instead!!'
                                                  ),
                                              n.add(c, c, e));
                                    break;
                                case 3:
                                    throw new Error("attribute value missed!!");
                            }
                            return o;
                        case "":
                            u = " ";
                        default:
                            if (u <= " ")
                                switch (h) {
                                    case 0:
                                        n.setTagName(t.slice(e, o)), (h = 6);
                                        break;
                                    case 1:
                                        (a = t.slice(e, o)), (h = 2);
                                        break;
                                    case 4:
                                        var c = t
                                            .slice(e, o)
                                            .replace(/&#?\w+;/g, i);
                                        s.warning(
                                            'attribute "' +
                                                c +
                                                '" missed quot(")!!'
                                        ),
                                            n.add(a, c, e);
                                    case 5:
                                        h = 6;
                                }
                            else
                                switch (h) {
                                    case 2:
                                        n.tagName,
                                            ("http://www.w3.org/1999/xhtml" ===
                                                r[""] &&
                                                a.match(
                                                    /^(?:disabled|checked|selected)$/i
                                                )) ||
                                                s.warning(
                                                    'attribute "' +
                                                        a +
                                                        '" missed value!! "' +
                                                        a +
                                                        '" instead2!!'
                                                ),
                                            n.add(a, a, e),
                                            (e = o),
                                            (h = 1);
                                        break;
                                    case 5:
                                        s.warning(
                                            'attribute space is required"' +
                                                a +
                                                '"!!'
                                        );
                                    case 6:
                                        (h = 1), (e = o);
                                        break;
                                    case 3:
                                        (h = 4), (e = o);
                                        break;
                                    case 7:
                                        throw new Error(
                                            "elements closed character '/' and '>' must be connected to"
                                        );
                                }
                    }
                    o++;
                }
            }
            function h(t, e, n) {
                for (var r = t.tagName, i = null, s = t.length; s--; ) {
                    var a = t[s],
                        o = a.qName,
                        h = a.value;
                    if ((d = o.indexOf(":")) > 0)
                        var u = (a.prefix = o.slice(0, d)),
                            c = o.slice(d + 1),
                            f = "xmlns" === u && c;
                    else (c = o), (u = null), (f = "xmlns" === o && "");
                    (a.localName = c),
                        !1 !== f &&
                            (null == i && ((i = {}), l(n, (n = {}))),
                            (n[f] = i[f] = h),
                            (a.uri = "http://www.w3.org/2000/xmlns/"),
                            e.startPrefixMapping(f, h));
                }
                for (s = t.length; s--; )
                    (u = (a = t[s]).prefix) &&
                        ("xml" === u &&
                            (a.uri = "http://www.w3.org/XML/1998/namespace"),
                        "xmlns" !== u && (a.uri = n[u || ""]));
                var d;
                (d = r.indexOf(":")) > 0
                    ? ((u = t.prefix = r.slice(0, d)),
                      (c = t.localName = r.slice(d + 1)))
                    : ((u = null), (c = t.localName = r));
                var g = (t.uri = n[u || ""]);
                if ((e.startElement(g, c, r, t), !t.closed))
                    return (t.currentNSMap = n), (t.localNSMap = i), !0;
                if ((e.endElement(g, c, r), i))
                    for (u in i) e.endPrefixMapping(u);
            }
            function u(t, e, n, r, i) {
                if (/^(?:script|textarea)$/i.test(n)) {
                    var s = t.indexOf("</" + n + ">", e),
                        a = t.substring(e + 1, s);
                    if (/[&<]/.test(a))
                        return /^script$/i.test(n)
                            ? (i.characters(a, 0, a.length), s)
                            : ((a = a.replace(/&#?\w+;/g, r)),
                              i.characters(a, 0, a.length),
                              s);
                }
                return e + 1;
            }
            function c(t, e, n, r) {
                var i = r[n];
                return (
                    null == i &&
                        ((i = t.lastIndexOf("</" + n + ">")) < e &&
                            (i = t.lastIndexOf("</" + n)),
                        (r[n] = i)),
                    i < e
                );
            }
            function l(t, e) {
                for (var n in t) e[n] = t[n];
            }
            function f(t, e, n, r) {
                switch (t.charAt(e + 2)) {
                    case "-":
                        return "-" === t.charAt(e + 3)
                            ? (i = t.indexOf("--\x3e", e + 4)) > e
                                ? (n.comment(t, e + 4, i - e - 4), i + 3)
                                : (r.error("Unclosed comment"), -1)
                            : -1;
                    default:
                        if ("CDATA[" == t.substr(e + 3, 6)) {
                            var i = t.indexOf("]]>", e + 9);
                            return (
                                n.startCDATA(),
                                n.characters(t, e + 9, i - e - 9),
                                n.endCDATA(),
                                i + 3
                            );
                        }
                        var s = (function (t, e) {
                                var n,
                                    r = [],
                                    i =
                                        /'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;
                                for (
                                    i.lastIndex = e, i.exec(t);
                                    (n = i.exec(t));

                                )
                                    if ((r.push(n), n[1])) return r;
                            })(t, e),
                            a = s.length;
                        if (a > 1 && /!doctype/i.test(s[0][0])) {
                            var o = s[1][0],
                                h =
                                    a > 3 &&
                                    /^public$/i.test(s[2][0]) &&
                                    s[3][0],
                                u = a > 4 && s[4][0],
                                c = s[a - 1];
                            return (
                                n.startDTD(
                                    o,
                                    h && h.replace(/^(['"])(.*?)\1$/, "$2"),
                                    u && u.replace(/^(['"])(.*?)\1$/, "$2")
                                ),
                                n.endDTD(),
                                c.index + c[0].length
                            );
                        }
                }
                return -1;
            }
            function d(t, e, n) {
                var r = t.indexOf("?>", e);
                if (r) {
                    var i = t
                        .substring(e, r)
                        .match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);
                    return i
                        ? (i[0].length,
                          n.processingInstruction(i[1], i[2]),
                          r + 2)
                        : -1;
                }
                return -1;
            }
            function g(t) {}
            (s.prototype = {
                parse: function (t, e, n) {
                    var r = this.domBuilder;
                    r.startDocument(),
                        l(e, (e = {})),
                        (function (t, e, n, r, i) {
                            function s(t) {
                                var e = t.slice(1, -1);
                                return e in n
                                    ? n[e]
                                    : "#" === e.charAt(0)
                                    ? (function (t) {
                                          if (t > 65535) {
                                              var e =
                                                      55296 +
                                                      ((t -= 65536) >> 10),
                                                  n = 56320 + (1023 & t);
                                              return String.fromCharCode(e, n);
                                          }
                                          return String.fromCharCode(t);
                                      })(
                                          parseInt(
                                              e.substr(1).replace("x", "0x")
                                          )
                                      )
                                    : (i.error("entity not found:" + t), t);
                            }
                            function l(e) {
                                if (e > E) {
                                    var n = t
                                        .substring(E, e)
                                        .replace(/&#?\w+;/g, s);
                                    S && p(E),
                                        r.characters(n, 0, e - E),
                                        (E = e);
                                }
                            }
                            function p(e, n) {
                                for (; e >= m && (n = v.exec(t)); )
                                    (y = n.index),
                                        (m = y + n[0].length),
                                        S.lineNumber++;
                                S.columnNumber = e - y + 1;
                            }
                            for (
                                var y = 0,
                                    m = 0,
                                    v = /.*(?:\r\n?|\n)|.*$/g,
                                    S = r.locator,
                                    A = [{ currentNSMap: e }],
                                    b = {},
                                    E = 0;
                                ;

                            ) {
                                try {
                                    var x = t.indexOf("<", E);
                                    if (x < 0) {
                                        if (!t.substr(E).match(/^\s*$/)) {
                                            var w = r.doc,
                                                F = w.createTextNode(
                                                    t.substr(E)
                                                );
                                            w.appendChild(F),
                                                (r.currentElement = F);
                                        }
                                        return;
                                    }
                                    switch ((x > E && l(x), t.charAt(x + 1))) {
                                        case "/":
                                            var P = t.indexOf(">", x + 3),
                                                C = t.substring(x + 2, P),
                                                D = A.pop();
                                            P < 0
                                                ? ((C = t
                                                      .substring(x + 2)
                                                      .replace(/[\s<].*/, "")),
                                                  i.error(
                                                      "end tag name: " +
                                                          C +
                                                          " is not complete:" +
                                                          D.tagName
                                                  ),
                                                  (P = x + 1 + C.length))
                                                : C.match(/\s</) &&
                                                  ((C = C.replace(
                                                      /[\s<].*/,
                                                      ""
                                                  )),
                                                  i.error(
                                                      "end tag name: " +
                                                          C +
                                                          " maybe not complete"
                                                  ),
                                                  (P = x + 1 + C.length));
                                            var O = D.localNSMap,
                                                T = D.tagName == C;
                                            if (
                                                T ||
                                                (D.tagName &&
                                                    D.tagName.toLowerCase() ==
                                                        C.toLowerCase())
                                            ) {
                                                if (
                                                    (r.endElement(
                                                        D.uri,
                                                        D.localName,
                                                        C
                                                    ),
                                                    O)
                                                )
                                                    for (var H in O)
                                                        r.endPrefixMapping(H);
                                                T ||
                                                    i.fatalError(
                                                        "end tag name: " +
                                                            C +
                                                            " is not match the current start tagName:" +
                                                            D.tagName
                                                    );
                                            } else A.push(D);
                                            P++;
                                            break;
                                        case "?":
                                            S && p(x), (P = d(t, x, r));
                                            break;
                                        case "!":
                                            S && p(x), (P = f(t, x, r, i));
                                            break;
                                        default:
                                            S && p(x);
                                            var I = new g(),
                                                R =
                                                    A[A.length - 1]
                                                        .currentNSMap,
                                                N =
                                                    ((P = o(t, x, I, R, s, i)),
                                                    I.length);
                                            if (
                                                (!I.closed &&
                                                    c(t, P, I.tagName, b) &&
                                                    ((I.closed = !0),
                                                    n.nbsp ||
                                                        i.warning(
                                                            "unclosed xml attribute"
                                                        )),
                                                S && N)
                                            ) {
                                                for (
                                                    var B = a(S, {}), j = 0;
                                                    j < N;
                                                    j++
                                                ) {
                                                    var _ = I[j];
                                                    p(_.offset),
                                                        (_.locator = a(S, {}));
                                                }
                                                (r.locator = B),
                                                    h(I, r, R) && A.push(I),
                                                    (r.locator = S);
                                            } else h(I, r, R) && A.push(I);
                                            "http://www.w3.org/1999/xhtml" !==
                                                I.uri || I.closed
                                                ? P++
                                                : (P = u(
                                                      t,
                                                      P,
                                                      I.tagName,
                                                      s,
                                                      r
                                                  ));
                                    }
                                } catch (t) {
                                    i.error("element parse error: " + t),
                                        (P = -1);
                                }
                                P > E ? (E = P) : l(Math.max(x, E) + 1);
                            }
                        })(t, e, n, r, this.errorHandler),
                        r.endDocument();
                },
            }),
                (g.prototype = {
                    setTagName: function (t) {
                        if (!i.test(t)) throw new Error("invalid tagName:" + t);
                        this.tagName = t;
                    },
                    add: function (t, e, n) {
                        if (!i.test(t))
                            throw new Error("invalid attribute:" + t);
                        this[this.length++] = { qName: t, value: e, offset: n };
                    },
                    length: 0,
                    getLocalName: function (t) {
                        return this[t].localName;
                    },
                    getLocator: function (t) {
                        return this[t].locator;
                    },
                    getQName: function (t) {
                        return this[t].qName;
                    },
                    getURI: function (t) {
                        return this[t].uri;
                    },
                    getValue: function (t) {
                        return this[t].value;
                    },
                }),
                (e.XMLReader = s);
        },
        function (t, e) {
            var n, r, i, s, a;
            (n = [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F",
                "G",
                "H",
                "I",
                "J",
                "K",
                "L",
                "M",
                "N",
                "O",
                "P",
                "Q",
                "R",
                "S",
                "T",
                "U",
                "V",
                "W",
                "X",
                "Y",
                "Z",
                "a",
                "b",
                "c",
                "d",
                "e",
                "f",
                "g",
                "h",
                "i",
                "j",
                "k",
                "l",
                "m",
                "n",
                "o",
                "p",
                "q",
                "r",
                "s",
                "t",
                "u",
                "v",
                "w",
                "x",
                "y",
                "z",
                "0",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "+",
                "/",
            ]),
                (r = function (t) {
                    for (var e = new Array(); t > 0; ) {
                        var n = t % 2;
                        (t = Math.floor(t / 2)), e.push(n);
                    }
                    return e.reverse(), e;
                }),
                (i = function (t) {
                    for (var e = 0, n = 0, r = t.length - 1; r >= 0; --r)
                        1 == t[r] && (e += Math.pow(2, n)), ++n;
                    return e;
                }),
                (s = function (t, e) {
                    for (
                        var n = 8 - (t + 1) + 6 * (t - 1) - e.length;
                        --n >= 0;

                    )
                        e.unshift(0);
                    for (var r = [], i = t; --i >= 0; ) r.push(1);
                    r.push(0);
                    for (var s = 0, a = 8 - (t + 1); s < a; ++s) r.push(e[s]);
                    for (var o = 0; o < t - 1; ++o) {
                        r.push(1), r.push(0);
                        for (var h = 6; --h >= 0; ) r.push(e[s++]);
                    }
                    return r;
                }),
                (a = {
                    encoder: function (t) {
                        for (
                            var e = [], a = [], o = 0, h = t.length;
                            o < h;
                            ++o
                        ) {
                            var u = t.charCodeAt(o),
                                c = r(u);
                            if (u < 128) {
                                for (var l = 8 - c.length; --l >= 0; )
                                    c.unshift(0);
                                a = a.concat(c);
                            } else
                                u >= 128 && u <= 2047
                                    ? (a = a.concat(s(2, c)))
                                    : u >= 2048 && u <= 65535
                                    ? (a = a.concat(s(3, c)))
                                    : u >= 65536 && u <= 2097151
                                    ? (a = a.concat(s(4, c)))
                                    : u >= 2097152 && u <= 67108863
                                    ? (a = a.concat(s(5, c)))
                                    : u >= 4e6 &&
                                      u <= 2147483647 &&
                                      (a = a.concat(s(6, c)));
                        }
                        var f = 0;
                        for (o = 0, h = a.length; o < h; o += 6) {
                            var d = o + 6 - h;
                            2 == d ? (f = 2) : 4 == d && (f = 4);
                            for (var g = f; --g >= 0; ) a.push(0);
                            e.push(i(a.slice(o, o + 6)));
                        }
                        var p = "";
                        for (o = 0, h = e.length; o < h; ++o) p += n[e[o]];
                        for (o = 0, h = f / 2; o < h; ++o) p += "=";
                        return p;
                    },
                    decoder: function (t) {
                        var e = t.length,
                            s = 0;
                        "=" == t.charAt(e - 1) &&
                            ("=" == t.charAt(e - 2)
                                ? ((s = 4), (t = t.substring(0, e - 2)))
                                : ((s = 2), (t = t.substring(0, e - 1))));
                        for (var a = [], o = 0, h = t.length; o < h; ++o)
                            for (
                                var u = t.charAt(o), c = 0, l = n.length;
                                c < l;
                                ++c
                            )
                                if (u == n[c]) {
                                    var f = r(c),
                                        d = f.length;
                                    if (6 - d > 0)
                                        for (var g = 6 - d; g > 0; --g)
                                            f.unshift(0);
                                    a = a.concat(f);
                                    break;
                                }
                        s > 0 && (a = a.slice(0, a.length - s));
                        var p = [],
                            y = [];
                        for (o = 0, h = a.length; o < h; )
                            if (0 == a[o])
                                (p = p.concat(i(a.slice(o, o + 8)))), (o += 8);
                            else {
                                for (var m = 0; o < h && 1 == a[o]; ) ++m, ++o;
                                for (
                                    y = y.concat(a.slice(o + 1, o + 8 - m)),
                                        o += 8 - m;
                                    m > 1;

                                )
                                    (y = y.concat(a.slice(o + 2, o + 8))),
                                        (o += 8),
                                        --m;
                                (p = p.concat(i(y))), (y = []);
                            }
                        return p;
                    },
                }),
                (t.exports = { CusBASE64: a });
        },
        function (t, e, n) {
            "use strict";
            n.r(e);
            var r = n(0);
            function i(t) {
                return "function" == typeof t;
            }
            const s = new Uint8Array([
                0, 7, 14, 9, 28, 27, 18, 21, 56, 63, 54, 49, 36, 35, 42, 45,
                112, 119, 126, 121, 108, 107, 98, 101, 72, 79, 70, 65, 84, 83,
                90, 93, 224, 231, 238, 233, 252, 251, 242, 245, 216, 223, 214,
                209, 196, 195, 202, 205, 144, 151, 158, 153, 140, 139, 130, 133,
                168, 175, 166, 161, 180, 179, 186, 189, 199, 192, 201, 206, 219,
                220, 213, 210, 255, 248, 241, 246, 227, 228, 237, 234, 183, 176,
                185, 190, 171, 172, 165, 162, 143, 136, 129, 134, 147, 148, 157,
                154, 39, 32, 41, 46, 59, 60, 53, 50, 31, 24, 17, 22, 3, 4, 13,
                10, 87, 80, 89, 94, 75, 76, 69, 66, 111, 104, 97, 102, 115, 116,
                125, 122, 137, 142, 135, 128, 149, 146, 155, 156, 177, 182, 191,
                184, 173, 170, 163, 164, 249, 254, 247, 240, 229, 226, 235, 236,
                193, 198, 207, 200, 221, 218, 211, 212, 105, 110, 103, 96, 117,
                114, 123, 124, 81, 86, 95, 88, 77, 74, 67, 68, 25, 30, 23, 16,
                5, 2, 11, 12, 33, 38, 47, 40, 61, 58, 51, 52, 78, 73, 64, 71,
                82, 85, 92, 91, 118, 113, 120, 127, 106, 109, 100, 99, 62, 57,
                48, 55, 34, 37, 44, 43, 6, 1, 8, 15, 26, 29, 20, 19, 174, 169,
                160, 167, 178, 181, 188, 187, 150, 145, 152, 159, 138, 141, 132,
                131, 222, 217, 208, 215, 194, 197, 204, 203, 230, 225, 232, 239,
                250, 253, 244, 243,
            ]);
            function a(t, e) {
                let n = 0,
                    r = 0;
                for (; e--; ) (n = s[n ^ t[r]]), r++;
                return 85 ^ n;
            }
            var o = n(2),
                h = (n(8), n(11));
            const u = (t, e) => {
                    const n = new Uint8Array(t),
                        r = n[2],
                        s = (function (t) {
                            return Array.prototype.map
                                .call(new Uint8Array(t), function (t) {
                                    return ("00" + t.toString(16)).slice(-2);
                                })
                                .join("");
                        })(n.subarray(3, 3 + r));
                    e.delegate &&
                        i(e.delegate.onReceivePenMACAddress) &&
                        e.delegate.onReceivePenMACAddress({ MAC: s });
                },
                c = (t, e) =>
                    e._write
                        .writeValue(t)
                        .then((t) => {
                            Promise.resolve(t);
                        })
                        .catch((t) => {
                            Promise.reject(t);
                        }),
                l = (t) => {
                    t.openStream = !0;
                    const e = new Uint8Array([2, 24, 0, 124]);
                    return (
                        (t.readPenInfoType = r.ReadPenInfoType.startCoord),
                        (t.expectPackageIndex = -1),
                        (t.hoverMode = !1),
                        c(e, t)
                    );
                },
                f = (t) => {
                    const e = new Uint8Array([2, 20, 0, 128]);
                    return c(e, t);
                },
                d = (t, e) => {
                    const n = new Uint8Array(t),
                        s = n[2],
                        a = n[3];
                    let o = 3;
                    for (; o - 3 < s; ) {
                        let s = 0,
                            h = 1;
                        switch (
                            (3 === o
                                ? ((s = 7 & a), (h = 1))
                                : ((s = 7 & n[o]), (h = n[o] >> 3)),
                            s < 8 && r.StrokeEvent[s],
                            s)
                        ) {
                            case 1:
                                {
                                    n[o + 2];
                                    const t = n[o + 3],
                                        s =
                                            n[o + 4] +
                                            256 * n[o + 5] +
                                            256 * n[o + 6] * 256 +
                                            256 * n[o + 7] * 256 * 256;
                                    (e.timestamp =
                                        r.DEFAULT_TIMESTAMP + 1e3 * s + 4 * t),
                                        e.delegate &&
                                            i(e.delegate.onPenDown) &&
                                            e.delegate.onPenDown({
                                                coordMode: e.coordmode,
                                            }),
                                        (o += 8);
                                }
                                break;
                            case 3:
                                for (let t = 0; t < h; t++) {
                                    const t = n[o + 1],
                                        r = n[o + 2],
                                        s = n[o + 3],
                                        a = n[o + 4],
                                        h = n[o + 5],
                                        u = n[o + 6],
                                        c = n[o + 7];
                                    let l, f, d, g;
                                    (g = t | ((15 & r) << 8)),
                                        (d = ((240 & r) >> 4) | (s << 4)),
                                        (f = a | (h << 8)),
                                        (0 == (l = 4095 & (u | (c << 8))) &&
                                            0 == f &&
                                            0 == d &&
                                            0 == g) ||
                                            (e.strPage = `${l}.${f}.${d}.${g}`),
                                        e.delegate &&
                                            i(e.delegate.onPenPageChange) &&
                                            e.delegate.onPenPageChange({
                                                pageAddress: e.strPage,
                                            }),
                                        (o += 7);
                                }
                                o += 1;
                                break;
                            case 4:
                                for (let t = 0; t < h; t++) {
                                    const t = n[o + 1],
                                        r = (n[o + 2], n[o + 2] >> 2),
                                        s = n[o + 3],
                                        a = n[o + 4],
                                        h = n[o + 5],
                                        u = 256 * a + s,
                                        c = 256 * n[o + 6] + h;
                                    e.strPage || (e.strPage = "0"),
                                        (e.timestamp = e.timestamp + 4 * r),
                                        (e.lastPointX = u),
                                        (e.lastPointY = c),
                                        e.delegate &&
                                            i(
                                                e.delegate
                                                    .onReceivePenStrokeData
                                            ) &&
                                            e.delegate.onReceivePenStrokeData({
                                                coordX: e.lastPointX,
                                                coordY: e.lastPointY,
                                                coordForce: t,
                                                pageAddress: e.strPage,
                                                time: e.timestamp,
                                                coordMode: e.coordmode,
                                            }),
                                        (o += 6);
                                }
                                o += 1;
                                break;
                            case 6:
                                for (let r = 0; r < h; r++) {
                                    const r = n[o + 1],
                                        s = (n[o + 2], n[o + 2] >> 2),
                                        a = new Int8Array(t),
                                        h = a[o + 3],
                                        u = a[o + 4];
                                    (e.lastPointX += h),
                                        (e.lastPointY += u),
                                        e.strPage || (e.strPage = "0"),
                                        (e.timestamp = e.timestamp + 4 * s),
                                        e.delegate &&
                                            i(
                                                e.delegate
                                                    .onReceivePenStrokeData
                                            ) &&
                                            e.delegate.onReceivePenStrokeData({
                                                coordX: e.lastPointX,
                                                coordY: e.lastPointY,
                                                coordForce: r,
                                                pageAddress: e.strPage,
                                                time: e.timestamp,
                                                coordMode: e.coordmode,
                                            }),
                                        (o += 4);
                                }
                                o += 1;
                                break;
                            case 7:
                                e.delegate &&
                                    i(e.delegate.onPenUp) &&
                                    e.delegate.onPenUp({
                                        coordMode: e.coordmode,
                                    }),
                                    (o += 6);
                        }
                        e.resetOfflineDataSize > 0 &&
                            ((e.resetOfflineDataSize =
                                e.resetOfflineDataSize - 8 * h),
                            e.delegate &&
                                i(e.delegate.onReceivedPenOfflineData) &&
                                e.delegate.onReceivedPenOfflineData({
                                    totalSize: e.totalOfflineDataSize,
                                    receiveSize:
                                        e.totalOfflineDataSize -
                                        e.resetOfflineDataSize,
                                }),
                            e.resetOfflineDataSize <= 0 &&
                                ((e.totalOfflineDataSize = 0),
                                (e.resetOfflineDataSize = 0),
                                e.delegate &&
                                    i(
                                        e.delegate.onFinishReceivePenOfflineData
                                    ) &&
                                    e.delegate.onFinishReceivePenOfflineData()));
                    }
                },
                g = (t, e) => {
                    const n = new Uint8Array(t)[3] >> 3,
                        r = e.lostPackages.length,
                        i = r + 5,
                        s = new ArrayBuffer(i),
                        o = new Uint8Array(s);
                    (o[0] = 2),
                        (o[1] = 31),
                        (o[2] = r + 1),
                        (o[3] = (n + 1) % 32);
                    for (let t = 0; t < e.lostPackages.length; t++)
                        o[4 + t] = e.lostPackages[t];
                    (o[i - 1] = a(o, i - 1)), c(o.buffer, e);
                };
            class p {
                constructor() {
                    (this.sdkVersion = r.SDK_VERSION),
                        (this._device = null),
                        (this._server = null),
                        (this._write = null),
                        (this._notify = null),
                        (this._name = null),
                        (this._characteristics = new Map()),
                        (this.delegate = void 0),
                        (this.canBeUsed = !1),
                        (this.loadLicense = (t, e) => {
                            const n = ((t, e) => {
                                // let n = new o.RSAKey();
                                // n = o.KEYUTIL.getKey(r.publicKey_pkcs8);
                                // var i = h.CusBASE64.decoder(t),
                                //     s = String.fromCharCode.apply(null, i);
                                // return !!n.verifyString(s, e);
                                return true;
                            })(t, e);
                            return (this.canBeUsed = n), this.canBeUsed;
                        }),
                        (this.hoverMode = !1),
                        (this.openStream = !1),
                        (this.adapterAvailable = !1),
                        (this.discovering = !1),
                        (this.connectedDeviceId = ""),
                        (this.services = []),
                        (this.characteristics = []),
                        (this.characteristics1 = []),
                        (this.writeServiceId = ""),
                        (this.writeCharacteristicsId = ""),
                        (this.readServiceId = ""),
                        (this.readCharacteristicsId = ""),
                        (this.notifyServiceId = ""),
                        (this.notifyCharacteristicsId = ""),
                        (this.startReceiveStroke = () => l(this)),
                        (this.stopReceiveStroke = () =>
                            ((t) => {
                                t.coordArray.push(
                                    r.CoordType.STOP_RECEIVE_MODE_NUM
                                ),
                                    (t.expectPackageIndex = -1);
                                const e = new Uint8Array([2, 18, 1, 0, 24]);
                                return c(e, t);
                            })(this)),
                        (this.receiveStorageMode = () =>
                            ((t) => {
                                t.openStream = !0;
                                const e = new Uint8Array([2, 24, 0, 124]);
                                return (
                                    (t.readPenInfoType =
                                        r.ReadPenInfoType.storgeCoord),
                                    (t.expectPackageIndex = -1),
                                    (t.hoverMode = !1),
                                    c(e, t)
                                );
                            })(this)),
                        (this.receiveRealtimeMode = () =>
                            ((t) => {
                                t.coordArray.push(
                                    r.CoordType.RECEIVE_REALTIME_MODE_NUM
                                ),
                                    (t.expectPackageIndex = -1);
                                const e = new Uint8Array([2, 18, 1, 3, 17]);
                                return c(e, t);
                            })(this)),
                        (this.setHoverMode = (t) =>
                            ((t, e) => {
                                if (1 == e) {
                                    (t.hoverMode = !0),
                                        t.coordArray.push(
                                            r.CoordType.SET_HOVER_MODE_NUM
                                        ),
                                        (t.expectPackageIndex = -1);
                                    const e = new Uint8Array([2, 16, 0, 212]);
                                    return c(e, t);
                                }
                                return l(t);
                            })(this, t)),
                        (this.getPenInfo = () =>
                            f(this).then(() =>
                                ((t) => {
                                    const e = new Uint8Array([2, 24, 0, 124]);
                                    return (
                                        (t.readPenInfoType =
                                            r.ReadPenInfoType.Info),
                                        c(e, t)
                                    );
                                })(this)
                            )),
                        (this.getPenBatteryInfo = () =>
                            ((t) => {
                                const e = new Uint8Array([2, 24, 0, 124]);
                                return (
                                    (t.readPenInfoType =
                                        r.ReadPenInfoType.Battery),
                                    c(e, t)
                                );
                            })(this)),
                        (this.getPenSerial = () => f(this)),
                        (this.getPenMACAddress = () =>
                            ((t) => {
                                const e = new Uint8Array([2, 19, 0, 235]);
                                return c(e, t);
                            })(this)),
                        (this.getPenRTC = () =>
                            ((t) => {
                                const e = new Uint8Array([2, 21, 0, 149]);
                                return c(e, t);
                            })(this)),
                        (this.setPenRTC = (t) =>
                            ((t, e = r.DEFAULT_TIMESTAMP) => {
                                const n = (e - r.DEFAULT_TIMESTAMP) / 1e3,
                                    i = parseInt(n / 16777216, 10),
                                    s = parseInt(
                                        (n - 256 * i * 256 * 256) / 65536,
                                        10
                                    ),
                                    o = parseInt(
                                        (n -
                                            256 * i * 256 * 256 -
                                            256 * s * 256) /
                                            256,
                                        10
                                    ),
                                    h = parseInt(
                                        n -
                                            256 * i * 256 * 256 -
                                            256 * s * 256 -
                                            256 * o,
                                        10
                                    ),
                                    u = new ArrayBuffer(8),
                                    l = new Uint8Array(u);
                                (l[0] = 2),
                                    (l[1] = 22),
                                    (l[2] = 4),
                                    (l[3] = h),
                                    (l[4] = o),
                                    (l[5] = s),
                                    (l[6] = i),
                                    (l[7] = a(l.subarray(0, 7), 7)),
                                    c(l.buffer, t);
                            })(this, t)),
                        (this.getPowerOffTime = () =>
                            ((t) => {
                                const e = new Uint8Array([2, 27, 0, 67]);
                                return c(e, t);
                            })(this)),
                        (this.setPowerOffTime = (t) =>
                            ((t, e = r.DEFAULT_TIMESTAMP) => {
                                const n = parseInt(e / 256, 10),
                                    i = parseInt(e - 256 * n, 10),
                                    s = new ArrayBuffer(8),
                                    o = new Uint8Array(s);
                                (o[0] = 2),
                                    (o[1] = 26),
                                    (o[2] = 2),
                                    (o[3] = i),
                                    (o[4] = n),
                                    (o[5] = a(o.subarray(0, 5), 5)),
                                    c(o.buffer, t);
                            })(this, t)),
                        (this.getPenOfflineDataSize = () =>
                            ((t) => {
                                const e = new Uint8Array([2, 24, 0, 124]);
                                return (
                                    (t.readPenInfoType =
                                        r.ReadPenInfoType.OffLineDataSize),
                                    c(e, t)
                                );
                            })(this)),
                        (this.clearPenOfflineData = () =>
                            ((t) => {
                                const e = new Uint8Array([2, 23, 0, 191]);
                                return c(e, t);
                            })(this)),
                        (this.getPenCoordMode = () =>
                            ((t) => {
                                const e = new Uint8Array(5);
                                return (
                                    (e[0] = 2),
                                    (e[1] = 17),
                                    (e[2] = 1),
                                    (e[3] = 19),
                                    (e[4] = 220),
                                    c(e, t)
                                );
                            })(this)),
                        (this.timestamp = r.DEFAULT_TIMESTAMP),
                        (this.serial = ""),
                        (this.strPage = ""),
                        (this.lastPointX = 0),
                        (this.lastPointY = 0),
                        (this.expectPackageIndex = -1),
                        (this.lostPackages = []),
                        (this.receivedPackages = {}),
                        (this.totalOfflineDataSize = 0),
                        (this.resetOfflineDataSize = 0),
                        (this.readPenInfoType = 0),
                        (this.coordmode = 0),
                        (this.upgradeURL = void 0),
                        (this.firmwareData = void 0),
                        (this.upgradeState = r.UpgradeState.Default),
                        (this.position = r.PositionType.App),
                        (this.isUpgrading = !1),
                        (this.rewriteHeaderTimer = void 0),
                        (this.rewriteHeaderTime = 0),
                        (this.coordArray = []),
                        (this.writingPackages = []),
                        (this.writingIndex = 0),
                        (this.writePackageTimer = void 0),
                        (this.writingBufferIndex = 0),
                        (this.rewriteBufferTime = 0),
                        (this.rewriteLastBufferTime = 0),
                        (this.rewriteLastBufferTimer = void 0),
                        (this.reconnectBLETime = 0),
                        (this.pParseArrayBuffer = (t) => {
                            const e = t;
                            if (2 === e[0])
                                switch (31 & e[1]) {
                                    case 31:
                                        ((t, e) => {
                                            const n = new Uint8Array(t),
                                                r = n[3] >> 3;
                                            let i = 0;
                                            -1 === e.expectPackageIndex &&
                                                (e.expectPackageIndex = r - 1);
                                            const s =
                                                r ===
                                                (i =
                                                    (e.expectPackageIndex + 1) %
                                                    32);
                                            if (r === e.expectPackageIndex)
                                                return void (
                                                    64 == (64 & n[1]) && g(t, e)
                                                );
                                            if (s) {
                                                let t =
                                                    e.lostPackages.indexOf(r);
                                                t > -1 &&
                                                    e.lostPackages.splice(t, 1);
                                            } else if (r > i)
                                                for (let t = i; t < r; t++)
                                                    -1 ===
                                                        e.lostPackages.indexOf(
                                                            t
                                                        ) &&
                                                        e.lostPackages.push(t);
                                            else {
                                                for (let t = i; t < 32; t++)
                                                    -1 ===
                                                        e.lostPackages.indexOf(
                                                            t
                                                        ) &&
                                                        e.lostPackages.push(t);
                                                for (let t = 0; t < r; t++)
                                                    -1 ===
                                                        e.lostPackages.indexOf(
                                                            t
                                                        ) &&
                                                        e.lostPackages.push(t);
                                            }
                                            64 == (64 & n[1]) && g(t, e),
                                                (e.receivedPackages[r] = t);
                                            let a = e.receivedPackages[i];
                                            for (; a; )
                                                (e.receivedPackages[i] =
                                                    void 0),
                                                    (e.expectPackageIndex =
                                                        (e.expectPackageIndex +
                                                            1) %
                                                        32),
                                                    (i =
                                                        (e.expectPackageIndex +
                                                            1) %
                                                        32),
                                                    (a = e.receivedPackages[i]),
                                                    d(t, e);
                                        })(t, this);
                                        break;
                                    case 16:
                                        this.coordmode =
                                            this.coordArray.shift();
                                        break;
                                    case 17:
                                        ((t, e) => {
                                            const n = new Uint8Array(t),
                                                r = n[3];
                                            if (
                                                (e.delegate &&
                                                    i(
                                                        e.delegate
                                                            .onPenCooordMode
                                                    ) &&
                                                    e.delegate.onPenCooordMode({
                                                        resultCode: address,
                                                        message: "",
                                                    }),
                                                19 == r &&
                                                    e.delegate &&
                                                    i(
                                                        e.delegate
                                                            .onPenCooordMode
                                                    ))
                                            ) {
                                                const t = 255 & n[4];
                                                0 == t
                                                    ? e.delegate.onPenCooordMode(
                                                          {
                                                              resultCode: t,
                                                              message:
                                                                  "停止接收坐标",
                                                          }
                                                      )
                                                    : 1 == t
                                                    ? e.delegate.onPenCooordMode(
                                                          {
                                                              resultCode: t,
                                                              message:
                                                                  "开始接收坐标",
                                                          }
                                                      )
                                                    : 2 == t
                                                    ? e.delegate.onPenCooordMode(
                                                          {
                                                              resultCode: t,
                                                              message:
                                                                  "接收存储模式",
                                                          }
                                                      )
                                                    : 3 == t
                                                    ? (e.delegate.onPenCooordMode(
                                                          {
                                                              resultCode: t,
                                                              message:
                                                                  "接收实时模式",
                                                          }
                                                      ),
                                                      mBlePenCoordModeCallback.onPenCooordMode(
                                                          t,
                                                          "接收实时模式"
                                                      ))
                                                    : 4 == t &&
                                                      e.delegate.onPenCooordMode(
                                                          {
                                                              resultCode: t,
                                                              message:
                                                                  "悬浮模式",
                                                          }
                                                      );
                                            }
                                        })(t, this);
                                        break;
                                    case 18:
                                        this.coordmode =
                                            this.coordArray.shift();
                                        break;
                                    case 19:
                                        u(t, this);
                                        break;
                                    case 20:
                                        ((t, e) => {
                                            const n = new Uint8Array(t),
                                                r = n[2],
                                                i = n.subarray(3, 3 + r);
                                            let s = "";
                                            for (
                                                var a = 0;
                                                a < i.byteLength;
                                                a++
                                            ) {
                                                const t = i[a];
                                                s += String.fromCharCode(t);
                                            }
                                            e.serial = s;
                                        })(t, this);
                                        break;
                                    case 21:
                                        ((t, e) => {
                                            const n = new Uint8Array(t),
                                                s =
                                                    n[3] +
                                                    256 * n[4] +
                                                    256 * n[5] * 256 +
                                                    256 * n[6] * 256 * 256,
                                                a =
                                                    r.DEFAULT_TIMESTAMP +
                                                    1e3 * s;
                                            (e.timestamp = a),
                                                e.delegate &&
                                                    i(
                                                        e.delegate
                                                            .onReceivePenRTC
                                                    ) &&
                                                    e.delegate.onReceivePenRTC({
                                                        timestamp: e.timestamp,
                                                    });
                                        })(t, this);
                                        break;
                                    case 24:
                                        ((t, e) => {
                                            const n = new Uint8Array(t),
                                                s = n[3],
                                                a = n[4],
                                                o =
                                                    n[5] +
                                                    (n[6] << 8) +
                                                    (n[7] << 16) +
                                                    (n[8] << 24),
                                                h = n[n.byteLength - 5],
                                                u = `${n[n.byteLength - 4]}.${
                                                    h >> 4
                                                }.${15 & h}`,
                                                l = n[n.byteLength - 3],
                                                f = `${n[n.byteLength - 2]}.${
                                                    l >> 4
                                                }.${15 & l}`;
                                            switch (e.readPenInfoType) {
                                                case r.ReadPenInfoType.Info:
                                                    e.delegate &&
                                                        i(
                                                            e.delegate
                                                                .onReceivePenInfo
                                                        ) &&
                                                        e.delegate.onReceivePenInfo(
                                                            {
                                                                PEN_ID: e.serial,
                                                                SWVar: u,
                                                                hversion: f,
                                                            }
                                                        );
                                                    break;
                                                case r.ReadPenInfoType.Battery:
                                                    e.delegate &&
                                                        i(
                                                            e.delegate
                                                                .onReceivePenBatteryInfo
                                                        ) &&
                                                        e.delegate.onReceivePenBatteryInfo(
                                                            { battery: s }
                                                        );
                                                    break;
                                                case r.ReadPenInfoType
                                                    .OffLineDataSize:
                                                    e.delegate &&
                                                        i(
                                                            e.delegate
                                                                .onReceivePenOfflineDataInfo
                                                        ) &&
                                                        e.delegate.onReceivePenOfflineDataInfo(
                                                            {
                                                                size: o,
                                                                percent: a,
                                                            }
                                                        );
                                                    break;
                                                case r.ReadPenInfoType
                                                    .startCoord:
                                                    o > 0 &&
                                                        e.delegate &&
                                                        i(
                                                            e.delegate
                                                                .onStartReceivePenOfflineData
                                                        ) &&
                                                        e.delegate.onStartReceivePenOfflineData(),
                                                        (e.totalOfflineDataSize =
                                                            o),
                                                        (e.resetOfflineDataSize =
                                                            o),
                                                        ((t) => {
                                                            t.coordArray.push(
                                                                r.CoordType
                                                                    .START_RECEIVE_MODE_NUM
                                                            ),
                                                                (t.expectPackageIndex =
                                                                    -1);
                                                            const e =
                                                                new Uint8Array([
                                                                    2, 18, 1, 1,
                                                                    31,
                                                                ]);
                                                            c(e, t);
                                                        })(e);
                                                    break;
                                                case r.ReadPenInfoType
                                                    .storgeCoord:
                                                    o > 0 &&
                                                        e.delegate &&
                                                        i(
                                                            e.delegate
                                                                .onStartReceivePenOfflineData
                                                        ) &&
                                                        e.delegate.onStartReceivePenOfflineData(),
                                                        (e.totalOfflineDataSize =
                                                            o),
                                                        (e.resetOfflineDataSize =
                                                            o),
                                                        ((t) => {
                                                            t.coordArray.push(
                                                                r.CoordType
                                                                    .RECEIVE_STORAGE_MODE_NUM
                                                            ),
                                                                (t.expectPackageIndex =
                                                                    -1);
                                                            const e =
                                                                new Uint8Array([
                                                                    2, 18, 1, 2,
                                                                    22,
                                                                ]);
                                                            c(e, t);
                                                        })(e);
                                            }
                                        })(t, this);
                                        break;
                                    case 25:
                                        break;
                                    case 27:
                                        ((t, e) => {
                                            const n = new Uint8Array(t),
                                                r = n[3] + 256 * n[4];
                                            (e.time = r),
                                                e.delegate &&
                                                    i(
                                                        e.delegate
                                                            .onReceivePenRTC
                                                    ) &&
                                                    e.delegate.onReceivePenPowerOffTime(
                                                        { time: e.time }
                                                    );
                                        })(t, this);
                                        break;
                                    case 28:
                                        ((t, e) => {
                                            const n = new Uint8Array(t),
                                                r = n[3],
                                                s = n[4];
                                            e.delegate &&
                                                i(
                                                    e.delegate
                                                        .onReceivePenEventWarning
                                                ) &&
                                                e.delegate.onReceivePenEventWarning(
                                                    { type: r, reason: s }
                                                );
                                        })(t, this);
                                        break;
                                    case 23:
                                        this.delegate &&
                                            i(
                                                this.delegate
                                                    .onClearPenOfflineData
                                            ) &&
                                            this.delegate.onClearPenOfflineData();
                                        break;
                                    case 8:
                                        1 == e[3]
                                            ? ((this.position =
                                                  r.PositionType.Root),
                                              ((t) => {
                                                  (t.endLatestPackageResponseTimes = 0),
                                                      (t.upgradeState =
                                                          r.UpgradeState.EndLatestPackage);
                                                  const e = new Uint8Array(5);
                                                  (e[0] = 2),
                                                      (e[1] = 66),
                                                      (e[2] = 1),
                                                      (e[3] = 0),
                                                      (e[4] = a(
                                                          e.subarray(0, 4),
                                                          4
                                                      )),
                                                      c(e, t);
                                              })(this))
                                            : ((this.position =
                                                  r.PositionType.App),
                                              this.isUpgrading &&
                                                  this.upgradeState ===
                                                      r.UpgradeState
                                                          .ReadingPosition &&
                                                  ((t) => {
                                                      t.upgradeState =
                                                          r.UpgradeState.SendingIAP;
                                                      const e = new Uint8Array(
                                                          4
                                                      );
                                                      (e[0] = 2),
                                                          (e[1] = 0),
                                                          (e[2] = 0),
                                                          (e[3] = a(
                                                              e.subarray(0, 3),
                                                              3
                                                          )),
                                                          c(e, t);
                                                  })(this));
                                        break;
                                    case 0:
                                        this.upgradeState ===
                                            r.UpgradeState.SendingIAP &&
                                            ((this.upgradeState =
                                                r.UpgradeState.ReconnectBLE),
                                            setTimeout(() => {
                                                this.pReconnectBLE(
                                                    this.connectedDeviceId
                                                );
                                            }, INTERVAL_RECONNECT_BLUETOOTH));
                                        break;
                                    case 3:
                                        ((t, e) => {
                                            const n = new Uint8Array(t),
                                                r = n[1],
                                                s = n[3];
                                            131 === r &&
                                                (15 === s
                                                    ? e.delegate &&
                                                      i(
                                                          e.delegate
                                                              .onPenUpgradeStateChange
                                                      ) &&
                                                      e.delegate.onPenUpgradeStateChange(
                                                          {
                                                              state: "更新成功",
                                                              error: void 0,
                                                              progress: 1,
                                                          }
                                                      )
                                                    : 6 === s &&
                                                      e.delegate &&
                                                      i(
                                                          e.delegate
                                                              .onPenUpgradeStateChange
                                                      ) &&
                                                      e.delegate.onPenUpgradeStateChange(
                                                          {
                                                              state: "更新成功",
                                                              error: void 0,
                                                              progress: 1,
                                                          }
                                                      ));
                                        })(t, this),
                                            this.pResetFirmwareUpgradeState();
                                        break;
                                    case 2: {
                                        const t = e[1],
                                            n = e[3];
                                        switch (this.upgradeState) {
                                            case r.UpgradeState
                                                .EndLatestPackage:
                                                194 === t
                                                    ? 1 == n &&
                                                      ((t) => {
                                                          const e =
                                                              new Uint8Array(5);
                                                          (e[0] = 2),
                                                              (e[1] = 66),
                                                              (e[2] = 1),
                                                              (e[3] = 1),
                                                              (e[4] = a(
                                                                  e.subarray(
                                                                      0,
                                                                      4
                                                                  ),
                                                                  4
                                                              )),
                                                              c(e, t);
                                                      })(this)
                                                    : 130 == t &&
                                                      (this
                                                          .endLatestPackageResponseTimes++,
                                                      2 ==
                                                          this
                                                              .endLatestPackageResponseTimes &&
                                                          this.pDownloadFirmwareDataThenUpgrade());
                                                break;
                                            case r.UpgradeState.WritingHeader:
                                                this.rewriteLastBufferTimer &&
                                                    clearTimeout(
                                                        this
                                                            .rewriteLastBufferTimer
                                                    ),
                                                    this.rewriteHeaderTimer &&
                                                        clearTimeout(
                                                            this
                                                                .rewriteHeaderTimer
                                                        ),
                                                    194 === t
                                                        ? this
                                                              .rewriteHeaderTime <
                                                          10
                                                            ? (this
                                                                  .rewriteHeaderTime++,
                                                              (this.rewriteHeaderTimer =
                                                                  setTimeout(
                                                                      this
                                                                          .pDownloadFirmwareDataThenUpgrade,
                                                                      INTERVAL_REWRITE_HEADER
                                                                  )))
                                                            : this.pCallbackState(
                                                                  {
                                                                      state: -1,
                                                                      error: "固件头部写入失败",
                                                                      progress: 0,
                                                                  }
                                                              )
                                                        : 130 == t &&
                                                          ((this.rewriteHeaderTime = 0),
                                                          15 == n
                                                              ? this.pCallbackState(
                                                                    {
                                                                        state: -1,
                                                                        error: "固件数据验证失败",
                                                                        progress: 0,
                                                                    }
                                                                )
                                                              : 6 == n &&
                                                                this.pWriteFirmwareBody(
                                                                    this
                                                                        .firmwareData
                                                                ));
                                                break;
                                            case r.UpgradeState.WritingBody:
                                                if (194 == t) {
                                                    if (
                                                        this.writingIndex <
                                                        this.writingPackages
                                                            .length
                                                    ) {
                                                        this
                                                            .writePackageTimer &&
                                                            clearTimeout(
                                                                this
                                                                    .writePackageTimer
                                                            );
                                                        const t =
                                                                this
                                                                    .writingPackages[
                                                                    this
                                                                        .writingIndex
                                                                ],
                                                            e =
                                                                this.pGetIndexOfSN(
                                                                    t,
                                                                    n
                                                                );
                                                        -1 !== e &&
                                                            (this.writePackageTimer =
                                                                setTimeout(
                                                                    () => {
                                                                        this.pWritePackage(
                                                                            t,
                                                                            e
                                                                        );
                                                                    },
                                                                    r.INTERVAL_REWRITE_PACKAGE
                                                                ));
                                                    }
                                                } else if (130 == t) {
                                                    const t =
                                                        (this.writingIndex +
                                                            1) /
                                                        this.writingPackages
                                                            .length;
                                                    if (15 == n)
                                                        this.pCallbackState({
                                                            state: -1,
                                                            error: "固件升级失败",
                                                            progress: t,
                                                        });
                                                    else if (6 == n)
                                                        if (
                                                            (this.pCallbackState(
                                                                {
                                                                    state: 0,
                                                                    error: void 0,
                                                                    progress: t,
                                                                }
                                                            ),
                                                            this.writingIndex <
                                                                this
                                                                    .writingPackages
                                                                    .length -
                                                                    1)
                                                        ) {
                                                            this.writingIndex++;
                                                            const t =
                                                                this
                                                                    .writingPackages[
                                                                    this
                                                                        .writingIndex
                                                                ];
                                                            this.pWritePackage(
                                                                t,
                                                                0
                                                            );
                                                        } else
                                                            ((t) => {
                                                                const e =
                                                                    new Uint8Array(
                                                                        4
                                                                    );
                                                                (e[0] = 2),
                                                                    (e[1] = 3),
                                                                    (e[2] = 0),
                                                                    (e[3] = a(
                                                                        e.subarray(
                                                                            0,
                                                                            3
                                                                        ),
                                                                        3
                                                                    )),
                                                                    c(e, t);
                                                            })(this);
                                                }
                                        }
                                    }
                                }
                        });
                }
                setCallbackDelegate(t) {
                    this.delegate = t;
                }
                disconnectPen() {
                    this._server &&
                        (this._server.disconnect(),
                        (this.openStream = !1),
                        (this._server = null),
                        (this._device = null));
                }
                scanAndConnectPen(t = null) {
                    if (0 == this.canBeUsed)
                        return Promise.reject("License is invalid");
                    let e = {
                        filters: [
                            {
                                namePrefix: "TD",
                                services: [
                                    "0000fff0-0000-1000-8000-00805f9b34fb",
                                ],
                            },
                        ],
                    };
                    return (
                        null != t && (e.filters[0].name = t),
                        window.$Navigator.$BlueTooth
                            // .requestDevice({ acceptAllDevices:true})
                            .requestDevice({
                                filters: [
                                    {
                                        namePrefix: "TD",
                                        services: [
                                            "0000fff0-0000-1000-8000-00805f9b34fb",
                                        ],
                                    },
                                    {
                                        namePrefix: "ADP"
                                    }
                                ],
                            })
                            .then((t) => {
                                this._device = t;
                                var e = -1;
                                return (
                                    t.addEventListener(
                                        "gattserverdisconnected",
                                        (t) => {
                                            if (
                                                (e++,
                                                (this.expectPackageIndex = -1),
                                                this.delegate &&
                                                    i(
                                                        this.delegate
                                                            .onPenConnectionStateChange
                                                    ))
                                            ) {
                                                let t = this._name,
                                                    n = !1;
                                                0 == e &&
                                                    (this.delegate.onPenConnectionStateChange(
                                                        { name: t, connect: n }
                                                    ),
                                                    (this._server = null));
                                            }
                                            this.openStream = !1;
                                        }
                                    ),
                                    (this._name = t.name),
                                    t.gatt.connect()
                                );
                            })
                            .then(
                                (t) => (
                                    (this._server = t), t.getPrimaryServices()
                                )
                            )
                            .then((t) => {
                                let e = Promise.resolve();
                                return (
                                    t.forEach((t) => {
                                        e = e.then((e) =>
                                            t.getCharacteristics().then((t) => {
                                                t.forEach((t) => {
                                                    "0000fff2-0000-1000-8000-00805f9b34fb" ==
                                                    t.uuid
                                                        ? (this._notify = t)
                                                        : "0000fff3-0000-1000-8000-00805f9b34fb" ==
                                                              t.uuid &&
                                                          (this._write = t);
                                                });
                                            })
                                        );
                                    }),
                                    e
                                );
                            })
                            .then(() => {
                                this._notify.addEventListener(
                                    "characteristicvaluechanged",
                                    (t) => {
                                        let e = t.target.value.buffer
                                                ? t.target.value
                                                : new DataView(t.target.value),
                                            n = e.byteLength,
                                            r = new Uint8Array(n);
                                        for (let t = 0; t < n; t++)
                                            r[t] = e.getUint8(t);
                                        this.pParseArrayBuffer(r);
                                    }
                                );
                            })
                            .then(() => {
                                if (
                                    (this._notify.startNotifications(),
                                    this.delegate &&
                                        i(
                                            this.delegate
                                                .onPenConnectionStateChange
                                        ))
                                ) {
                                    let t = this._name,
                                        e = !0;
                                    this.delegate.onPenConnectionStateChange({
                                        name: t,
                                        connect: e,
                                    });
                                }
                                return Promise.resolve(!0);
                            })
                    );
                }
                getSupportedProperties(t) {
                    let e = [];
                    for (const n in t.properties)
                        !0 === t.properties[n] && e.push(n.toUpperCase());
                    return "[" + e.join(", ") + "]";
                }
                onAdapterStateChanged(t) {}
                onDeviceAdded(t) {}
                onDeviceChanged(t) {}
                onDeviceRemoved(t) {}
                checkWebBluetoothAvailability() {
                    if (null == navigator.bluetooth) {
                        let t = !1,
                            e = "Bluetooth is not supported.";
                        return Promise.resolve({ status: t, msg: e });
                    }
                    return Promise.resolve()
                        .then((t) => navigator.bluetooth.getAvailability())
                        .then((t) => {
                            let e = t,
                                n = "This device supports Bluetooth!";
                            return (
                                0 == t && (n = "Bluetooth is not supported."),
                                Promise.resolve({ status: e, msg: n })
                            );
                        });
                }
            }
            var y;
            (p.getInstance =
                ((y = null),
                function () {
                    return y || (y = new p()), y;
                })),
                (e.default = p);
        },
    ]).default;
});
